{
  "address": "0xACB2e1a98244eB6e7f0d083E966cF8B3Ec6481DE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdg",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "addPlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "approvePlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedPlugins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "decreasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionAndSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionAndSwapETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "denyPlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "directPoolDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "increasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "increasePositionETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "pluginDecreasePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "pluginIncreasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pluginTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "plugins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "removePlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swapETHToTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swapTokensToETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9fb578894d67d491bcfaa4fead32ef65a57a1a467b4939714501870745be57f0",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0xACB2e1a98244eB6e7f0d083E966cF8B3Ec6481DE",
    "transactionIndex": 5,
    "gasUsed": "2118186",
    "logsBloom": "0x
    "blockHash": "0x0417dda67fd584589301458b67eb1da8484ee2092eeb5f0994a5523c43ba40a4",
    "transactionHash": "0x9fb578894d67d491bcfaa4fead32ef65a57a1a467b4939714501870745be57f0",
    "logs": [],
    "blockNumber": 17664221,
    "cumulativeGasUsed": "2938659",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x67B200de87Dc9B67310417c8B23BeE034F69ba41",
    "0x2D91f3755E286a1c9d9ddfE33a0974da61D10E2a",
    "0x90D2753010931972e7cb30b2fBFD1194E015104e"
  ],
  "numDeployments": 1,
  "solcInputHash": "a5c1ec6ed734a994a4a7c4ed9bed389b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"approvePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedPlugins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"decreasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"}],\"name\":\"decreasePositionAndSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"}],\"name\":\"decreasePositionAndSwapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"decreasePositionETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"denyPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"directPoolDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"increasePositionETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"pluginDecreasePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"pluginIncreasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pluginTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swapETHToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swapTokensToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/core/Router.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/Address.sol\\\";\\n\\nimport \\\"../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IRouter.sol\\\";\\n\\ncontract Router is IRouter {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n  using Address for address payable;\\n\\n  address public gov;\\n\\n  // wrapped BNB / ETH\\n  address public weth;\\n  address public usdg;\\n  address public vault;\\n\\n  mapping(address => bool) public plugins;\\n  mapping(address => mapping(address => bool)) public approvedPlugins;\\n\\n  event Swap(\\n    address account,\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 amountOut\\n  );\\n\\n  modifier onlyGov() {\\n    require(msg.sender == gov, \\\"Router: forbidden\\\");\\n    _;\\n  }\\n\\n  constructor(\\n    address _vault,\\n    address _usdg,\\n    address _weth\\n  ) public {\\n    vault = _vault;\\n    usdg = _usdg;\\n    weth = _weth;\\n\\n    gov = msg.sender;\\n  }\\n\\n  receive() external payable {\\n    require(msg.sender == weth, \\\"Router: invalid sender\\\");\\n  }\\n\\n  function setGov(address _gov) external onlyGov {\\n    gov = _gov;\\n  }\\n\\n  function addPlugin(address _plugin) external override onlyGov {\\n    plugins[_plugin] = true;\\n  }\\n\\n  function removePlugin(address _plugin) external onlyGov {\\n    plugins[_plugin] = false;\\n  }\\n\\n  function approvePlugin(address _plugin) external {\\n    approvedPlugins[msg.sender][_plugin] = true;\\n  }\\n\\n  function denyPlugin(address _plugin) external {\\n    approvedPlugins[msg.sender][_plugin] = false;\\n  }\\n\\n  function pluginTransfer(\\n    address _token,\\n    address _account,\\n    address _receiver,\\n    uint256 _amount\\n  ) external override {\\n    _validatePlugin(_account);\\n    IERC20(_token).safeTransferFrom(_account, _receiver, _amount);\\n  }\\n\\n  function pluginIncreasePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _sizeDelta,\\n    bool _isLong\\n  ) external override {\\n    _validatePlugin(_account);\\n    IVault(vault).increasePosition(_account, _collateralToken, _indexToken, _sizeDelta, _isLong);\\n  }\\n\\n  function pluginDecreasePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver\\n  ) external override returns (uint256) {\\n    _validatePlugin(_account);\\n    return\\n      IVault(vault).decreasePosition(\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        _collateralDelta,\\n        _sizeDelta,\\n        _isLong,\\n        _receiver\\n      );\\n  }\\n\\n  function directPoolDeposit(address _token, uint256 _amount) external {\\n    IERC20(_token).safeTransferFrom(_sender(), vault, _amount);\\n    IVault(vault).directPoolDeposit(_token);\\n  }\\n\\n  function swap(\\n    address[] memory _path,\\n    uint256 _amountIn,\\n    uint256 _minOut,\\n    address _receiver\\n  ) public override {\\n    IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n    uint256 amountOut = _swap(_path, _minOut, _receiver);\\n    emit Swap(msg.sender, _path[0], _path[_path.length - 1], _amountIn, amountOut);\\n  }\\n\\n  function swapETHToTokens(\\n    address[] memory _path,\\n    uint256 _minOut,\\n    address _receiver\\n  ) external payable {\\n    require(_path[0] == weth, \\\"Router: invalid _path\\\");\\n    _transferETHToVault();\\n    uint256 amountOut = _swap(_path, _minOut, _receiver);\\n    emit Swap(msg.sender, _path[0], _path[_path.length - 1], msg.value, amountOut);\\n  }\\n\\n  function swapTokensToETH(\\n    address[] memory _path,\\n    uint256 _amountIn,\\n    uint256 _minOut,\\n    address payable _receiver\\n  ) external {\\n    require(_path[_path.length - 1] == weth, \\\"Router: invalid _path\\\");\\n    IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n    uint256 amountOut = _swap(_path, _minOut, address(this));\\n    _transferOutETH(amountOut, _receiver);\\n    emit Swap(msg.sender, _path[0], _path[_path.length - 1], _amountIn, amountOut);\\n  }\\n\\n  function increasePosition(\\n    address[] memory _path,\\n    address _indexToken,\\n    uint256 _amountIn,\\n    uint256 _minOut,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    uint256 _price\\n  ) external {\\n    if (_amountIn > 0) {\\n      IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n    }\\n    if (_path.length > 1 && _amountIn > 0) {\\n      uint256 amountOut = _swap(_path, _minOut, address(this));\\n      IERC20(_path[_path.length - 1]).safeTransfer(vault, amountOut);\\n    }\\n    _increasePosition(_path[_path.length - 1], _indexToken, _sizeDelta, _isLong, _price);\\n  }\\n\\n  function increasePositionETH(\\n    address[] memory _path,\\n    address _indexToken,\\n    uint256 _minOut,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    uint256 _price\\n  ) external payable {\\n    require(_path[0] == weth, \\\"Router: invalid _path\\\");\\n    if (msg.value > 0) {\\n      _transferETHToVault();\\n    }\\n    if (_path.length > 1 && msg.value > 0) {\\n      uint256 amountOut = _swap(_path, _minOut, address(this));\\n      IERC20(_path[_path.length - 1]).safeTransfer(vault, amountOut);\\n    }\\n    _increasePosition(_path[_path.length - 1], _indexToken, _sizeDelta, _isLong, _price);\\n  }\\n\\n  function decreasePosition(\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver,\\n    uint256 _price\\n  ) external {\\n    _decreasePosition(\\n      _collateralToken,\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong,\\n      _receiver,\\n      _price\\n    );\\n  }\\n\\n  function decreasePositionETH(\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address payable _receiver,\\n    uint256 _price\\n  ) external {\\n    uint256 amountOut = _decreasePosition(\\n      _collateralToken,\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong,\\n      address(this),\\n      _price\\n    );\\n    _transferOutETH(amountOut, _receiver);\\n  }\\n\\n  function decreasePositionAndSwap(\\n    address[] memory _path,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver,\\n    uint256 _price,\\n    uint256 _minOut\\n  ) external {\\n    uint256 amount = _decreasePosition(\\n      _path[0],\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong,\\n      address(this),\\n      _price\\n    );\\n    IERC20(_path[0]).safeTransfer(vault, amount);\\n    _swap(_path, _minOut, _receiver);\\n  }\\n\\n  function decreasePositionAndSwapETH(\\n    address[] memory _path,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address payable _receiver,\\n    uint256 _price,\\n    uint256 _minOut\\n  ) external {\\n    require(_path[_path.length - 1] == weth, \\\"Router: invalid _path\\\");\\n    uint256 amount = _decreasePosition(\\n      _path[0],\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong,\\n      address(this),\\n      _price\\n    );\\n    IERC20(_path[0]).safeTransfer(vault, amount);\\n    uint256 amountOut = _swap(_path, _minOut, address(this));\\n    _transferOutETH(amountOut, _receiver);\\n  }\\n\\n  function _increasePosition(\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    uint256 _price\\n  ) private {\\n    if (_isLong) {\\n      require(\\n        IVault(vault).getMaxPrice(_indexToken) <= _price,\\n        \\\"Router: mark price higher than limit\\\"\\n      );\\n    } else {\\n      require(\\n        IVault(vault).getMinPrice(_indexToken) >= _price,\\n        \\\"Router: mark price lower than limit\\\"\\n      );\\n    }\\n\\n    IVault(vault).increasePosition(_sender(), _collateralToken, _indexToken, _sizeDelta, _isLong);\\n  }\\n\\n  function _decreasePosition(\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver,\\n    uint256 _price\\n  ) private returns (uint256) {\\n    if (_isLong) {\\n      require(\\n        IVault(vault).getMinPrice(_indexToken) >= _price,\\n        \\\"Router: mark price lower than limit\\\"\\n      );\\n    } else {\\n      require(\\n        IVault(vault).getMaxPrice(_indexToken) <= _price,\\n        \\\"Router: mark price higher than limit\\\"\\n      );\\n    }\\n\\n    return\\n      IVault(vault).decreasePosition(\\n        _sender(),\\n        _collateralToken,\\n        _indexToken,\\n        _collateralDelta,\\n        _sizeDelta,\\n        _isLong,\\n        _receiver\\n      );\\n  }\\n\\n  function _transferETHToVault() private {\\n    IWETH(weth).deposit{value: msg.value}();\\n    IERC20(weth).safeTransfer(vault, msg.value);\\n  }\\n\\n  function _transferOutETH(uint256 _amountOut, address payable _receiver) private {\\n    IWETH(weth).withdraw(_amountOut);\\n    _receiver.sendValue(_amountOut);\\n  }\\n\\n  function _swap(\\n    address[] memory _path,\\n    uint256 _minOut,\\n    address _receiver\\n  ) private returns (uint256) {\\n    if (_path.length == 2) {\\n      return _vaultSwap(_path[0], _path[1], _minOut, _receiver);\\n    }\\n    if (_path.length == 3) {\\n      uint256 midOut = _vaultSwap(_path[0], _path[1], 0, address(this));\\n      IERC20(_path[1]).safeTransfer(vault, midOut);\\n      return _vaultSwap(_path[1], _path[2], _minOut, _receiver);\\n    }\\n\\n    revert(\\\"Router: invalid _path.length\\\");\\n  }\\n\\n  function _vaultSwap(\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint256 _minOut,\\n    address _receiver\\n  ) private returns (uint256) {\\n    uint256 amountOut;\\n\\n    if (_tokenOut == usdg) {\\n      // buyUSDG\\n      amountOut = IVault(vault).buyUSDG(_tokenIn, _receiver);\\n    } else if (_tokenIn == usdg) {\\n      // sellUSDG\\n      amountOut = IVault(vault).sellUSDG(_tokenOut, _receiver);\\n    } else {\\n      // swap\\n      amountOut = IVault(vault).swap(_tokenIn, _tokenOut, _receiver);\\n    }\\n\\n    require(amountOut >= _minOut, \\\"Router: insufficient amountOut\\\");\\n    return amountOut;\\n  }\\n\\n  function _sender() private view returns (address) {\\n    return msg.sender;\\n  }\\n\\n  function _validatePlugin(address _account) private view {\\n    require(plugins[msg.sender], \\\"Router: invalid plugin\\\");\\n    require(approvedPlugins[_account][msg.sender], \\\"Router: plugin not approved\\\");\\n  }\\n}\\n\",\"keccak256\":\"0x3a0916eee715b51697a169f70cd6e2f2125fa5748cb7e927a262f5fd608bd543\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IRouter {\\n    function addPlugin(address _plugin) external;\\n    function pluginTransfer(address _token, address _account, address _receiver, uint256 _amount) external;\\n    function pluginIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function pluginDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function swap(address[] memory _path, uint256 _amountIn, uint256 _minOut, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x944216f79857ed00b57025d6343648c5b75c2f60de431961f8801cf05319cad9\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n    function usdg() external view returns (address);\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetUsdgAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setUsdgAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdgAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n    function buyUSDG(address _token, address _receiver) external returns (uint256);\\n    function sellUSDG(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function usdgAmounts(address _token) external view returns (uint256);\\n    function maxUsdgAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n}\\n\",\"keccak256\":\"0x247067b8f88636424e799a2b72b81884273813e62ad3bfedf428e0fb97714637\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSellUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(address _tokenIn, address _tokenOut, uint256 _usdgAmount) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc8cad694c33f968559eb3feac2226fe26d81d457529b87ae8852390e1474d7be\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf80766b21ea67a73c81e0dea4543375243938c8b223e29c5d783be61ab3f424c\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1845481964ebacf35afe1a006fa574793b52e698eba0a8db6e3d30202bc45429\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0x29613132c0162f9cdc8336e895d1da9aaf3660909adcf1a0134d714e53524ca4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161244e38038061244e8339818101604052606081101561003357600080fd5b5080516020820151604090920151600380546001600160a01b039384166001600160a01b0319918216179091556002805494841694821694909417909355600180549290911691831691909117905560008054909116331790556123b28061009c6000396000f3fe60806040526004361061011f5760003560e01c806312d43a51146101835780631b827878146101b45780631f1dd176146101fd5780632662166b1461024e5780632d4ba6a7146102c15780633039e37f1461038357806338c74dd9146104635780633fc8cef314610496578063430ed37c146104ab5780634b12e6431461050a5780635fc8500e146105515780636023e9661461063157806390205d8c146106f357806390b64ad314610752578063956f285e1461078b578063a4d95b64146107c6578063abe68eaa146107f9578063b32755de146108a8578063b7ddc9921461096b578063cedd437514610a41578063cfad57a214610a74578063d8867fc814610aa7578063f5b91b7b14610ada578063fbfa77cf14610aef5761017e565b3661017e576001546001600160a01b0316331461017c576040805162461bcd60e51b81526020600482015260166024820152752937baba32b91d1034b73b30b634b21039b2b73232b960511b604482015290519081900360640190fd5b005b600080fd5b34801561018f57600080fd5b50610198610b04565b604080516001600160a01b039092168252519081900360200190f35b3480156101c057600080fd5b5061017c600480360360808110156101d757600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610b13565b34801561020957600080fd5b5061017c600480360360a081101561022057600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515610b37565b34801561025a57600080fd5b506102af600480360360e081101561027157600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516610bcc565b60408051918252519081900360200190f35b3480156102cd57600080fd5b5061017c600480360360808110156102e457600080fd5b810190602081018135600160201b8111156102fe57600080fd5b82018360208201111561031057600080fd5b803590602001918460208302840111600160201b8311171561033157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610c8c565b34801561038f57600080fd5b5061017c60048036036101008110156103a757600080fd5b810190602081018135600160201b8111156103c157600080fd5b8201836020820111156103d357600080fd5b803590602001918460208302840111600160201b831117156103f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610df3565b34801561046f57600080fd5b5061017c6004803603602081101561048657600080fd5b50356001600160a01b0316610ef8565b3480156104a257600080fd5b50610198610f29565b3480156104b757600080fd5b5061017c600480360360e08110156104ce57600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c00135610f38565b34801561051657600080fd5b5061053d6004803603602081101561052d57600080fd5b50356001600160a01b0316610f5f565b604080519115158252519081900360200190f35b34801561055d57600080fd5b5061017c600480360361010081101561057557600080fd5b810190602081018135600160201b81111561058f57600080fd5b8201836020820111156105a157600080fd5b803590602001918460208302840111600160201b831117156105c257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610f74565b34801561063d57600080fd5b5061017c6004803603608081101561065457600080fd5b810190602081018135600160201b81111561066e57600080fd5b82018360208201111561068057600080fd5b803590602001918460208302840111600160201b831117156106a157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610fba565b3480156106ff57600080fd5b5061017c600480360360e081101561071657600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c00135610ff1565b34801561075e57600080fd5b5061017c6004803603604081101561077557600080fd5b506001600160a01b038135169060200135611000565b34801561079757600080fd5b5061053d600480360360408110156107ae57600080fd5b506001600160a01b038135811691602001351661108c565b3480156107d257600080fd5b5061017c600480360360208110156107e957600080fd5b50356001600160a01b03166110ac565b61017c6004803603606081101561080f57600080fd5b810190602081018135600160201b81111561082957600080fd5b82018360208201111561083b57600080fd5b803590602001918460208302840111600160201b8311171561085c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356001600160a01b0316611120565b61017c600480360360c08110156108be57600080fd5b810190602081018135600160201b8111156108d857600080fd5b8201836020820111156108ea57600080fd5b803590602001918460208302840111600160201b8311171561090b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013515159060800135611235565b34801561097757600080fd5b5061017c600480360360e081101561098e57600080fd5b810190602081018135600160201b8111156109a857600080fd5b8201836020820111156109ba57600080fd5b803590602001918460208302840111600160201b831117156109db57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013590608081013515159060a00135611325565b348015610a4d57600080fd5b5061017c60048036036020811015610a6457600080fd5b50356001600160a01b03166113d2565b348015610a8057600080fd5b5061017c60048036036020811015610a9757600080fd5b50356001600160a01b0316611400565b348015610ab357600080fd5b5061017c60048036036020811015610aca57600080fd5b50356001600160a01b0316611475565b348015610ae657600080fd5b506101986114ec565b348015610afb57600080fd5b506101986114fb565b6000546001600160a01b031681565b610b1c8361150a565b610b316001600160a01b0385168484846115e0565b50505050565b610b408561150a565b600354604080516348d91abf60e01b81526001600160a01b03888116600483015287811660248301528681166044830152606482018690528415156084830152915191909216916348d91abf9160a480830192600092919082900301818387803b158015610bad57600080fd5b505af1158015610bc1573d6000803e3d6000fd5b505050505050505050565b6000610bd78861150a565b6003546040805163082a084960e41b81526001600160a01b038b811660048301528a811660248301528981166044830152606482018990526084820188905286151560a483015285811660c4830152915191909216916382a084909160e48083019260209291908290030181600087803b158015610c5457600080fd5b505af1158015610c68573d6000803e3d6000fd5b505050506040513d6020811015610c7e57600080fd5b505198975050505050505050565b60015484516001600160a01b039091169085906000198101908110610cad57fe5b60200260200101516001600160a01b031614610cfe576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b610d48610d0961163a565b60035486516001600160a01b039091169086908890600090610d2757fe5b60200260200101516001600160a01b03166115e0909392919063ffffffff16565b6000610d5585843061163e565b9050610d61818361177e565b6000805160206123388339815191523386600081518110610d7e57fe5b602002602001015187600189510381518110610d9657fe5b6020026020010151878560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a15050505050565b60015488516001600160a01b039091169089906000198101908110610e1457fe5b60200260200101516001600160a01b031614610e65576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b6000610e8a89600081518110610e7757fe5b60200260200101518989898930896117fb565b9050610ed3600360009054906101000a90046001600160a01b0316828b600081518110610eb357fe5b60200260200101516001600160a01b0316611a089092919063ffffffff16565b6000610ee08a843061163e565b9050610eec818661177e565b50505050505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6001546001600160a01b031681565b6000610f49888888888830886117fb565b9050610f55818461177e565b5050505050505050565b60046020526000908152604090205460ff1681565b6000610f8689600081518110610e7757fe5b9050610faf600360009054906101000a90046001600160a01b0316828b600081518110610eb357fe5b610eec89838661163e565b610fc5610d0961163a565b6000610fd285848461163e565b90506000805160206123388339815191523386600081518110610d7e57fe5b610f55878787878787876117fb565b61102261100b61163a565b6003546001600160a01b03858116929116846115e0565b60035460408051635f7bc11960e01b81526001600160a01b03858116600483015291519190921691635f7bc11991602480830192600092919082900301818387803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b505050505050565b600560209081526000928352604080842090915290825290205460ff1681565b6000546001600160a01b031633146110ff576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19169055565b60015483516001600160a01b0390911690849060009061113c57fe5b60200260200101516001600160a01b03161461118d576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b611195611a5f565b60006111a284848461163e565b905060008051602061233883398151915233856000815181106111c157fe5b6020026020010151866001885103815181106111d957fe5b6020026020010151348560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a150505050565b60015486516001600160a01b0390911690879060009061125157fe5b60200260200101516001600160a01b0316146112a2576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b34156112b0576112b0611a5f565b600186511180156112c15750600034115b156113015760006112d387863061163e565b90506112ff600360009054906101000a90046001600160a01b0316828960018b510381518110610eb357fe5b505b6110848660018851038151811061131457fe5b602002602001015186858585611ae8565b84156113545761135461133661163a565b60035489516001600160a01b039091169088908b90600090610d2757fe5b600187511180156113655750600085115b156113a557600061137788863061163e565b90506113a3600360009054906101000a90046001600160a01b0316828a60018c510381518110610eb357fe5b505b6113c9876001895103815181106113b857fe5b602002602001015187858585611ae8565b50505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b6000546001600160a01b03163314611453576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114c8576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6002546001600160a01b031681565b6003546001600160a01b031681565b3360009081526004602052604090205460ff16611567576040805162461bcd60e51b81526020600482015260166024820152752937baba32b91d1034b73b30b634b21038363ab3b4b760511b604482015290519081900360640190fd5b6001600160a01b038116600090815260056020908152604080832033845290915290205460ff166115dd576040805162461bcd60e51b815260206004820152601b60248201527a149bdd5d195c8e881c1b1d59da5b881b9bdd08185c1c1c9bdd9959602a1b604482015290519081900360640190fd5b50565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b31908590611ce3565b3390565b60008351600214156116855761167e8460008151811061165a57fe5b60200260200101518560018151811061166f57fe5b60200260200101518585611d94565b9050611777565b83516003141561172b5760006116c6856000815181106116a157fe5b6020026020010151866001815181106116b657fe5b6020026020010151600030611d94565b90506116ef600360009054906101000a90046001600160a01b03168287600181518110610eb357fe5b611723856001815181106116ff57fe5b60200260200101518660028151811061171457fe5b60200260200101518686611d94565b915050611777565b6040805162461bcd60e51b815260206004820152601c60248201527b0a4deeae8cae47440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60231b604482015290519081900360640190fd5b9392505050565b60015460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b506117f7925050506001600160a01b03821683611f92565b5050565b600083156118c157600354604080516340d3096b60e11b81526001600160a01b038a811660048301529151859392909216916381a612d691602480820192602092909190829003018186803b15801561185357600080fd5b505afa158015611867573d6000803e3d6000fd5b505050506040513d602081101561187d57600080fd5b505110156118bc5760405162461bcd60e51b81526004018080602001828103825260238152602001806123156023913960400191505060405180910390fd5b61197a565b60035460408051637092736960e11b81526001600160a01b038a8116600483015291518593929092169163e124e6d291602480820192602092909190829003018186803b15801561191157600080fd5b505afa158015611925573d6000803e3d6000fd5b505050506040513d602081101561193b57600080fd5b5051111561197a5760405162461bcd60e51b81526004018080602001828103825260248152602001806123826024913960400191505060405180910390fd5b6003546001600160a01b03166382a0849061199361163a565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828d166024820152828c166044820152606481018b9052608481018a905288151560a482015291871660c48301525160e48083019260209291908290030181600087803b158015610c5457600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611a5a908490611ce3565b505050565b600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611aaf57600080fd5b505af1158015611ac3573d6000803e3d6000fd5b5050600354600154611ae694506001600160a01b03908116935016905034611a08565b565b8115611bac5760035460408051637092736960e11b81526001600160a01b03878116600483015291518493929092169163e124e6d291602480820192602092909190829003018186803b158015611b3e57600080fd5b505afa158015611b52573d6000803e3d6000fd5b505050506040513d6020811015611b6857600080fd5b50511115611ba75760405162461bcd60e51b81526004018080602001828103825260248152602001806123826024913960400191505060405180910390fd5b611c65565b600354604080516340d3096b60e11b81526001600160a01b0387811660048301529151849392909216916381a612d691602480820192602092909190829003018186803b158015611bfc57600080fd5b505afa158015611c10573d6000803e3d6000fd5b505050506040513d6020811015611c2657600080fd5b50511015611c655760405162461bcd60e51b81526004018080602001828103825260238152602001806123156023913960400191505060405180910390fd5b6003546001600160a01b03166348d91abf611c7e61163a565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828a16602482015291881660448301526064820187905285151560848301525160a480830192600092919082900301818387803b158015610bad57600080fd5b6060611d38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120779092919063ffffffff16565b805190915015611a5a57808060200190516020811015611d5757600080fd5b5051611a5a5760405162461bcd60e51b815260040180806020018281038252602a815260200180612358602a913960400191505060405180910390fd5b60025460009081906001600160a01b0386811691161415611e39576003546040805163817bb85760e01b81526001600160a01b03898116600483015286811660248301529151919092169163817bb8579160448083019260209291908290030181600087803b158015611e0657600080fd5b505af1158015611e1a573d6000803e3d6000fd5b505050506040513d6020811015611e3057600080fd5b50519050611f34565b6002546001600160a01b0387811691161415611ea65760035460408051630711e61960e41b81526001600160a01b03888116600483015286811660248301529151919092169163711e61909160448083019260209291908290030181600087803b158015611e0657600080fd5b60035460408051634998b10960e11b81526001600160a01b038981166004830152888116602483015286811660448301529151919092169163933162129160648083019260209291908290030181600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b505050506040513d6020811015611f2f57600080fd5b505190505b83811015611f89576040805162461bcd60e51b815260206004820152601e60248201527f526f757465723a20696e73756666696369656e7420616d6f756e744f75740000604482015290519081900360640190fd5b95945050505050565b80471015611fe7576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612032576040519150601f19603f3d011682016040523d82523d6000602084013e612037565b606091505b5050905080611a5a5760405162461bcd60e51b815260040180806020018281038252603a8152602001806122b5603a913960400191505060405180910390fd5b6060612086848460008561208e565b949350505050565b6060824710156120cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806122ef6026913960400191505060405180910390fd5b6120d8856121ea565b612129576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121685780518252601f199092019160209182019101612149565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146121ca576040519150601f19603f3d011682016040523d82523d6000602084013e6121cf565b606091505b50915091506121df8282866121f0565b979650505050505050565b3b151590565b606083156121ff575081611777565b82511561220f5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612259578181015183820152602001612241565b50505050905090810190601f1680156122865780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe526f757465723a20696e76616c6964205f706174680000000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526f757465723a206d61726b207072696365206c6f776572207468616e206c696d6974cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460625361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564526f757465723a206d61726b20707269636520686967686572207468616e206c696d6974a164736f6c634300060c000a",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c806312d43a51146101835780631b827878146101b45780631f1dd176146101fd5780632662166b1461024e5780632d4ba6a7146102c15780633039e37f1461038357806338c74dd9146104635780633fc8cef314610496578063430ed37c146104ab5780634b12e6431461050a5780635fc8500e146105515780636023e9661461063157806390205d8c146106f357806390b64ad314610752578063956f285e1461078b578063a4d95b64146107c6578063abe68eaa146107f9578063b32755de146108a8578063b7ddc9921461096b578063cedd437514610a41578063cfad57a214610a74578063d8867fc814610aa7578063f5b91b7b14610ada578063fbfa77cf14610aef5761017e565b3661017e576001546001600160a01b0316331461017c576040805162461bcd60e51b81526020600482015260166024820152752937baba32b91d1034b73b30b634b21039b2b73232b960511b604482015290519081900360640190fd5b005b600080fd5b34801561018f57600080fd5b50610198610b04565b604080516001600160a01b039092168252519081900360200190f35b3480156101c057600080fd5b5061017c600480360360808110156101d757600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610b13565b34801561020957600080fd5b5061017c600480360360a081101561022057600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515610b37565b34801561025a57600080fd5b506102af600480360360e081101561027157600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516610bcc565b60408051918252519081900360200190f35b3480156102cd57600080fd5b5061017c600480360360808110156102e457600080fd5b810190602081018135600160201b8111156102fe57600080fd5b82018360208201111561031057600080fd5b803590602001918460208302840111600160201b8311171561033157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610c8c565b34801561038f57600080fd5b5061017c60048036036101008110156103a757600080fd5b810190602081018135600160201b8111156103c157600080fd5b8201836020820111156103d357600080fd5b803590602001918460208302840111600160201b831117156103f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610df3565b34801561046f57600080fd5b5061017c6004803603602081101561048657600080fd5b50356001600160a01b0316610ef8565b3480156104a257600080fd5b50610198610f29565b3480156104b757600080fd5b5061017c600480360360e08110156104ce57600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c00135610f38565b34801561051657600080fd5b5061053d6004803603602081101561052d57600080fd5b50356001600160a01b0316610f5f565b604080519115158252519081900360200190f35b34801561055d57600080fd5b5061017c600480360361010081101561057557600080fd5b810190602081018135600160201b81111561058f57600080fd5b8201836020820111156105a157600080fd5b803590602001918460208302840111600160201b831117156105c257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610f74565b34801561063d57600080fd5b5061017c6004803603608081101561065457600080fd5b810190602081018135600160201b81111561066e57600080fd5b82018360208201111561068057600080fd5b803590602001918460208302840111600160201b831117156106a157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610fba565b3480156106ff57600080fd5b5061017c600480360360e081101561071657600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c00135610ff1565b34801561075e57600080fd5b5061017c6004803603604081101561077557600080fd5b506001600160a01b038135169060200135611000565b34801561079757600080fd5b5061053d600480360360408110156107ae57600080fd5b506001600160a01b038135811691602001351661108c565b3480156107d257600080fd5b5061017c600480360360208110156107e957600080fd5b50356001600160a01b03166110ac565b61017c6004803603606081101561080f57600080fd5b810190602081018135600160201b81111561082957600080fd5b82018360208201111561083b57600080fd5b803590602001918460208302840111600160201b8311171561085c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356001600160a01b0316611120565b61017c600480360360c08110156108be57600080fd5b810190602081018135600160201b8111156108d857600080fd5b8201836020820111156108ea57600080fd5b803590602001918460208302840111600160201b8311171561090b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013515159060800135611235565b34801561097757600080fd5b5061017c600480360360e081101561098e57600080fd5b810190602081018135600160201b8111156109a857600080fd5b8201836020820111156109ba57600080fd5b803590602001918460208302840111600160201b831117156109db57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013590608081013515159060a00135611325565b348015610a4d57600080fd5b5061017c60048036036020811015610a6457600080fd5b50356001600160a01b03166113d2565b348015610a8057600080fd5b5061017c60048036036020811015610a9757600080fd5b50356001600160a01b0316611400565b348015610ab357600080fd5b5061017c60048036036020811015610aca57600080fd5b50356001600160a01b0316611475565b348015610ae657600080fd5b506101986114ec565b348015610afb57600080fd5b506101986114fb565b6000546001600160a01b031681565b610b1c8361150a565b610b316001600160a01b0385168484846115e0565b50505050565b610b408561150a565b600354604080516348d91abf60e01b81526001600160a01b03888116600483015287811660248301528681166044830152606482018690528415156084830152915191909216916348d91abf9160a480830192600092919082900301818387803b158015610bad57600080fd5b505af1158015610bc1573d6000803e3d6000fd5b505050505050505050565b6000610bd78861150a565b6003546040805163082a084960e41b81526001600160a01b038b811660048301528a811660248301528981166044830152606482018990526084820188905286151560a483015285811660c4830152915191909216916382a084909160e48083019260209291908290030181600087803b158015610c5457600080fd5b505af1158015610c68573d6000803e3d6000fd5b505050506040513d6020811015610c7e57600080fd5b505198975050505050505050565b60015484516001600160a01b039091169085906000198101908110610cad57fe5b60200260200101516001600160a01b031614610cfe576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b610d48610d0961163a565b60035486516001600160a01b039091169086908890600090610d2757fe5b60200260200101516001600160a01b03166115e0909392919063ffffffff16565b6000610d5585843061163e565b9050610d61818361177e565b6000805160206123388339815191523386600081518110610d7e57fe5b602002602001015187600189510381518110610d9657fe5b6020026020010151878560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a15050505050565b60015488516001600160a01b039091169089906000198101908110610e1457fe5b60200260200101516001600160a01b031614610e65576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b6000610e8a89600081518110610e7757fe5b60200260200101518989898930896117fb565b9050610ed3600360009054906101000a90046001600160a01b0316828b600081518110610eb357fe5b60200260200101516001600160a01b0316611a089092919063ffffffff16565b6000610ee08a843061163e565b9050610eec818661177e565b50505050505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6001546001600160a01b031681565b6000610f49888888888830886117fb565b9050610f55818461177e565b5050505050505050565b60046020526000908152604090205460ff1681565b6000610f8689600081518110610e7757fe5b9050610faf600360009054906101000a90046001600160a01b0316828b600081518110610eb357fe5b610eec89838661163e565b610fc5610d0961163a565b6000610fd285848461163e565b90506000805160206123388339815191523386600081518110610d7e57fe5b610f55878787878787876117fb565b61102261100b61163a565b6003546001600160a01b03858116929116846115e0565b60035460408051635f7bc11960e01b81526001600160a01b03858116600483015291519190921691635f7bc11991602480830192600092919082900301818387803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b505050505050565b600560209081526000928352604080842090915290825290205460ff1681565b6000546001600160a01b031633146110ff576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19169055565b60015483516001600160a01b0390911690849060009061113c57fe5b60200260200101516001600160a01b03161461118d576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b611195611a5f565b60006111a284848461163e565b905060008051602061233883398151915233856000815181106111c157fe5b6020026020010151866001885103815181106111d957fe5b6020026020010151348560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a150505050565b60015486516001600160a01b0390911690879060009061125157fe5b60200260200101516001600160a01b0316146112a2576040805162461bcd60e51b81526020600482015260156024820152600080516020612295833981519152604482015290519081900360640190fd5b34156112b0576112b0611a5f565b600186511180156112c15750600034115b156113015760006112d387863061163e565b90506112ff600360009054906101000a90046001600160a01b0316828960018b510381518110610eb357fe5b505b6110848660018851038151811061131457fe5b602002602001015186858585611ae8565b84156113545761135461133661163a565b60035489516001600160a01b039091169088908b90600090610d2757fe5b600187511180156113655750600085115b156113a557600061137788863061163e565b90506113a3600360009054906101000a90046001600160a01b0316828a60018c510381518110610eb357fe5b505b6113c9876001895103815181106113b857fe5b602002602001015187858585611ae8565b50505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b6000546001600160a01b03163314611453576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114c8576040805162461bcd60e51b81526020600482015260116024820152702937baba32b91d103337b93134b23232b760791b604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6002546001600160a01b031681565b6003546001600160a01b031681565b3360009081526004602052604090205460ff16611567576040805162461bcd60e51b81526020600482015260166024820152752937baba32b91d1034b73b30b634b21038363ab3b4b760511b604482015290519081900360640190fd5b6001600160a01b038116600090815260056020908152604080832033845290915290205460ff166115dd576040805162461bcd60e51b815260206004820152601b60248201527a149bdd5d195c8e881c1b1d59da5b881b9bdd08185c1c1c9bdd9959602a1b604482015290519081900360640190fd5b50565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b31908590611ce3565b3390565b60008351600214156116855761167e8460008151811061165a57fe5b60200260200101518560018151811061166f57fe5b60200260200101518585611d94565b9050611777565b83516003141561172b5760006116c6856000815181106116a157fe5b6020026020010151866001815181106116b657fe5b6020026020010151600030611d94565b90506116ef600360009054906101000a90046001600160a01b03168287600181518110610eb357fe5b611723856001815181106116ff57fe5b60200260200101518660028151811061171457fe5b60200260200101518686611d94565b915050611777565b6040805162461bcd60e51b815260206004820152601c60248201527b0a4deeae8cae47440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60231b604482015290519081900360640190fd5b9392505050565b60015460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b506117f7925050506001600160a01b03821683611f92565b5050565b600083156118c157600354604080516340d3096b60e11b81526001600160a01b038a811660048301529151859392909216916381a612d691602480820192602092909190829003018186803b15801561185357600080fd5b505afa158015611867573d6000803e3d6000fd5b505050506040513d602081101561187d57600080fd5b505110156118bc5760405162461bcd60e51b81526004018080602001828103825260238152602001806123156023913960400191505060405180910390fd5b61197a565b60035460408051637092736960e11b81526001600160a01b038a8116600483015291518593929092169163e124e6d291602480820192602092909190829003018186803b15801561191157600080fd5b505afa158015611925573d6000803e3d6000fd5b505050506040513d602081101561193b57600080fd5b5051111561197a5760405162461bcd60e51b81526004018080602001828103825260248152602001806123826024913960400191505060405180910390fd5b6003546001600160a01b03166382a0849061199361163a565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828d166024820152828c166044820152606481018b9052608481018a905288151560a482015291871660c48301525160e48083019260209291908290030181600087803b158015610c5457600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611a5a908490611ce3565b505050565b600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611aaf57600080fd5b505af1158015611ac3573d6000803e3d6000fd5b5050600354600154611ae694506001600160a01b03908116935016905034611a08565b565b8115611bac5760035460408051637092736960e11b81526001600160a01b03878116600483015291518493929092169163e124e6d291602480820192602092909190829003018186803b158015611b3e57600080fd5b505afa158015611b52573d6000803e3d6000fd5b505050506040513d6020811015611b6857600080fd5b50511115611ba75760405162461bcd60e51b81526004018080602001828103825260248152602001806123826024913960400191505060405180910390fd5b611c65565b600354604080516340d3096b60e11b81526001600160a01b0387811660048301529151849392909216916381a612d691602480820192602092909190829003018186803b158015611bfc57600080fd5b505afa158015611c10573d6000803e3d6000fd5b505050506040513d6020811015611c2657600080fd5b50511015611c655760405162461bcd60e51b81526004018080602001828103825260238152602001806123156023913960400191505060405180910390fd5b6003546001600160a01b03166348d91abf611c7e61163a565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828a16602482015291881660448301526064820187905285151560848301525160a480830192600092919082900301818387803b158015610bad57600080fd5b6060611d38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120779092919063ffffffff16565b805190915015611a5a57808060200190516020811015611d5757600080fd5b5051611a5a5760405162461bcd60e51b815260040180806020018281038252602a815260200180612358602a913960400191505060405180910390fd5b60025460009081906001600160a01b0386811691161415611e39576003546040805163817bb85760e01b81526001600160a01b03898116600483015286811660248301529151919092169163817bb8579160448083019260209291908290030181600087803b158015611e0657600080fd5b505af1158015611e1a573d6000803e3d6000fd5b505050506040513d6020811015611e3057600080fd5b50519050611f34565b6002546001600160a01b0387811691161415611ea65760035460408051630711e61960e41b81526001600160a01b03888116600483015286811660248301529151919092169163711e61909160448083019260209291908290030181600087803b158015611e0657600080fd5b60035460408051634998b10960e11b81526001600160a01b038981166004830152888116602483015286811660448301529151919092169163933162129160648083019260209291908290030181600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b505050506040513d6020811015611f2f57600080fd5b505190505b83811015611f89576040805162461bcd60e51b815260206004820152601e60248201527f526f757465723a20696e73756666696369656e7420616d6f756e744f75740000604482015290519081900360640190fd5b95945050505050565b80471015611fe7576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612032576040519150601f19603f3d011682016040523d82523d6000602084013e612037565b606091505b5050905080611a5a5760405162461bcd60e51b815260040180806020018281038252603a8152602001806122b5603a913960400191505060405180910390fd5b6060612086848460008561208e565b949350505050565b6060824710156120cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806122ef6026913960400191505060405180910390fd5b6120d8856121ea565b612129576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121685780518252601f199092019160209182019101612149565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146121ca576040519150601f19603f3d011682016040523d82523d6000602084013e6121cf565b606091505b50915091506121df8282866121f0565b979650505050505050565b3b151590565b606083156121ff575081611777565b82511561220f5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612259578181015183820152602001612241565b50505050905090810190601f1680156122865780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe526f757465723a20696e76616c6964205f706174680000000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526f757465723a206d61726b207072696365206c6f776572207468616e206c696d6974cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460625361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564526f757465723a206d61726b20707269636520686967686572207468616e206c696d6974a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8654,
        "contract": "contracts/core/Router.sol:Router",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8656,
        "contract": "contracts/core/Router.sol:Router",
        "label": "weth",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 8658,
        "contract": "contracts/core/Router.sol:Router",
        "label": "usdg",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 8660,
        "contract": "contracts/core/Router.sol:Router",
        "label": "vault",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 8664,
        "contract": "contracts/core/Router.sol:Router",
        "label": "plugins",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 8670,
        "contract": "contracts/core/Router.sol:Router",
        "label": "approvedPlugins",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      }
    }
  }
}