{
  "address": "0x46bC2Fc4b6cca57b027baDC99Fc1D2f0A24E35CA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxPriceUpdateDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBlockInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDeviationBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fastPriceEvents",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_positionRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "DisableFastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "EnableFastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fastPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeRefDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeFastDelta",
          "type": "uint256"
        }
      ],
      "name": "MaxCumulativeDeltaDiffExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fastPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeRefDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeFastDelta",
          "type": "uint256"
        }
      ],
      "name": "PriceData",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BITMASK_32",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CUMULATIVE_DELTA_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_CUMULATIVE_FAST_DELTA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_CUMULATIVE_REF_DELTA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PRICE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REF_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableFastPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableFastPriceVoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disableFastPriceVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableFastPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fastPriceEvents",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "favorFastPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_refPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPriceData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAuthorizations",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_updaters",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSpreadEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isUpdater",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdatedBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxCumulativeDeltaDiffs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDeviationBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPriceUpdateDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTimeDeviation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAuthorizations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBlockInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceData",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "refPrice",
          "type": "uint160"
        },
        {
          "internalType": "uint32",
          "name": "refTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cumulativeRefDelta",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cumulativeFastDelta",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDataInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_priceBitArray",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setCompactedPrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fastPriceEvents",
          "type": "address"
        }
      ],
      "name": "setFastPriceEvents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isSpreadEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSpreadEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lastUpdatedAt",
          "type": "uint256"
        }
      ],
      "name": "setLastUpdatedAt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_maxCumulativeDeltaDiffs",
          "type": "uint256[]"
        }
      ],
      "name": "setMaxCumulativeDeltaDiffs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxDeviationBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setMaxDeviationBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPriceUpdateDelay",
          "type": "uint256"
        }
      ],
      "name": "setMaxPriceUpdateDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTimeDeviation",
          "type": "uint256"
        }
      ],
      "name": "setMaxTimeDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAuthorizations",
          "type": "uint256"
        }
      ],
      "name": "setMinAuthorizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBlockInterval",
          "type": "uint256"
        }
      ],
      "name": "setMinBlockInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceDataInterval",
          "type": "uint256"
        }
      ],
      "name": "setPriceDataInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceDuration",
          "type": "uint256"
        }
      ],
      "name": "setPriceDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setPrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceBits",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setPricesWithBits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceBits",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endIndexForIncreasePositions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endIndexForDecreasePositions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxIncreasePositions",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDecreasePositions",
          "type": "uint256"
        }
      ],
      "name": "setPricesWithBitsAndExecute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spreadBasisPointsIfChainError",
          "type": "uint256"
        }
      ],
      "name": "setSpreadBasisPointsIfChainError",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spreadBasisPointsIfInactive",
          "type": "uint256"
        }
      ],
      "name": "setSpreadBasisPointsIfInactive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenManager",
          "type": "address"
        }
      ],
      "name": "setTokenManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenPrecisions",
          "type": "uint256[]"
        }
      ],
      "name": "setTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setUpdater",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultPriceFeed",
          "type": "address"
        }
      ],
      "name": "setVaultPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spreadBasisPointsIfChainError",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spreadBasisPointsIfInactive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenPrecisions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc6e747698cd7d8b8b5f498e701914c603d7ac102a3398507ea6dfdc13c77dda3",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0x46bC2Fc4b6cca57b027baDC99Fc1D2f0A24E35CA",
    "transactionIndex": 1,
    "gasUsed": "2769941",
    "logsBloom": "0x
    "blockHash": "0xa3983ce0ac92ad25f02f663938d79d84cdfd13d3b7bf91197ab4adae7a4a5a7c",
    "transactionHash": "0xc6e747698cd7d8b8b5f498e701914c603d7ac102a3398507ea6dfdc13c77dda3",
    "logs": [],
    "blockNumber": 17664402,
    "cumulativeGasUsed": "6781498",
    "status": 1,
    "byzantium": true
  },
  "args": [
    300,
    3600,
    1,
    250,
    "0xE85f2D27ab06B15365AfEF0963c786b2811732Ff",
    "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "0x10be6Df2c1B4228e594dC733515711f1a91344Dc"
  ],
  "numDeployments": 1,
  "solcInputHash": "a5c1ec6ed734a994a4a7c4ed9bed389b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPriceUpdateDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBlockInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeviationBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fastPriceEvents\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"DisableFastPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"EnableFastPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fastPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeRefDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeFastDelta\",\"type\":\"uint256\"}],\"name\":\"MaxCumulativeDeltaDiffExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fastPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeRefDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeFastDelta\",\"type\":\"uint256\"}],\"name\":\"PriceData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BITMASK_32\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUMULATIVE_DELTA_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CUMULATIVE_FAST_DELTA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CUMULATIVE_REF_DELTA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REF_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableFastPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableFastPriceVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disableFastPriceVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFastPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fastPriceEvents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"favorFastPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_refPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPriceData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAuthorizations\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_updaters\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSpreadEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUpdater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxCumulativeDeltaDiffs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDeviationBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriceUpdateDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeDeviation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuthorizations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBlockInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceData\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"refPrice\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"refTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"cumulativeRefDelta\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"cumulativeFastDelta\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDataInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_priceBitArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setCompactedPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fastPriceEvents\",\"type\":\"address\"}],\"name\":\"setFastPriceEvents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isSpreadEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSpreadEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastUpdatedAt\",\"type\":\"uint256\"}],\"name\":\"setLastUpdatedAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_maxCumulativeDeltaDiffs\",\"type\":\"uint256[]\"}],\"name\":\"setMaxCumulativeDeltaDiffs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDeviationBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setMaxDeviationBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPriceUpdateDelay\",\"type\":\"uint256\"}],\"name\":\"setMaxPriceUpdateDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTimeDeviation\",\"type\":\"uint256\"}],\"name\":\"setMaxTimeDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAuthorizations\",\"type\":\"uint256\"}],\"name\":\"setMinAuthorizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBlockInterval\",\"type\":\"uint256\"}],\"name\":\"setMinBlockInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceDataInterval\",\"type\":\"uint256\"}],\"name\":\"setPriceDataInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceDuration\",\"type\":\"uint256\"}],\"name\":\"setPriceDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceBits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setPricesWithBits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceBits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endIndexForIncreasePositions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endIndexForDecreasePositions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxIncreasePositions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDecreasePositions\",\"type\":\"uint256\"}],\"name\":\"setPricesWithBitsAndExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spreadBasisPointsIfChainError\",\"type\":\"uint256\"}],\"name\":\"setSpreadBasisPointsIfChainError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spreadBasisPointsIfInactive\",\"type\":\"uint256\"}],\"name\":\"setSpreadBasisPointsIfInactive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenManager\",\"type\":\"address\"}],\"name\":\"setTokenManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenPrecisions\",\"type\":\"uint256[]\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultPriceFeed\",\"type\":\"address\"}],\"name\":\"setVaultPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spreadBasisPointsIfChainError\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spreadBasisPointsIfInactive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrecisions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/FastPriceFeed.sol\":\"FastPriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/access/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ncontract Governable {\\n    address public gov;\\n\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    modifier onlyGov() {\\n        require(msg.sender == gov, \\\"Governable: forbidden\\\");\\n        _;\\n    }\\n\\n    function setGov(address _gov) external onlyGov {\\n        gov = _gov;\\n    }\\n}\\n\",\"keccak256\":\"0xe719b0de64ee00468f6a985c8ef08ebdd271d99d6616308cbba458f78ed8c532\",\"license\":\"MIT\"},\"contracts/core/interfaces/IPositionRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPositionRouter {\\n    function increasePositionRequestKeysStart() external returns (uint256);\\n    function decreasePositionRequestKeysStart() external returns (uint256);\\n    function executeIncreasePositions(uint256 _count, address payable _executionFeeReceiver) external;\\n    function executeDecreasePositions(uint256 _count, address payable _executionFeeReceiver) external;\\n}\\n\",\"keccak256\":\"0x6e961b41bd643e45b93d04b074267212a7cc7025f6ea1b13ce9413f9a7437a82\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultPriceFeed {\\n    function adjustmentBasisPoints(address _token) external view returns (uint256);\\n    function isAdjustmentAdditive(address _token) external view returns (bool);\\n    function setAdjustment(address _token, bool _isAdditive, uint256 _adjustmentBps) external;\\n    function setUseV2Pricing(bool _useV2Pricing) external;\\n    function setIsAmmEnabled(bool _isEnabled) external;\\n    function setIsSecondaryPriceEnabled(bool _isEnabled) external;\\n    function setSpreadBasisPoints(address _token, uint256 _spreadBasisPoints) external;\\n    function setSpreadThresholdBasisPoints(uint256 _spreadThresholdBasisPoints) external;\\n    function setFavorPrimaryPrice(bool _favorPrimaryPrice) external;\\n    function setPriceSampleSpace(uint256 _priceSampleSpace) external;\\n    function setMaxStrictPriceDeviation(uint256 _maxStrictPriceDeviation) external;\\n    function getPrice(address _token, bool _maximise, bool _includeAmmPrice, bool _useSwapPricing) external view returns (uint256);\\n    function getAmmPrice(address _token) external view returns (uint256);\\n    function getLatestPrimaryPrice(address _token) external view returns (uint256);\\n    function getPrimaryPrice(address _token, bool _maximise) external view returns (uint256);\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbfd3640bfd3ace2eaefb6f82ed2063d802ba3fa4bf87072269753508954ed84f\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/oracle/FastPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\n\\nimport \\\"./interfaces/ISecondaryPriceFeed.sol\\\";\\nimport \\\"./interfaces/IFastPriceFeed.sol\\\";\\nimport \\\"./interfaces/IFastPriceEvents.sol\\\";\\nimport \\\"../core/interfaces/IVaultPriceFeed.sol\\\";\\nimport \\\"../core/interfaces/IPositionRouter.sol\\\";\\nimport \\\"../access/Governable.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\ncontract FastPriceFeed is ISecondaryPriceFeed, IFastPriceFeed, Governable {\\n  using SafeMath for uint256;\\n\\n  // fit data in a uint256 slot to save gas costs\\n  struct PriceDataItem {\\n    uint160 refPrice; // Chainlink price\\n    uint32 refTime; // last updated at time\\n    uint32 cumulativeRefDelta; // cumulative Chainlink price delta\\n    uint32 cumulativeFastDelta; // cumulative fast price delta\\n  }\\n\\n  uint256 public constant PRICE_PRECISION = 10**30;\\n\\n  uint256 public constant CUMULATIVE_DELTA_PRECISION = 10 * 1000 * 1000;\\n\\n  uint256 public constant MAX_REF_PRICE = type(uint160).max;\\n  uint256 public constant MAX_CUMULATIVE_REF_DELTA = type(uint32).max;\\n  uint256 public constant MAX_CUMULATIVE_FAST_DELTA = type(uint32).max;\\n\\n  // uint256(~0) is 256 bits of 1s\\n  // shift the 1s by (256 - 32) to get (256 - 32) 0s followed by 32 1s\\n  uint256 public constant BITMASK_32 = uint256(~0) >> (256 - 32);\\n\\n  uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n\\n  uint256 public constant MAX_PRICE_DURATION = 30 minutes;\\n\\n  bool public isInitialized;\\n  bool public isSpreadEnabled = false;\\n\\n  address public vaultPriceFeed;\\n  address public fastPriceEvents;\\n\\n  address public tokenManager;\\n\\n  address public positionRouter;\\n\\n  uint256 public override lastUpdatedAt;\\n  uint256 public override lastUpdatedBlock;\\n\\n  uint256 public priceDuration;\\n  uint256 public maxPriceUpdateDelay;\\n  uint256 public spreadBasisPointsIfInactive;\\n  uint256 public spreadBasisPointsIfChainError;\\n  uint256 public minBlockInterval;\\n  uint256 public maxTimeDeviation;\\n\\n  uint256 public priceDataInterval;\\n\\n  // allowed deviation from primary price\\n  uint256 public maxDeviationBasisPoints;\\n\\n  uint256 public minAuthorizations;\\n  uint256 public disableFastPriceVoteCount = 0;\\n\\n  mapping(address => bool) public isUpdater;\\n\\n  mapping(address => uint256) public prices;\\n  mapping(address => PriceDataItem) public priceData;\\n  mapping(address => uint256) public maxCumulativeDeltaDiffs;\\n\\n  mapping(address => bool) public isSigner;\\n  mapping(address => bool) public disableFastPriceVotes;\\n\\n  // array of tokens used in setCompactedPrices, saves L1 calldata gas costs\\n  address[] public tokens;\\n  // array of tokenPrecisions used in setCompactedPrices, saves L1 calldata gas costs\\n  // if the token price will be sent with 3 decimals, then tokenPrecision for that token\\n  // should be 10 ** 3\\n  uint256[] public tokenPrecisions;\\n\\n  event DisableFastPrice(address signer);\\n  event EnableFastPrice(address signer);\\n  event PriceData(\\n    address token,\\n    uint256 refPrice,\\n    uint256 fastPrice,\\n    uint256 cumulativeRefDelta,\\n    uint256 cumulativeFastDelta\\n  );\\n  event MaxCumulativeDeltaDiffExceeded(\\n    address token,\\n    uint256 refPrice,\\n    uint256 fastPrice,\\n    uint256 cumulativeRefDelta,\\n    uint256 cumulativeFastDelta\\n  );\\n\\n  modifier onlySigner() {\\n    require(isSigner[msg.sender], \\\"FastPriceFeed: forbidden\\\");\\n    _;\\n  }\\n\\n  modifier onlyUpdater() {\\n    require(isUpdater[msg.sender], \\\"FastPriceFeed: forbidden\\\");\\n    _;\\n  }\\n\\n  modifier onlyTokenManager() {\\n    require(msg.sender == tokenManager, \\\"FastPriceFeed: forbidden\\\");\\n    _;\\n  }\\n\\n  constructor(\\n    uint256 _priceDuration,\\n    uint256 _maxPriceUpdateDelay,\\n    uint256 _minBlockInterval,\\n    uint256 _maxDeviationBasisPoints,\\n    address _fastPriceEvents,\\n    address _tokenManager,\\n    address _positionRouter\\n  ) public {\\n    require(_priceDuration <= MAX_PRICE_DURATION, \\\"FastPriceFeed: invalid _priceDuration\\\");\\n    priceDuration = _priceDuration;\\n    maxPriceUpdateDelay = _maxPriceUpdateDelay;\\n    minBlockInterval = _minBlockInterval;\\n    maxDeviationBasisPoints = _maxDeviationBasisPoints;\\n    fastPriceEvents = _fastPriceEvents;\\n    tokenManager = _tokenManager;\\n    positionRouter = _positionRouter;\\n  }\\n\\n  function initialize(\\n    uint256 _minAuthorizations,\\n    address[] memory _signers,\\n    address[] memory _updaters\\n  ) public onlyGov {\\n    require(!isInitialized, \\\"FastPriceFeed: already initialized\\\");\\n    isInitialized = true;\\n\\n    minAuthorizations = _minAuthorizations;\\n\\n    for (uint256 i = 0; i < _signers.length; i++) {\\n      address signer = _signers[i];\\n      isSigner[signer] = true;\\n    }\\n\\n    for (uint256 i = 0; i < _updaters.length; i++) {\\n      address updater = _updaters[i];\\n      isUpdater[updater] = true;\\n    }\\n  }\\n\\n  function setSigner(address _account, bool _isActive) external override onlyGov {\\n    isSigner[_account] = _isActive;\\n  }\\n\\n  function setUpdater(address _account, bool _isActive) external override onlyGov {\\n    isUpdater[_account] = _isActive;\\n  }\\n\\n  function setFastPriceEvents(address _fastPriceEvents) external onlyGov {\\n    fastPriceEvents = _fastPriceEvents;\\n  }\\n\\n  function setVaultPriceFeed(address _vaultPriceFeed) external override onlyGov {\\n    vaultPriceFeed = _vaultPriceFeed;\\n  }\\n\\n  function setMaxTimeDeviation(uint256 _maxTimeDeviation) external onlyGov {\\n    maxTimeDeviation = _maxTimeDeviation;\\n  }\\n\\n  function setPriceDuration(uint256 _priceDuration) external override onlyGov {\\n    require(_priceDuration <= MAX_PRICE_DURATION, \\\"FastPriceFeed: invalid _priceDuration\\\");\\n    priceDuration = _priceDuration;\\n  }\\n\\n  function setMaxPriceUpdateDelay(uint256 _maxPriceUpdateDelay) external override onlyGov {\\n    maxPriceUpdateDelay = _maxPriceUpdateDelay;\\n  }\\n\\n  function setSpreadBasisPointsIfInactive(uint256 _spreadBasisPointsIfInactive)\\n    external\\n    override\\n    onlyGov\\n  {\\n    spreadBasisPointsIfInactive = _spreadBasisPointsIfInactive;\\n  }\\n\\n  function setSpreadBasisPointsIfChainError(uint256 _spreadBasisPointsIfChainError)\\n    external\\n    override\\n    onlyGov\\n  {\\n    spreadBasisPointsIfChainError = _spreadBasisPointsIfChainError;\\n  }\\n\\n  function setMinBlockInterval(uint256 _minBlockInterval) external override onlyGov {\\n    minBlockInterval = _minBlockInterval;\\n  }\\n\\n  function setIsSpreadEnabled(bool _isSpreadEnabled) external override onlyGov {\\n    isSpreadEnabled = _isSpreadEnabled;\\n  }\\n\\n  function setLastUpdatedAt(uint256 _lastUpdatedAt) external onlyGov {\\n    lastUpdatedAt = _lastUpdatedAt;\\n  }\\n\\n  function setTokenManager(address _tokenManager) external onlyTokenManager {\\n    tokenManager = _tokenManager;\\n  }\\n\\n  function setMaxDeviationBasisPoints(uint256 _maxDeviationBasisPoints)\\n    external\\n    override\\n    onlyTokenManager\\n  {\\n    maxDeviationBasisPoints = _maxDeviationBasisPoints;\\n  }\\n\\n  function setMaxCumulativeDeltaDiffs(\\n    address[] memory _tokens,\\n    uint256[] memory _maxCumulativeDeltaDiffs\\n  ) external override onlyTokenManager {\\n    for (uint256 i = 0; i < _tokens.length; i++) {\\n      address token = _tokens[i];\\n      maxCumulativeDeltaDiffs[token] = _maxCumulativeDeltaDiffs[i];\\n    }\\n  }\\n\\n  function setPriceDataInterval(uint256 _priceDataInterval) external override onlyTokenManager {\\n    priceDataInterval = _priceDataInterval;\\n  }\\n\\n  function setMinAuthorizations(uint256 _minAuthorizations) external onlyTokenManager {\\n    minAuthorizations = _minAuthorizations;\\n  }\\n\\n  function setTokens(address[] memory _tokens, uint256[] memory _tokenPrecisions) external onlyGov {\\n    require(_tokens.length == _tokenPrecisions.length, \\\"FastPriceFeed: invalid lengths\\\");\\n    tokens = _tokens;\\n    tokenPrecisions = _tokenPrecisions;\\n  }\\n\\n  function setPrices(\\n    address[] memory _tokens,\\n    uint256[] memory _prices,\\n    uint256 _timestamp\\n  ) external onlyUpdater {\\n    bool shouldUpdate = _setLastUpdatedValues(_timestamp);\\n\\n    if (shouldUpdate) {\\n      address _fastPriceEvents = fastPriceEvents;\\n      address _vaultPriceFeed = vaultPriceFeed;\\n\\n      for (uint256 i = 0; i < _tokens.length; i++) {\\n        address token = _tokens[i];\\n        _setPrice(token, _prices[i], _vaultPriceFeed, _fastPriceEvents);\\n      }\\n    }\\n  }\\n\\n  function setCompactedPrices(uint256[] memory _priceBitArray, uint256 _timestamp)\\n    external\\n    onlyUpdater\\n  {\\n    bool shouldUpdate = _setLastUpdatedValues(_timestamp);\\n\\n    if (shouldUpdate) {\\n      address _fastPriceEvents = fastPriceEvents;\\n      address _vaultPriceFeed = vaultPriceFeed;\\n\\n      for (uint256 i = 0; i < _priceBitArray.length; i++) {\\n        uint256 priceBits = _priceBitArray[i];\\n\\n        for (uint256 j = 0; j < 8; j++) {\\n          uint256 index = i * 8 + j;\\n          if (index >= tokens.length) {\\n            return;\\n          }\\n\\n          uint256 startBit = 32 * j;\\n          uint256 price = (priceBits >> startBit) & BITMASK_32;\\n\\n          address token = tokens[i * 8 + j];\\n          uint256 tokenPrecision = tokenPrecisions[i * 8 + j];\\n          uint256 adjustedPrice = price.mul(PRICE_PRECISION).div(tokenPrecision);\\n\\n          _setPrice(token, adjustedPrice, _vaultPriceFeed, _fastPriceEvents);\\n        }\\n      }\\n    }\\n  }\\n\\n  function setPricesWithBits(uint256 _priceBits, uint256 _timestamp) external onlyUpdater {\\n    _setPricesWithBits(_priceBits, _timestamp);\\n  }\\n\\n  function setPricesWithBitsAndExecute(\\n    uint256 _priceBits,\\n    uint256 _timestamp,\\n    uint256 _endIndexForIncreasePositions,\\n    uint256 _endIndexForDecreasePositions,\\n    uint256 _maxIncreasePositions,\\n    uint256 _maxDecreasePositions\\n  ) external onlyUpdater {\\n    _setPricesWithBits(_priceBits, _timestamp);\\n\\n    IPositionRouter _positionRouter = IPositionRouter(positionRouter);\\n    uint256 maxEndIndexForIncrease = _positionRouter.increasePositionRequestKeysStart().add(\\n      _maxIncreasePositions\\n    );\\n    uint256 maxEndIndexForDecrease = _positionRouter.decreasePositionRequestKeysStart().add(\\n      _maxDecreasePositions\\n    );\\n\\n    if (_endIndexForIncreasePositions > maxEndIndexForIncrease) {\\n      _endIndexForIncreasePositions = maxEndIndexForIncrease;\\n    }\\n\\n    if (_endIndexForDecreasePositions > maxEndIndexForDecrease) {\\n      _endIndexForDecreasePositions = maxEndIndexForDecrease;\\n    }\\n\\n    _positionRouter.executeIncreasePositions(_endIndexForIncreasePositions, payable(msg.sender));\\n    _positionRouter.executeDecreasePositions(_endIndexForDecreasePositions, payable(msg.sender));\\n  }\\n\\n  function disableFastPrice() external onlySigner {\\n    require(!disableFastPriceVotes[msg.sender], \\\"FastPriceFeed: already voted\\\");\\n    disableFastPriceVotes[msg.sender] = true;\\n    disableFastPriceVoteCount = disableFastPriceVoteCount.add(1);\\n\\n    emit DisableFastPrice(msg.sender);\\n  }\\n\\n  function enableFastPrice() external onlySigner {\\n    require(disableFastPriceVotes[msg.sender], \\\"FastPriceFeed: already enabled\\\");\\n    disableFastPriceVotes[msg.sender] = false;\\n    disableFastPriceVoteCount = disableFastPriceVoteCount.sub(1);\\n\\n    emit EnableFastPrice(msg.sender);\\n  }\\n\\n  // under regular operation, the fastPrice (prices[token]) is returned and there is no spread returned from this function,\\n  // though VaultPriceFeed might apply its own spread\\n  //\\n  // if the fastPrice has not been updated within priceDuration then it is ignored and only _refPrice with a spread is used (spread: spreadBasisPointsIfInactive)\\n  // in case the fastPrice has not been updated for maxPriceUpdateDelay then the _refPrice with a larger spread is used (spread: spreadBasisPointsIfChainError)\\n  //\\n  // there will be a spread from the _refPrice to the fastPrice in the following cases:\\n  // - in case isSpreadEnabled is set to true\\n  // - in case the maxDeviationBasisPoints between _refPrice and fastPrice is exceeded\\n  // - in case watchers flag an issue\\n  // - in case the cumulativeFastDelta exceeds the cumulativeRefDelta by the maxCumulativeDeltaDiff\\n  function getPrice(\\n    address _token,\\n    uint256 _refPrice,\\n    bool _maximise\\n  ) external view override returns (uint256) {\\n    if (block.timestamp > lastUpdatedAt.add(maxPriceUpdateDelay)) {\\n      if (_maximise) {\\n        return\\n          _refPrice.mul(BASIS_POINTS_DIVISOR.add(spreadBasisPointsIfChainError)).div(\\n            BASIS_POINTS_DIVISOR\\n          );\\n      }\\n\\n      return\\n        _refPrice.mul(BASIS_POINTS_DIVISOR.sub(spreadBasisPointsIfChainError)).div(\\n          BASIS_POINTS_DIVISOR\\n        );\\n    }\\n\\n    if (block.timestamp > lastUpdatedAt.add(priceDuration)) {\\n      if (_maximise) {\\n        return\\n          _refPrice.mul(BASIS_POINTS_DIVISOR.add(spreadBasisPointsIfInactive)).div(\\n            BASIS_POINTS_DIVISOR\\n          );\\n      }\\n\\n      return\\n        _refPrice.mul(BASIS_POINTS_DIVISOR.sub(spreadBasisPointsIfInactive)).div(\\n          BASIS_POINTS_DIVISOR\\n        );\\n    }\\n\\n    uint256 fastPrice = prices[_token];\\n    if (fastPrice == 0) {\\n      return _refPrice;\\n    }\\n\\n    uint256 diffBasisPoints = _refPrice > fastPrice\\n      ? _refPrice.sub(fastPrice)\\n      : fastPrice.sub(_refPrice);\\n    diffBasisPoints = diffBasisPoints.mul(BASIS_POINTS_DIVISOR).div(_refPrice);\\n\\n    // create a spread between the _refPrice and the fastPrice if the maxDeviationBasisPoints is exceeded\\n    // or if watchers have flagged an issue with the fast price\\n    bool hasSpread = !favorFastPrice(_token) || diffBasisPoints > maxDeviationBasisPoints;\\n\\n    if (hasSpread) {\\n      // return the higher of the two prices\\n      if (_maximise) {\\n        return _refPrice > fastPrice ? _refPrice : fastPrice;\\n      }\\n\\n      // return the lower of the two prices\\n      return _refPrice < fastPrice ? _refPrice : fastPrice;\\n    }\\n\\n    return fastPrice;\\n  }\\n\\n  function favorFastPrice(address _token) public view returns (bool) {\\n    if (isSpreadEnabled) {\\n      return false;\\n    }\\n\\n    if (disableFastPriceVoteCount >= minAuthorizations) {\\n      // force a spread if watchers have flagged an issue with the fast price\\n      return false;\\n    }\\n\\n    (\\n      ,\\n      ,\\n      /* uint256 prevRefPrice */\\n      /* uint256 refTime */\\n      uint256 cumulativeRefDelta,\\n      uint256 cumulativeFastDelta\\n    ) = getPriceData(_token);\\n    if (\\n      cumulativeFastDelta > cumulativeRefDelta &&\\n      cumulativeFastDelta.sub(cumulativeRefDelta) > maxCumulativeDeltaDiffs[_token]\\n    ) {\\n      // force a spread if the cumulative delta for the fast price feed exceeds the cumulative delta\\n      // for the Chainlink price feed by the maxCumulativeDeltaDiff allowed\\n      return false;\\n    }\\n\\n    return true;\\n  }\\n\\n  function getPriceData(address _token)\\n    public\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    )\\n  {\\n    PriceDataItem memory data = priceData[_token];\\n    return (\\n      uint256(data.refPrice),\\n      uint256(data.refTime),\\n      uint256(data.cumulativeRefDelta),\\n      uint256(data.cumulativeFastDelta)\\n    );\\n  }\\n\\n  function _setPricesWithBits(uint256 _priceBits, uint256 _timestamp) private {\\n    bool shouldUpdate = _setLastUpdatedValues(_timestamp);\\n\\n    if (shouldUpdate) {\\n      address _fastPriceEvents = fastPriceEvents;\\n      address _vaultPriceFeed = vaultPriceFeed;\\n\\n      for (uint256 j = 0; j < 8; j++) {\\n        uint256 index = j;\\n        if (index >= tokens.length) {\\n          return;\\n        }\\n\\n        uint256 startBit = 32 * j;\\n        uint256 price = (_priceBits >> startBit) & BITMASK_32;\\n\\n        address token = tokens[j];\\n        uint256 tokenPrecision = tokenPrecisions[j];\\n        uint256 adjustedPrice = price.mul(PRICE_PRECISION).div(tokenPrecision);\\n\\n        _setPrice(token, adjustedPrice, _vaultPriceFeed, _fastPriceEvents);\\n      }\\n    }\\n  }\\n\\n  function _setPrice(\\n    address _token,\\n    uint256 _price,\\n    address _vaultPriceFeed,\\n    address _fastPriceEvents\\n  ) private {\\n    if (_vaultPriceFeed != address(0)) {\\n      uint256 refPrice = IVaultPriceFeed(_vaultPriceFeed).getLatestPrimaryPrice(_token);\\n      uint256 fastPrice = prices[_token];\\n\\n      (\\n        uint256 prevRefPrice,\\n        uint256 refTime,\\n        uint256 cumulativeRefDelta,\\n        uint256 cumulativeFastDelta\\n      ) = getPriceData(_token);\\n\\n      if (prevRefPrice > 0) {\\n        uint256 refDeltaAmount = refPrice > prevRefPrice\\n          ? refPrice.sub(prevRefPrice)\\n          : prevRefPrice.sub(refPrice);\\n        uint256 fastDeltaAmount = fastPrice > _price\\n          ? fastPrice.sub(_price)\\n          : _price.sub(fastPrice);\\n\\n        // reset cumulative delta values if it is a new time window\\n        if (refTime.div(priceDataInterval) != block.timestamp.div(priceDataInterval)) {\\n          cumulativeRefDelta = 0;\\n          cumulativeFastDelta = 0;\\n        }\\n\\n        cumulativeRefDelta = cumulativeRefDelta.add(\\n          refDeltaAmount.mul(CUMULATIVE_DELTA_PRECISION).div(prevRefPrice)\\n        );\\n        cumulativeFastDelta = cumulativeFastDelta.add(\\n          fastDeltaAmount.mul(CUMULATIVE_DELTA_PRECISION).div(fastPrice)\\n        );\\n      }\\n\\n      if (\\n        cumulativeFastDelta > cumulativeRefDelta &&\\n        cumulativeFastDelta.sub(cumulativeRefDelta) > maxCumulativeDeltaDiffs[_token]\\n      ) {\\n        emit MaxCumulativeDeltaDiffExceeded(\\n          _token,\\n          refPrice,\\n          fastPrice,\\n          cumulativeRefDelta,\\n          cumulativeFastDelta\\n        );\\n      }\\n\\n      _setPriceData(_token, refPrice, cumulativeRefDelta, cumulativeFastDelta);\\n      emit PriceData(_token, refPrice, fastPrice, cumulativeRefDelta, cumulativeFastDelta);\\n    }\\n\\n    prices[_token] = _price;\\n    _emitPriceEvent(_fastPriceEvents, _token, _price);\\n  }\\n\\n  function _setPriceData(\\n    address _token,\\n    uint256 _refPrice,\\n    uint256 _cumulativeRefDelta,\\n    uint256 _cumulativeFastDelta\\n  ) private {\\n    require(_refPrice < MAX_REF_PRICE, \\\"FastPriceFeed: invalid refPrice\\\");\\n    // skip validation of block.timestamp, it should only be out of range after the year 2100\\n    require(\\n      _cumulativeRefDelta < MAX_CUMULATIVE_REF_DELTA,\\n      \\\"FastPriceFeed: invalid cumulativeRefDelta\\\"\\n    );\\n    require(\\n      _cumulativeFastDelta < MAX_CUMULATIVE_FAST_DELTA,\\n      \\\"FastPriceFeed: invalid cumulativeFastDelta\\\"\\n    );\\n\\n    priceData[_token] = PriceDataItem(\\n      uint160(_refPrice),\\n      uint32(block.timestamp),\\n      uint32(_cumulativeRefDelta),\\n      uint32(_cumulativeFastDelta)\\n    );\\n  }\\n\\n  function _emitPriceEvent(\\n    address _fastPriceEvents,\\n    address _token,\\n    uint256 _price\\n  ) private {\\n    if (_fastPriceEvents == address(0)) {\\n      return;\\n    }\\n\\n    IFastPriceEvents(_fastPriceEvents).emitPriceEvent(_token, _price);\\n  }\\n\\n  function _setLastUpdatedValues(uint256 _timestamp) private returns (bool) {\\n    if (minBlockInterval > 0) {\\n      require(\\n        block.number.sub(lastUpdatedBlock) >= minBlockInterval,\\n        \\\"FastPriceFeed: minBlockInterval not yet passed\\\"\\n      );\\n    }\\n\\n    uint256 _maxTimeDeviation = maxTimeDeviation;\\n    require(\\n      _timestamp > block.timestamp.sub(_maxTimeDeviation),\\n      \\\"FastPriceFeed: _timestamp below allowed range\\\"\\n    );\\n    require(\\n      _timestamp < block.timestamp.add(_maxTimeDeviation),\\n      \\\"FastPriceFeed: _timestamp exceeds allowed range\\\"\\n    );\\n\\n    // do not update prices if _timestamp is before the current lastUpdatedAt value\\n    if (_timestamp < lastUpdatedAt) {\\n      return false;\\n    }\\n\\n    lastUpdatedAt = _timestamp;\\n    lastUpdatedBlock = block.number;\\n\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0x1547a66db86ba85d827efdcb6c23bc0b5ec2d40ec2240318cfe15c544002c2df\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/IFastPriceEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IFastPriceEvents {\\n    function emitPriceEvent(address _token, uint256 _price) external;\\n}\\n\",\"keccak256\":\"0x7984b46d5189249234dc6a14f4cb7ac7f97ad9b843acf7fc7b44155703c447a6\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/IFastPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IFastPriceFeed {\\n    function lastUpdatedAt() external view returns (uint256);\\n    function lastUpdatedBlock() external view returns (uint256);\\n    function setSigner(address _account, bool _isActive) external;\\n    function setUpdater(address _account, bool _isActive) external;\\n    function setPriceDuration(uint256 _priceDuration) external;\\n    function setMaxPriceUpdateDelay(uint256 _maxPriceUpdateDelay) external;\\n    function setSpreadBasisPointsIfInactive(uint256 _spreadBasisPointsIfInactive) external;\\n    function setSpreadBasisPointsIfChainError(uint256 _spreadBasisPointsIfChainError) external;\\n    function setMinBlockInterval(uint256 _minBlockInterval) external;\\n    function setIsSpreadEnabled(bool _isSpreadEnabled) external;\\n    function setMaxDeviationBasisPoints(uint256 _maxDeviationBasisPoints) external;\\n    function setMaxCumulativeDeltaDiffs(address[] memory _tokens,  uint256[] memory _maxCumulativeDeltaDiffs) external;\\n    function setPriceDataInterval(uint256 _priceDataInterval) external;\\n    function setVaultPriceFeed(address _vaultPriceFeed) external;\\n}\\n\",\"keccak256\":\"0xeb57d58b2a78026fa32dd23e6b4f60a954a735b133a2f945df6a8497420e950c\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/ISecondaryPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ISecondaryPriceFeed {\\n    function getPrice(address _token, uint256 _referencePrice, bool _maximise) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7de08b8aac1d222b1ada69fb4f4b05764c8190faab711f6194f4bb7ddd4a9361\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 23773,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "isInitialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 23776,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "isSpreadEnabled",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 23778,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "vaultPriceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 23780,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "fastPriceEvents",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 23782,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "tokenManager",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 23784,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "positionRouter",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 23787,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "lastUpdatedAt",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 23790,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "lastUpdatedBlock",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 23792,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "priceDuration",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 23794,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "maxPriceUpdateDelay",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 23796,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "spreadBasisPointsIfInactive",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 23798,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "spreadBasisPointsIfChainError",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 23800,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "minBlockInterval",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 23802,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "maxTimeDeviation",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 23804,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "priceDataInterval",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 23806,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "maxDeviationBasisPoints",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 23808,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "minAuthorizations",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 23811,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "disableFastPriceVoteCount",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 23815,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "isUpdater",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23819,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "prices",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23823,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "priceData",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_struct(PriceDataItem)23720_storage)"
      },
      {
        "astId": 23827,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "maxCumulativeDeltaDiffs",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23831,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "isSigner",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23835,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "disableFastPriceVotes",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23838,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "tokens",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 23841,
        "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
        "label": "tokenPrecisions",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(PriceDataItem)23720_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FastPriceFeed.PriceDataItem)",
        "numberOfBytes": "32",
        "value": "t_struct(PriceDataItem)23720_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(PriceDataItem)23720_storage": {
        "encoding": "inplace",
        "label": "struct FastPriceFeed.PriceDataItem",
        "members": [
          {
            "astId": 23713,
            "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
            "label": "refPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint160"
          },
          {
            "astId": 23715,
            "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
            "label": "refTime",
            "offset": 20,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 23717,
            "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
            "label": "cumulativeRefDelta",
            "offset": 24,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 23719,
            "contract": "contracts/oracle/FastPriceFeed.sol:FastPriceFeed",
            "label": "cumulativeFastDelta",
            "offset": 28,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint160": {
        "encoding": "inplace",
        "label": "uint160",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}