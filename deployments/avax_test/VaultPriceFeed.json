{
  "address": "0x40bd091163A47cE5aF3AD5A098cfD4431714c2A6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_ADJUSTMENT_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_ADJUSTMENT_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPREAD_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adjustmentBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bnb",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bnbBusd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "btc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "btcBnb",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainlinkFlags",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethBnb",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "favorPrimaryPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getAmmPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_primaryPrice",
          "type": "uint256"
        }
      ],
      "name": "getAmmPriceV2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getLatestPrimaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_divByReserve0",
          "type": "bool"
        }
      ],
      "name": "getPairPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_includeAmmPrice",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_includeAmmPrice",
          "type": "bool"
        }
      ],
      "name": "getPriceV1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_includeAmmPrice",
          "type": "bool"
        }
      ],
      "name": "getPriceV2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getPrimaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_referencePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getSecondaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdjustmentAdditive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAmmEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSecondaryPriceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastAdjustmentTimings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxStrictPriceDeviation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSampleSpace",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondaryPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdditive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_adjustmentBps",
          "type": "uint256"
        }
      ],
      "name": "setAdjustment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chainlinkFlags",
          "type": "address"
        }
      ],
      "name": "setChainlinkFlags",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_favorPrimaryPrice",
          "type": "bool"
        }
      ],
      "name": "setFavorPrimaryPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsAmmEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSecondaryPriceEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxStrictPriceDeviation",
          "type": "uint256"
        }
      ],
      "name": "setMaxStrictPriceDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bnbBusd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ethBnb",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_btcBnb",
          "type": "address"
        }
      ],
      "name": "setPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceSampleSpace",
          "type": "uint256"
        }
      ],
      "name": "setPriceSampleSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_secondaryPriceFeed",
          "type": "address"
        }
      ],
      "name": "setSecondaryPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_spreadBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpreadBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spreadThresholdBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpreadThresholdBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_priceDecimals",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStrictStable",
          "type": "bool"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_btc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_eth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bnb",
          "type": "address"
        }
      ],
      "name": "setTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_useV2Pricing",
          "type": "bool"
        }
      ],
      "name": "setUseV2Pricing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "spreadBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spreadThresholdBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strictStableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useV2Pricing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x97ab34e39b55e63856b66b2f14fd63cd5aa5ae92f75afb062c17b70f678b8657",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0x40bd091163A47cE5aF3AD5A098cfD4431714c2A6",
    "transactionIndex": 0,
    "gasUsed": "1966415",
    "logsBloom": "0x
    "blockHash": "0x0fcd4d883d116b4b29f06ed46b4885f86ad3f55d8a3fb9fdd7bca13426230e86",
    "transactionHash": "0x97ab34e39b55e63856b66b2f14fd63cd5aa5ae92f75afb062c17b70f678b8657",
    "logs": [],
    "blockNumber": 17664406,
    "cumulativeGasUsed": "1966415",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a5c1ec6ed734a994a4a7c4ed9bed389b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ADJUSTMENT_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ADJUSTMENT_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPREAD_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adjustmentBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbBusd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcBnb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlinkFlags\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethBnb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"favorPrimaryPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getAmmPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_primaryPrice\",\"type\":\"uint256\"}],\"name\":\"getAmmPriceV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLatestPrimaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_divByReserve0\",\"type\":\"bool\"}],\"name\":\"getPairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_includeAmmPrice\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_includeAmmPrice\",\"type\":\"bool\"}],\"name\":\"getPriceV1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_includeAmmPrice\",\"type\":\"bool\"}],\"name\":\"getPriceV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getPrimaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referencePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getSecondaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdjustmentAdditive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAmmEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSecondaryPriceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastAdjustmentTimings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStrictPriceDeviation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSampleSpace\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondaryPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdditive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_adjustmentBps\",\"type\":\"uint256\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlinkFlags\",\"type\":\"address\"}],\"name\":\"setChainlinkFlags\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_favorPrimaryPrice\",\"type\":\"bool\"}],\"name\":\"setFavorPrimaryPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setIsAmmEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSecondaryPriceEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxStrictPriceDeviation\",\"type\":\"uint256\"}],\"name\":\"setMaxStrictPriceDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bnbBusd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ethBnb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_btcBnb\",\"type\":\"address\"}],\"name\":\"setPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceSampleSpace\",\"type\":\"uint256\"}],\"name\":\"setPriceSampleSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_secondaryPriceFeed\",\"type\":\"address\"}],\"name\":\"setSecondaryPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_spreadBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpreadBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spreadThresholdBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpreadThresholdBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_priceDecimals\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStrictStable\",\"type\":\"bool\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_btc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_eth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bnb\",\"type\":\"address\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useV2Pricing\",\"type\":\"bool\"}],\"name\":\"setUseV2Pricing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spreadBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spreadThresholdBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strictStableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useV2Pricing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VaultPriceFeed.sol\":\"VaultPriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/amm/interfaces/IPancakePair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface IPancakePair {\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n}\\n\",\"keccak256\":\"0x3dcc81f2681ce8d6231acd3d0c5e173068c27a15c2cf4a796d54cffd28fe1c75\",\"license\":\"MIT\"},\"contracts/core/VaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\n\\nimport \\\"./interfaces/IVaultPriceFeed.sol\\\";\\nimport \\\"../oracle/interfaces/IPriceFeed.sol\\\";\\nimport \\\"../oracle/interfaces/ISecondaryPriceFeed.sol\\\";\\nimport \\\"../oracle/interfaces/IChainlinkFlags.sol\\\";\\nimport \\\"../amm/interfaces/IPancakePair.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\ncontract VaultPriceFeed is IVaultPriceFeed {\\n  using SafeMath for uint256;\\n\\n  uint256 public constant PRICE_PRECISION = 10**30;\\n  uint256 public constant ONE_USD = PRICE_PRECISION;\\n  uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n  uint256 public constant MAX_SPREAD_BASIS_POINTS = 50;\\n  uint256 public constant MAX_ADJUSTMENT_INTERVAL = 2 hours;\\n  uint256 public constant MAX_ADJUSTMENT_BASIS_POINTS = 20;\\n\\n  // Identifier of the Sequencer offline flag on the Flags contract\\n  address private constant FLAG_ARBITRUM_SEQ_OFFLINE =\\n    address(bytes20(bytes32(uint256(keccak256(\\\"chainlink.flags.arbitrum-seq-offline\\\")) - 1)));\\n\\n  address public gov;\\n  address public chainlinkFlags;\\n\\n  bool public isAmmEnabled = true;\\n  bool public isSecondaryPriceEnabled = true;\\n  bool public useV2Pricing = false;\\n  bool public favorPrimaryPrice = false;\\n  uint256 public priceSampleSpace = 3;\\n  uint256 public maxStrictPriceDeviation = 0;\\n  address public secondaryPriceFeed;\\n  uint256 public spreadThresholdBasisPoints = 30;\\n\\n  address public btc;\\n  address public eth;\\n  address public bnb;\\n  address public bnbBusd;\\n  address public ethBnb;\\n  address public btcBnb;\\n\\n  mapping(address => address) public priceFeeds;\\n  mapping(address => uint256) public priceDecimals;\\n  mapping(address => uint256) public spreadBasisPoints;\\n  // Chainlink can return prices for stablecoins\\n  // that differs from 1 USD by a larger percentage than stableSwapFeeBasisPoints\\n  // we use strictStableTokens to cap the price to 1 USD\\n  // this allows us to configure stablecoins like DAI as being a stableToken\\n  // while not being a strictStableToken\\n  mapping(address => bool) public strictStableTokens;\\n\\n  mapping(address => uint256) public override adjustmentBasisPoints;\\n  mapping(address => bool) public override isAdjustmentAdditive;\\n  mapping(address => uint256) public lastAdjustmentTimings;\\n\\n  modifier onlyGov() {\\n    require(msg.sender == gov, \\\"VaultPriceFeed: forbidden\\\");\\n    _;\\n  }\\n\\n  constructor() public {\\n    gov = msg.sender;\\n  }\\n\\n  function setGov(address _gov) external onlyGov {\\n    gov = _gov;\\n  }\\n\\n  function setChainlinkFlags(address _chainlinkFlags) external onlyGov {\\n    chainlinkFlags = _chainlinkFlags;\\n  }\\n\\n  function setAdjustment(\\n    address _token,\\n    bool _isAdditive,\\n    uint256 _adjustmentBps\\n  ) external override onlyGov {\\n    require(\\n      lastAdjustmentTimings[_token].add(MAX_ADJUSTMENT_INTERVAL) < block.timestamp,\\n      \\\"VaultPriceFeed: adjustment frequency exceeded\\\"\\n    );\\n    require(_adjustmentBps <= MAX_ADJUSTMENT_BASIS_POINTS, \\\"invalid _adjustmentBps\\\");\\n    isAdjustmentAdditive[_token] = _isAdditive;\\n    adjustmentBasisPoints[_token] = _adjustmentBps;\\n    lastAdjustmentTimings[_token] = block.timestamp;\\n  }\\n\\n  function setUseV2Pricing(bool _useV2Pricing) external override onlyGov {\\n    useV2Pricing = _useV2Pricing;\\n  }\\n\\n  function setIsAmmEnabled(bool _isEnabled) external override onlyGov {\\n    isAmmEnabled = _isEnabled;\\n  }\\n\\n  function setIsSecondaryPriceEnabled(bool _isEnabled) external override onlyGov {\\n    isSecondaryPriceEnabled = _isEnabled;\\n  }\\n\\n  function setSecondaryPriceFeed(address _secondaryPriceFeed) external onlyGov {\\n    secondaryPriceFeed = _secondaryPriceFeed;\\n  }\\n\\n  function setTokens(\\n    address _btc,\\n    address _eth,\\n    address _bnb\\n  ) external onlyGov {\\n    btc = _btc;\\n    eth = _eth;\\n    bnb = _bnb;\\n  }\\n\\n  function setPairs(\\n    address _bnbBusd,\\n    address _ethBnb,\\n    address _btcBnb\\n  ) external onlyGov {\\n    bnbBusd = _bnbBusd;\\n    ethBnb = _ethBnb;\\n    btcBnb = _btcBnb;\\n  }\\n\\n  function setSpreadBasisPoints(address _token, uint256 _spreadBasisPoints)\\n    external\\n    override\\n    onlyGov\\n  {\\n    require(\\n      _spreadBasisPoints <= MAX_SPREAD_BASIS_POINTS,\\n      \\\"VaultPriceFeed: invalid _spreadBasisPoints\\\"\\n    );\\n    spreadBasisPoints[_token] = _spreadBasisPoints;\\n  }\\n\\n  function setSpreadThresholdBasisPoints(uint256 _spreadThresholdBasisPoints)\\n    external\\n    override\\n    onlyGov\\n  {\\n    spreadThresholdBasisPoints = _spreadThresholdBasisPoints;\\n  }\\n\\n  function setFavorPrimaryPrice(bool _favorPrimaryPrice) external override onlyGov {\\n    favorPrimaryPrice = _favorPrimaryPrice;\\n  }\\n\\n  function setPriceSampleSpace(uint256 _priceSampleSpace) external override onlyGov {\\n    require(_priceSampleSpace > 0, \\\"VaultPriceFeed: invalid _priceSampleSpace\\\");\\n    priceSampleSpace = _priceSampleSpace;\\n  }\\n\\n  function setMaxStrictPriceDeviation(uint256 _maxStrictPriceDeviation) external override onlyGov {\\n    maxStrictPriceDeviation = _maxStrictPriceDeviation;\\n  }\\n\\n  function setTokenConfig(\\n    address _token,\\n    address _priceFeed,\\n    uint256 _priceDecimals,\\n    bool _isStrictStable\\n  ) external override onlyGov {\\n    priceFeeds[_token] = _priceFeed;\\n    priceDecimals[_token] = _priceDecimals;\\n    strictStableTokens[_token] = _isStrictStable;\\n  }\\n\\n  function getPrice(\\n    address _token,\\n    bool _maximise,\\n    bool _includeAmmPrice,\\n    bool /* _useSwapPricing */\\n  ) public view override returns (uint256) {\\n    uint256 price = useV2Pricing\\n      ? getPriceV2(_token, _maximise, _includeAmmPrice)\\n      : getPriceV1(_token, _maximise, _includeAmmPrice);\\n\\n    uint256 adjustmentBps = adjustmentBasisPoints[_token];\\n    if (adjustmentBps > 0) {\\n      bool isAdditive = isAdjustmentAdditive[_token];\\n      if (isAdditive) {\\n        price = price.mul(BASIS_POINTS_DIVISOR.add(adjustmentBps)).div(BASIS_POINTS_DIVISOR);\\n      } else {\\n        price = price.mul(BASIS_POINTS_DIVISOR.sub(adjustmentBps)).div(BASIS_POINTS_DIVISOR);\\n      }\\n    }\\n\\n    return price;\\n  }\\n\\n  function getPriceV1(\\n    address _token,\\n    bool _maximise,\\n    bool _includeAmmPrice\\n  ) public view returns (uint256) {\\n    uint256 price = getPrimaryPrice(_token, _maximise);\\n\\n    if (_includeAmmPrice && isAmmEnabled) {\\n      uint256 ammPrice = getAmmPrice(_token);\\n      if (ammPrice > 0) {\\n        if (_maximise && ammPrice > price) {\\n          price = ammPrice;\\n        }\\n        if (!_maximise && ammPrice < price) {\\n          price = ammPrice;\\n        }\\n      }\\n    }\\n\\n    if (isSecondaryPriceEnabled) {\\n      price = getSecondaryPrice(_token, price, _maximise);\\n    }\\n\\n    if (strictStableTokens[_token]) {\\n      uint256 delta = price > ONE_USD ? price.sub(ONE_USD) : ONE_USD.sub(price);\\n      if (delta <= maxStrictPriceDeviation) {\\n        return ONE_USD;\\n      }\\n\\n      // if _maximise and price is e.g. 1.02, return 1.02\\n      if (_maximise && price > ONE_USD) {\\n        return price;\\n      }\\n\\n      // if !_maximise and price is e.g. 0.98, return 0.98\\n      if (!_maximise && price < ONE_USD) {\\n        return price;\\n      }\\n\\n      return ONE_USD;\\n    }\\n\\n    uint256 _spreadBasisPoints = spreadBasisPoints[_token];\\n\\n    if (_maximise) {\\n      return price.mul(BASIS_POINTS_DIVISOR.add(_spreadBasisPoints)).div(BASIS_POINTS_DIVISOR);\\n    }\\n\\n    return price.mul(BASIS_POINTS_DIVISOR.sub(_spreadBasisPoints)).div(BASIS_POINTS_DIVISOR);\\n  }\\n\\n  function getPriceV2(\\n    address _token,\\n    bool _maximise,\\n    bool _includeAmmPrice\\n  ) public view returns (uint256) {\\n    uint256 price = getPrimaryPrice(_token, _maximise);\\n\\n    if (_includeAmmPrice && isAmmEnabled) {\\n      price = getAmmPriceV2(_token, _maximise, price);\\n    }\\n\\n    if (isSecondaryPriceEnabled) {\\n      price = getSecondaryPrice(_token, price, _maximise);\\n    }\\n\\n    if (strictStableTokens[_token]) {\\n      uint256 delta = price > ONE_USD ? price.sub(ONE_USD) : ONE_USD.sub(price);\\n      if (delta <= maxStrictPriceDeviation) {\\n        return ONE_USD;\\n      }\\n\\n      // if _maximise and price is e.g. 1.02, return 1.02\\n      if (_maximise && price > ONE_USD) {\\n        return price;\\n      }\\n\\n      // if !_maximise and price is e.g. 0.98, return 0.98\\n      if (!_maximise && price < ONE_USD) {\\n        return price;\\n      }\\n\\n      return ONE_USD;\\n    }\\n\\n    uint256 _spreadBasisPoints = spreadBasisPoints[_token];\\n\\n    if (_maximise) {\\n      return price.mul(BASIS_POINTS_DIVISOR.add(_spreadBasisPoints)).div(BASIS_POINTS_DIVISOR);\\n    }\\n\\n    return price.mul(BASIS_POINTS_DIVISOR.sub(_spreadBasisPoints)).div(BASIS_POINTS_DIVISOR);\\n  }\\n\\n  function getAmmPriceV2(\\n    address _token,\\n    bool _maximise,\\n    uint256 _primaryPrice\\n  ) public view returns (uint256) {\\n    uint256 ammPrice = getAmmPrice(_token);\\n    if (ammPrice == 0) {\\n      return _primaryPrice;\\n    }\\n\\n    uint256 diff = ammPrice > _primaryPrice\\n      ? ammPrice.sub(_primaryPrice)\\n      : _primaryPrice.sub(ammPrice);\\n    if (diff.mul(BASIS_POINTS_DIVISOR) < _primaryPrice.mul(spreadThresholdBasisPoints)) {\\n      if (favorPrimaryPrice) {\\n        return _primaryPrice;\\n      }\\n      return ammPrice;\\n    }\\n\\n    if (_maximise && ammPrice > _primaryPrice) {\\n      return ammPrice;\\n    }\\n\\n    if (!_maximise && ammPrice < _primaryPrice) {\\n      return ammPrice;\\n    }\\n\\n    return _primaryPrice;\\n  }\\n\\n  function getLatestPrimaryPrice(address _token) public view override returns (uint256) {\\n    address priceFeedAddress = priceFeeds[_token];\\n    require(priceFeedAddress != address(0), \\\"VaultPriceFeed: invalid price feed\\\");\\n\\n    IPriceFeed priceFeed = IPriceFeed(priceFeedAddress);\\n\\n    int256 price = priceFeed.latestAnswer();\\n    require(price > 0, \\\"VaultPriceFeed: invalid price\\\");\\n\\n    return uint256(price);\\n  }\\n\\n  function getPrimaryPrice(address _token, bool _maximise) public view override returns (uint256) {\\n    address priceFeedAddress = priceFeeds[_token];\\n    require(priceFeedAddress != address(0), \\\"VaultPriceFeed: invalid price feed\\\");\\n\\n    if (chainlinkFlags != address(0)) {\\n      bool isRaised = IChainlinkFlags(chainlinkFlags).getFlag(FLAG_ARBITRUM_SEQ_OFFLINE);\\n      if (isRaised) {\\n        // If flag is raised we shouldn't perform any critical operations\\n        revert(\\\"Chainlink feeds are not being updated\\\");\\n      }\\n    }\\n\\n    IPriceFeed priceFeed = IPriceFeed(priceFeedAddress);\\n\\n    uint256 price = 0;\\n    uint80 roundId = priceFeed.latestRound();\\n\\n    for (uint80 i = 0; i < priceSampleSpace; i++) {\\n      if (roundId <= i) {\\n        break;\\n      }\\n      uint256 p;\\n\\n      if (i == 0) {\\n        int256 _p = priceFeed.latestAnswer();\\n        require(_p > 0, \\\"VaultPriceFeed: invalid price\\\");\\n        p = uint256(_p);\\n      } else {\\n        (, int256 _p, , , ) = priceFeed.getRoundData(roundId - i);\\n        require(_p > 0, \\\"VaultPriceFeed: invalid price\\\");\\n        p = uint256(_p);\\n      }\\n\\n      if (price == 0) {\\n        price = p;\\n        continue;\\n      }\\n\\n      if (_maximise && p > price) {\\n        price = p;\\n        continue;\\n      }\\n\\n      if (!_maximise && p < price) {\\n        price = p;\\n      }\\n    }\\n\\n    require(price > 0, \\\"VaultPriceFeed: could not fetch price\\\");\\n    // normalise price precision\\n    uint256 _priceDecimals = priceDecimals[_token];\\n    return price.mul(PRICE_PRECISION).div(10**_priceDecimals);\\n  }\\n\\n  function getSecondaryPrice(\\n    address _token,\\n    uint256 _referencePrice,\\n    bool _maximise\\n  ) public view returns (uint256) {\\n    if (secondaryPriceFeed == address(0)) {\\n      return _referencePrice;\\n    }\\n    return ISecondaryPriceFeed(secondaryPriceFeed).getPrice(_token, _referencePrice, _maximise);\\n  }\\n\\n  function getAmmPrice(address _token) public view override returns (uint256) {\\n    if (_token == bnb) {\\n      // for bnbBusd, reserve0: BNB, reserve1: BUSD\\n      return getPairPrice(bnbBusd, true);\\n    }\\n\\n    if (_token == eth) {\\n      uint256 price0 = getPairPrice(bnbBusd, true);\\n      // for ethBnb, reserve0: ETH, reserve1: BNB\\n      uint256 price1 = getPairPrice(ethBnb, true);\\n      // this calculation could overflow if (price0 / 10**30) * (price1 / 10**30) is more than 10**17\\n      return price0.mul(price1).div(PRICE_PRECISION);\\n    }\\n\\n    if (_token == btc) {\\n      uint256 price0 = getPairPrice(bnbBusd, true);\\n      // for btcBnb, reserve0: BTC, reserve1: BNB\\n      uint256 price1 = getPairPrice(btcBnb, true);\\n      // this calculation could overflow if (price0 / 10**30) * (price1 / 10**30) is more than 10**17\\n      return price0.mul(price1).div(PRICE_PRECISION);\\n    }\\n\\n    return 0;\\n  }\\n\\n  // if divByReserve0: calculate price as reserve1 / reserve0\\n  // if !divByReserve1: calculate price as reserve0 / reserve1\\n  function getPairPrice(address _pair, bool _divByReserve0) public view returns (uint256) {\\n    (uint256 reserve0, uint256 reserve1, ) = IPancakePair(_pair).getReserves();\\n    if (_divByReserve0) {\\n      if (reserve0 == 0) {\\n        return 0;\\n      }\\n      return reserve1.mul(PRICE_PRECISION).div(reserve0);\\n    }\\n    if (reserve1 == 0) {\\n      return 0;\\n    }\\n    return reserve0.mul(PRICE_PRECISION).div(reserve1);\\n  }\\n}\\n\",\"keccak256\":\"0xcf11ed7bd04c9c17e916403d0ee78629bfdf16e9ab4f71d47410fba3b486c727\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultPriceFeed {\\n    function adjustmentBasisPoints(address _token) external view returns (uint256);\\n    function isAdjustmentAdditive(address _token) external view returns (bool);\\n    function setAdjustment(address _token, bool _isAdditive, uint256 _adjustmentBps) external;\\n    function setUseV2Pricing(bool _useV2Pricing) external;\\n    function setIsAmmEnabled(bool _isEnabled) external;\\n    function setIsSecondaryPriceEnabled(bool _isEnabled) external;\\n    function setSpreadBasisPoints(address _token, uint256 _spreadBasisPoints) external;\\n    function setSpreadThresholdBasisPoints(uint256 _spreadThresholdBasisPoints) external;\\n    function setFavorPrimaryPrice(bool _favorPrimaryPrice) external;\\n    function setPriceSampleSpace(uint256 _priceSampleSpace) external;\\n    function setMaxStrictPriceDeviation(uint256 _maxStrictPriceDeviation) external;\\n    function getPrice(address _token, bool _maximise, bool _includeAmmPrice, bool _useSwapPricing) external view returns (uint256);\\n    function getAmmPrice(address _token) external view returns (uint256);\\n    function getLatestPrimaryPrice(address _token) external view returns (uint256);\\n    function getPrimaryPrice(address _token, bool _maximise) external view returns (uint256);\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbfd3640bfd3ace2eaefb6f82ed2063d802ba3fa4bf87072269753508954ed84f\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/IChainlinkFlags.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IChainlinkFlags {\\n  function getFlag(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd7b01138f0859a0754b2d6abee94b688ea60eb634951efc295f73cdeebcbac3b\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPriceFeed {\\n    function description() external view returns (string memory);\\n    function aggregator() external view returns (address);\\n    function latestAnswer() external view returns (int256);\\n    function latestRound() external view returns (uint80);\\n    function getRoundData(uint80 roundId) external view returns (uint80, int256, uint256, uint256, uint80);\\n}\\n\",\"keccak256\":\"0x948a7a7d152dfca5c4f90493bc0655a104237a81326c591b238d16ae023d3d84\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/ISecondaryPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ISecondaryPriceFeed {\\n    function getPrice(address _token, uint256 _referencePrice, bool _maximise) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7de08b8aac1d222b1ada69fb4f4b05764c8190faab711f6194f4bb7ddd4a9361\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15528,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15530,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "chainlinkFlags",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15533,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "isAmmEnabled",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 15536,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "isSecondaryPriceEnabled",
        "offset": 21,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 15539,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "useV2Pricing",
        "offset": 22,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 15542,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "favorPrimaryPrice",
        "offset": 23,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 15545,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceSampleSpace",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 15548,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "maxStrictPriceDeviation",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 15550,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "secondaryPriceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 15553,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "spreadThresholdBasisPoints",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 15555,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "btc",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 15557,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "eth",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 15559,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "bnb",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 15561,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "bnbBusd",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 15563,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "ethBnb",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 15565,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "btcBnb",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 15569,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceFeeds",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 15573,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceDecimals",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15577,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "spreadBasisPoints",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15581,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "strictStableTokens",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15586,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "adjustmentBasisPoints",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15591,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "isAdjustmentAdditive",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15595,
        "contract": "contracts/core/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "lastAdjustmentTimings",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}