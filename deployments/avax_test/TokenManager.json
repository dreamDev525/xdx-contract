{
  "address": "0xF216D8e6b1Bce02C02913804d9683b6e8be188A9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAuthorizations",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "ClearAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalApprove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalApproveNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalApproveNFTs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalPendingAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalSetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "timelock",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "gov",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "action",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "SignalSetGov",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "actionsNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "approveNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "approveNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAuthorizations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pendingActions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "receiveNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "signApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "signApproveNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "signApproveNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "signSetAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "signSetGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "signalApproveNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "signalApproveNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "signalSetAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "signalSetGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "signedActions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb4d0f25be4611bebc9522076b19071f99d30be027fbf7153555b21f131ba2c87",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0xF216D8e6b1Bce02C02913804d9683b6e8be188A9",
    "transactionIndex": 0,
    "gasUsed": "2215450",
    "logsBloom": "0x
    "blockHash": "0x6118115b0885a9952518b6f3e1dc04cd1917eff73b436b7cdfe02461d95d6793",
    "transactionHash": "0xb4d0f25be4611bebc9522076b19071f99d30be027fbf7153555b21f131ba2c87",
    "logs": [],
    "blockNumber": 17664369,
    "cumulativeGasUsed": "2215450",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2
  ],
  "numDeployments": 1,
  "solcInputHash": "a5c1ec6ed734a994a4a7c4ed9bed389b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAuthorizations\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"ClearAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalApproveNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalApproveNFTs\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalPendingAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalSetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"timelock\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"action\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"SignalSetGov\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"actionsNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"approveNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"approveNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuthorizations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingActions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"receiveNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"signApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"signApproveNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"signApproveNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"signSetAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"signSetGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"signalApproveNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"signalApproveNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"signalSetAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"signalSetGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"signedActions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/TokenManager.sol\":\"TokenManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/access/TokenManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../libraries/token/ERC721/IERC721.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../peripherals/interfaces/ITimelock.sol\\\";\\n\\ncontract TokenManager is ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    bool public isInitialized;\\n\\n    uint256 public actionsNonce;\\n    uint256 public minAuthorizations;\\n\\n    address public admin;\\n\\n    address[] public signers;\\n    mapping (address => bool) public isSigner;\\n    mapping (bytes32 => bool) public pendingActions;\\n    mapping (address => mapping (bytes32 => bool)) public signedActions;\\n\\n    event SignalApprove(address token, address spender, uint256 amount, bytes32 action, uint256 nonce);\\n    event SignalApproveNFT(address token, address spender, uint256 tokenId, bytes32 action, uint256 nonce);\\n    event SignalApproveNFTs(address token, address spender, uint256[] tokenIds, bytes32 action, uint256 nonce);\\n    event SignalSetAdmin(address target, address admin, bytes32 action, uint256 nonce);\\n    event SignalSetGov(address timelock, address target, address gov, bytes32 action, uint256 nonce);\\n    event SignalPendingAction(bytes32 action, uint256 nonce);\\n    event SignAction(bytes32 action, uint256 nonce);\\n    event ClearAction(bytes32 action, uint256 nonce);\\n\\n    constructor(uint256 _minAuthorizations) public {\\n        admin = msg.sender;\\n        minAuthorizations = _minAuthorizations;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"TokenManager: forbidden\\\");\\n        _;\\n    }\\n\\n    modifier onlySigner() {\\n        require(isSigner[msg.sender], \\\"TokenManager: forbidden\\\");\\n        _;\\n    }\\n\\n    function initialize(address[] memory _signers) public virtual onlyAdmin {\\n        require(!isInitialized, \\\"TokenManager: already initialized\\\");\\n        isInitialized = true;\\n\\n        signers = _signers;\\n        for (uint256 i = 0; i < _signers.length; i++) {\\n            address signer = _signers[i];\\n            isSigner[signer] = true;\\n        }\\n    }\\n\\n    function signersLength() public view returns (uint256) {\\n        return signers.length;\\n    }\\n\\n    function signalApprove(address _token, address _spender, uint256 _amount) external nonReentrant onlyAdmin {\\n        actionsNonce++;\\n        uint256 nonce = actionsNonce;\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount, nonce));\\n        _setPendingAction(action, nonce);\\n        emit SignalApprove(_token, _spender, _amount, action, nonce);\\n    }\\n\\n    function signApprove(address _token, address _spender, uint256 _amount, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount, _nonce));\\n        _validateAction(action);\\n        require(!signedActions[msg.sender][action], \\\"TokenManager: already signed\\\");\\n        signedActions[msg.sender][action] = true;\\n        emit SignAction(action, _nonce);\\n    }\\n\\n    function approve(address _token, address _spender, uint256 _amount, uint256 _nonce) external nonReentrant onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount, _nonce));\\n        _validateAction(action);\\n        _validateAuthorization(action);\\n\\n        IERC20(_token).approve(_spender, _amount);\\n        _clearAction(action, _nonce);\\n    }\\n\\n    function signalApproveNFT(address _token, address _spender, uint256 _tokenId) external nonReentrant onlyAdmin {\\n        actionsNonce++;\\n        uint256 nonce = actionsNonce;\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFT\\\", _token, _spender, _tokenId, nonce));\\n        _setPendingAction(action, nonce);\\n        emit SignalApproveNFT(_token, _spender, _tokenId, action, nonce);\\n    }\\n\\n    function signApproveNFT(address _token, address _spender, uint256 _tokenId, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFT\\\", _token, _spender, _tokenId, _nonce));\\n        _validateAction(action);\\n        require(!signedActions[msg.sender][action], \\\"TokenManager: already signed\\\");\\n        signedActions[msg.sender][action] = true;\\n        emit SignAction(action, _nonce);\\n    }\\n\\n    function approveNFT(address _token, address _spender, uint256 _tokenId, uint256 _nonce) external nonReentrant onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFT\\\", _token, _spender, _tokenId, _nonce));\\n        _validateAction(action);\\n        _validateAuthorization(action);\\n\\n        IERC721(_token).approve(_spender, _tokenId);\\n        _clearAction(action, _nonce);\\n    }\\n\\n    function signalApproveNFTs(address _token, address _spender, uint256[] memory _tokenIds) external nonReentrant onlyAdmin {\\n        actionsNonce++;\\n        uint256 nonce = actionsNonce;\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFTs\\\", _token, _spender, _tokenIds, nonce));\\n        _setPendingAction(action, nonce);\\n        emit SignalApproveNFTs(_token, _spender, _tokenIds, action, nonce);\\n    }\\n\\n    function signApproveNFTs(address _token, address _spender, uint256[] memory _tokenIds, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFTs\\\", _token, _spender, _tokenIds, _nonce));\\n        _validateAction(action);\\n        require(!signedActions[msg.sender][action], \\\"TokenManager: already signed\\\");\\n        signedActions[msg.sender][action] = true;\\n        emit SignAction(action, _nonce);\\n    }\\n\\n    function approveNFTs(address _token, address _spender, uint256[] memory _tokenIds, uint256 _nonce) external nonReentrant onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approveNFTs\\\", _token, _spender, _tokenIds, _nonce));\\n        _validateAction(action);\\n        _validateAuthorization(action);\\n\\n        for (uint256 i = 0 ; i < _tokenIds.length; i++) {\\n            IERC721(_token).approve(_spender, _tokenIds[i]);\\n        }\\n        _clearAction(action, _nonce);\\n    }\\n\\n    function receiveNFTs(address _token, address _sender, uint256[] memory _tokenIds) external nonReentrant onlyAdmin {\\n        for (uint256 i = 0 ; i < _tokenIds.length; i++) {\\n            IERC721(_token).transferFrom(_sender, address(this), _tokenIds[i]);\\n        }\\n    }\\n\\n    function signalSetAdmin(address _target, address _admin) external nonReentrant onlySigner {\\n        actionsNonce++;\\n        uint256 nonce = actionsNonce;\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setAdmin\\\", _target, _admin, nonce));\\n        _setPendingAction(action, nonce);\\n        signedActions[msg.sender][action] = true;\\n        emit SignalSetAdmin(_target, _admin, action, nonce);\\n    }\\n\\n    function signSetAdmin(address _target, address _admin, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setAdmin\\\", _target, _admin, _nonce));\\n        _validateAction(action);\\n        require(!signedActions[msg.sender][action], \\\"TokenManager: already signed\\\");\\n        signedActions[msg.sender][action] = true;\\n        emit SignAction(action, _nonce);\\n    }\\n\\n    function setAdmin(address _target, address _admin, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setAdmin\\\", _target, _admin, _nonce));\\n        _validateAction(action);\\n        _validateAuthorization(action);\\n\\n        ITimelock(_target).setAdmin(_admin);\\n        _clearAction(action, _nonce);\\n    }\\n\\n    function signalSetGov(address _timelock, address _target, address _gov) external nonReentrant onlyAdmin {\\n        actionsNonce++;\\n        uint256 nonce = actionsNonce;\\n        bytes32 action = keccak256(abi.encodePacked(\\\"signalSetGov\\\", _timelock, _target, _gov, nonce));\\n        _setPendingAction(action, nonce);\\n        signedActions[msg.sender][action] = true;\\n        emit SignalSetGov(_timelock, _target, _gov, action, nonce);\\n    }\\n\\n    function signSetGov(address _timelock, address _target, address _gov, uint256 _nonce) external nonReentrant onlySigner {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"signalSetGov\\\", _timelock, _target, _gov, _nonce));\\n        _validateAction(action);\\n        require(!signedActions[msg.sender][action], \\\"TokenManager: already signed\\\");\\n        signedActions[msg.sender][action] = true;\\n        emit SignAction(action, _nonce);\\n    }\\n\\n    function setGov(address _timelock, address _target, address _gov, uint256 _nonce) external nonReentrant onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"signalSetGov\\\", _timelock, _target, _gov, _nonce));\\n        _validateAction(action);\\n        _validateAuthorization(action);\\n\\n        ITimelock(_timelock).signalSetGov(_target, _gov);\\n        _clearAction(action, _nonce);\\n    }\\n\\n    function _setPendingAction(bytes32 _action, uint256 _nonce) private {\\n        pendingActions[_action] = true;\\n        emit SignalPendingAction(_action, _nonce);\\n    }\\n\\n    function _validateAction(bytes32 _action) private view {\\n        require(pendingActions[_action], \\\"TokenManager: action not signalled\\\");\\n    }\\n\\n    function _validateAuthorization(bytes32 _action) private view {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < signers.length; i++) {\\n            address signer = signers[i];\\n            if (signedActions[signer][_action]) {\\n                count++;\\n            }\\n        }\\n\\n        if (count == 0) {\\n            revert(\\\"TokenManager: action not authorized\\\");\\n        }\\n        require(count >= minAuthorizations, \\\"TokenManager: insufficient authorization\\\");\\n    }\\n\\n    function _clearAction(bytes32 _action, uint256 _nonce) private {\\n        require(pendingActions[_action], \\\"TokenManager: invalid _action\\\");\\n        delete pendingActions[_action];\\n        emit ClearAction(_action, _nonce);\\n    }\\n}\\n\",\"keccak256\":\"0xa87c7d158d429cfa3f22610453232951efcb76869c632126a0ca387aa4728157\",\"license\":\"MIT\"},\"contracts/libraries/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xaf936da92f3a9a4f98b237323b5eb1d813fb86c4d07a184beba7027cf0509ba3\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xae7a1e407ed171ecd3a0d3976875d6c58eefdccf831ebce6314ec94892dffc03\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITimelock {\\n    function setAdmin(address _admin) external;\\n    function enableLeverage(address _vault) external;\\n    function disableLeverage(address _vault) external;\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external;\\n    function signalSetGov(address _target, address _gov) external;\\n}\\n\",\"keccak256\":\"0x5a7543c7b61c11b94a4d04137839a8ab392e2d1dd1ab717755a349366c2eaddd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516126403803806126408339818101604052602081101561003357600080fd5b50516001600055600480546001600160a01b031916331790556003556125e28061005e6000396000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c80630b13beca14610143578063181fcd331461017b5780632079fb9a14610235578063287800c91461026e578063392e53cd1461028857806341f684f3146102a457806342a1fcee146102ac5780634dc5ecb31461036857806375fd490c146103a45780637df73e27146103d257806387c6d4f9146103f85780639fddaac114610424578063a224cee71461045a578063a4c04bb7146104fb578063a62fb17014610503578063adb384b61461053f578063dce6e18d146105f9578063ddf67a9f1461062f578063e2d03cc51461066b578063e30569e5146106a3578063e9075621146106c0578063f00cb942146106fc578063f23f9775146107b8578063f466634b146107f4578063f52dc4f71461082a578063f851a44014610866575b600080fd5b6101796004803603606081101561015957600080fd5b506001600160a01b0381358116916020810135909116906040013561086e565b005b6101796004803603606081101561019157600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156101c457600080fd5b8201836020820111156101d657600080fd5b803590602001918460208302840111600160201b831117156101f757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109de945050505050565b6102526004803603602081101561024b57600080fd5b5035610bd4565b604080516001600160a01b039092168252519081900360200190f35b610276610bfb565b60408051918252519081900360200190f35b610290610c01565b604080519115158252519081900360200190f35b610276610c0a565b610179600480360360808110156102c257600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156102f557600080fd5b82018360208201111561030757600080fd5b803590602001918460208302840111600160201b8311171561032857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250610c10915050565b6101796004803603608081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610e06565b610179600480360360408110156103ba57600080fd5b506001600160a01b0381358116916020013516610f9a565b610290600480360360208110156103e857600080fd5b50356001600160a01b0316611123565b6102906004803603604081101561040e57600080fd5b506001600160a01b038135169060200135611138565b6101796004803603606081101561043a57600080fd5b506001600160a01b03813581169160208101359091169060400135611158565b6101796004803603602081101561047057600080fd5b810190602081018135600160201b81111561048a57600080fd5b82018360208201111561049c57600080fd5b803590602001918460208302840111600160201b831117156104bd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506112d8945050505050565b6102766113e1565b6101796004803603608081101561051957600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356113e7565b6101796004803603606081101561055557600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460208302840111600160201b831117156105bb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506115c8945050505050565b6101796004803603606081101561060f57600080fd5b506001600160a01b0381358116916020810135909116906040013561170b565b6101796004803603608081101561064557600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611878565b6101796004803603606081101561068157600080fd5b506001600160a01b03813581169160208101358216916040909101351661197c565b610290600480360360208110156106b957600080fd5b5035611b18565b610179600480360360808110156106d657600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611b2d565b6101796004803603608081101561071257600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561074557600080fd5b82018360208201111561075757600080fd5b803590602001918460208302840111600160201b8311171561077857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250611cbc915050565b610179600480360360808110156107ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611dfc565b6101796004803603606081101561080a57600080fd5b506001600160a01b03813581169160208101359091169060400135611f5c565b6101796004803603608081101561084057600080fd5b506001600160a01b0381358116916020810135909116906040810135906060013561212f565b610252612230565b600260005414156108b4576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610906576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e830152605282018590526072808301859052835180840390910181526092909201909252805191012061097a818361223f565b604080516001600160a01b03808816825286166020820152808201859052606081018390526080810184905290517fcd9ba83b63715dc15ac193645d6e925bf4b487c94b73d709b8b6dea608efd4cc9181900360a00190a150506001600055505050565b60026000541415610a24576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610a76576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040516a617070726f76654e46547360a81b60208083019182526001600160601b0319606088811b8216602b86015287901b16603f840152845160009388938893889388936053019180860191028083838b5b83811015610aec578181015183820152602001610ad4565b50505050905001828152602001945050505050604051602081830303815290604052805190602001209050610b21818361223f565b7ff9d0354d71c261982d98abd09b735f3663b2d7275e2569ad5fd907a4092765f9858585848660405180866001600160a01b03168152602001856001600160a01b0316815260200180602001848152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610bb1578181015183820152602001610b99565b50505050905001965050505050505060405180910390a150506001600055505050565b60058181548110610be157fe5b6000918252602090912001546001600160a01b0316905081565b60035481565b60015460ff1681565b60055490565b60026000541415610c56576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610ca8576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60008484848460405160200180806a617070726f76654e46547360a81b815250600b01856001600160a01b031660601b8152601401846001600160a01b031660601b8152601401838051906020019060200280838360005b83811015610d18578181015183820152602001610d00565b50505050905001828152602001945050505050604051602081830303815290604052805190602001209050610d4c81612298565b610d55816122e8565b60005b8351811015610def57856001600160a01b031663095ea7b386868481518110610d7d57fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b505060019092019150610d589050565b50610dfa81836123ca565b50506001600055505050565b60026000541415610e4c576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610e9e576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f9092019092528051910120610f0381612298565b610f0c816122e8565b846001600160a01b031663095ea7b385856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050506040513d6020811015610f8d57600080fd5b50610dfa905081836123ca565b60026000541415610fe0576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611036576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6002805460010190819055604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c830152605080830185905283518084039091018152607090920190925280519101206110a1818361223f565b336000908152600860209081526040808320848452825291829020805460ff1916600117905581516001600160a01b0387811682528616918101919091528082018390526060810184905290517f4fc9433645aa0a3670e9185496bbd752209fed7a9696fb8a954a0db30ef927b09181900360800190a1505060016000555050565b60066020526000908152604090205460ff1681565b600860209081526000928352604080842090915290825290205460ff1681565b6002600054141561119e576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff166111f4576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c8301526050808301859052835180840390910181526070909201909252805191012061125381612298565b61125c816122e8565b836001600160a01b031663704b6c02846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156112ab57600080fd5b505af11580156112bf573d6000803e3d6000fd5b505050506112cd81836123ca565b505060016000555050565b6004546001600160a01b03163314611325576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60015460ff16156113675760405162461bcd60e51b81526004018080602001828103825260218152602001806125286021913960400191505060405180910390fd5b6001805460ff1916811790558051611386906005906020840190612483565b5060005b81518110156113dd5760008282815181106113a157fe5b6020908102919091018101516001600160a01b03166000908152600690915260409020805460ff1916600190811790915591909101905061138a565b5050565b60025481565b6002600054141561142d576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611483576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b166054830152606880830185905283518084039091018152608890920190925280519101206114ef81612298565b33600090815260086020908152604080832084845290915290205460ff161561155e576040805162461bcd60e51b815260206004820152601c60248201527b151bdad95b93585b9859d95c8e88185b1c9958591e481cda59db995960221b604482015290519081900360640190fd5b336000908152600860209081526040808320848452825291829020805460ff19166001179055815183815290810184905281517faae28fe5531fe5dfb8d12409392ec67b50c825dd06233312cb6aeaddd16cbd22929181900390910190a150506001600055505050565b6002600054141561160e576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611660576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60005b81518110156112cd57836001600160a01b03166323b872dd843085858151811061168957fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156116e757600080fd5b505af11580156116fb573d6000803e3d6000fd5b5050600190920191506116639050565b60026000541415611751576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b031633146117a3576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f9092019092528051910120611814818361223f565b604080516001600160a01b03808816825286166020820152808201859052606081018390526080810184905290517fc19251bf5f704ddc3d5babe6f4e5bde0dded20b19f7844716861821ab3163cd79181900360a00190a150506001600055505050565b600260005414156118be576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611914576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e83015260528201859052607280830185905283518084039091018152609290920190925280519101206114ef81612298565b600260005414156119c2576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611a14576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6002805460010190819055604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b16605483015260688083018590528351808403909101815260889092019092528051910120611a8c818361223f565b336000908152600860209081526040808320848452825291829020805460ff1916600117905581516001600160a01b0388811682528781169282019290925290851681830152606081018390526080810184905290517f634e13057d45400506e3b303913ac59b61e5a8137ea6fed5ed44aa0b8bc3c5689181900360a00190a150506001600055505050565b60076020526000908152604090205460ff1681565b60026000541415611b73576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611bc5576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b16605483015260688083018590528351808403909101815260889092019092528051910120611c3181612298565b611c3a816122e8565b846001600160a01b031663996a7a1e85856040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b158015611c9a57600080fd5b505af1158015611cae573d6000803e3d6000fd5b50505050610dfa81836123ca565b60026000541415611d02576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611d58576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60008484848460405160200180806a617070726f76654e46547360a81b815250600b01856001600160a01b031660601b8152601401846001600160a01b031660601b8152601401838051906020019060200280838360005b83811015611dc8578181015183820152602001611db0565b505050509050018281526020019450505050506040516020818303038152906040528051906020012090506114ef81612298565b60026000541415611e42576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611e94576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e8301526052820185905260728083018590528351808403909101815260929092019092528051910120611efc81612298565b611f05816122e8565b846001600160a01b031663095ea7b385856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c9a57600080fd5b60026000541415611fa2576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611ff8576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c8301526050808301859052835180840390910181526070909201909252805191012061205781612298565b33600090815260086020908152604080832084845290915290205460ff16156120c6576040805162461bcd60e51b815260206004820152601c60248201527b151bdad95b93585b9859d95c8e88185b1c9958591e481cda59db995960221b604482015290519081900360640190fd5b336000908152600860209081526040808320848452825291829020805460ff19166001179055815183815290810184905281517faae28fe5531fe5dfb8d12409392ec67b50c825dd06233312cb6aeaddd16cbd22929181900390910190a1505060016000555050565b60026000541415612175576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff166121cb576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f90920190925280519101206114ef81612298565b6004546001600160a01b031681565b600082815260076020908152604091829020805460ff19166001179055815184815290810183905281517f64df01c46eb530dc540770a0b88cc32f0b8c2b371a546ae0b13cc8ca6671fff9929181900390910190a15050565b60008181526007602052604090205460ff166122e55760405162461bcd60e51b81526004018080602001828103825260228152602001806125b46022913960400191505060405180910390fd5b50565b6000805b60055481101561234c5760006005828154811061230557fe5b60009182526020808320909101546001600160a01b031680835260088252604080842088855290925291205490915060ff1615612343576001909201915b506001016122ec565b50806123895760405162461bcd60e51b81526004018080602001828103825260238152602001806125716023913960400191505060405180910390fd5b6003548110156113dd5760405162461bcd60e51b81526004018080602001828103825260288152602001806125496028913960400191505060405180910390fd5b60008281526007602052604090205460ff1661242d576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e4d616e616765723a20696e76616c6964205f616374696f6e000000604482015290519081900360640190fd5b600082815260076020908152604091829020805460ff19169055815184815290810183905281517ff4640d39061e643d9b802cb3725953405344555ad6dbb1cbdb0495f3eccb8e68929181900390910190a15050565b8280548282559060005260206000209081019282156124d8579160200282015b828111156124d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906124a3565b506124e49291506124e8565b5090565b5b808211156124e45780546001600160a01b03191681556001016124e956fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546f6b656e4d616e616765723a20616c726561647920696e697469616c697a6564546f6b656e4d616e616765723a20696e73756666696369656e7420617574686f72697a6174696f6e546f6b656e4d616e616765723a20616374696f6e206e6f7420617574686f72697a6564546f6b656e4d616e616765723a20666f7262696464656e000000000000000000546f6b656e4d616e616765723a20616374696f6e206e6f74207369676e616c6c6564a164736f6c634300060c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061013e5760003560e01c80630b13beca14610143578063181fcd331461017b5780632079fb9a14610235578063287800c91461026e578063392e53cd1461028857806341f684f3146102a457806342a1fcee146102ac5780634dc5ecb31461036857806375fd490c146103a45780637df73e27146103d257806387c6d4f9146103f85780639fddaac114610424578063a224cee71461045a578063a4c04bb7146104fb578063a62fb17014610503578063adb384b61461053f578063dce6e18d146105f9578063ddf67a9f1461062f578063e2d03cc51461066b578063e30569e5146106a3578063e9075621146106c0578063f00cb942146106fc578063f23f9775146107b8578063f466634b146107f4578063f52dc4f71461082a578063f851a44014610866575b600080fd5b6101796004803603606081101561015957600080fd5b506001600160a01b0381358116916020810135909116906040013561086e565b005b6101796004803603606081101561019157600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156101c457600080fd5b8201836020820111156101d657600080fd5b803590602001918460208302840111600160201b831117156101f757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109de945050505050565b6102526004803603602081101561024b57600080fd5b5035610bd4565b604080516001600160a01b039092168252519081900360200190f35b610276610bfb565b60408051918252519081900360200190f35b610290610c01565b604080519115158252519081900360200190f35b610276610c0a565b610179600480360360808110156102c257600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156102f557600080fd5b82018360208201111561030757600080fd5b803590602001918460208302840111600160201b8311171561032857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250610c10915050565b6101796004803603608081101561037e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610e06565b610179600480360360408110156103ba57600080fd5b506001600160a01b0381358116916020013516610f9a565b610290600480360360208110156103e857600080fd5b50356001600160a01b0316611123565b6102906004803603604081101561040e57600080fd5b506001600160a01b038135169060200135611138565b6101796004803603606081101561043a57600080fd5b506001600160a01b03813581169160208101359091169060400135611158565b6101796004803603602081101561047057600080fd5b810190602081018135600160201b81111561048a57600080fd5b82018360208201111561049c57600080fd5b803590602001918460208302840111600160201b831117156104bd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506112d8945050505050565b6102766113e1565b6101796004803603608081101561051957600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356113e7565b6101796004803603606081101561055557600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460208302840111600160201b831117156105bb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506115c8945050505050565b6101796004803603606081101561060f57600080fd5b506001600160a01b0381358116916020810135909116906040013561170b565b6101796004803603608081101561064557600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611878565b6101796004803603606081101561068157600080fd5b506001600160a01b03813581169160208101358216916040909101351661197c565b610290600480360360208110156106b957600080fd5b5035611b18565b610179600480360360808110156106d657600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611b2d565b6101796004803603608081101561071257600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561074557600080fd5b82018360208201111561075757600080fd5b803590602001918460208302840111600160201b8311171561077857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250611cbc915050565b610179600480360360808110156107ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611dfc565b6101796004803603606081101561080a57600080fd5b506001600160a01b03813581169160208101359091169060400135611f5c565b6101796004803603608081101561084057600080fd5b506001600160a01b0381358116916020810135909116906040810135906060013561212f565b610252612230565b600260005414156108b4576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610906576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e830152605282018590526072808301859052835180840390910181526092909201909252805191012061097a818361223f565b604080516001600160a01b03808816825286166020820152808201859052606081018390526080810184905290517fcd9ba83b63715dc15ac193645d6e925bf4b487c94b73d709b8b6dea608efd4cc9181900360a00190a150506001600055505050565b60026000541415610a24576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610a76576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040516a617070726f76654e46547360a81b60208083019182526001600160601b0319606088811b8216602b86015287901b16603f840152845160009388938893889388936053019180860191028083838b5b83811015610aec578181015183820152602001610ad4565b50505050905001828152602001945050505050604051602081830303815290604052805190602001209050610b21818361223f565b7ff9d0354d71c261982d98abd09b735f3663b2d7275e2569ad5fd907a4092765f9858585848660405180866001600160a01b03168152602001856001600160a01b0316815260200180602001848152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610bb1578181015183820152602001610b99565b50505050905001965050505050505060405180910390a150506001600055505050565b60058181548110610be157fe5b6000918252602090912001546001600160a01b0316905081565b60035481565b60015460ff1681565b60055490565b60026000541415610c56576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610ca8576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60008484848460405160200180806a617070726f76654e46547360a81b815250600b01856001600160a01b031660601b8152601401846001600160a01b031660601b8152601401838051906020019060200280838360005b83811015610d18578181015183820152602001610d00565b50505050905001828152602001945050505050604051602081830303815290604052805190602001209050610d4c81612298565b610d55816122e8565b60005b8351811015610def57856001600160a01b031663095ea7b386868481518110610d7d57fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b505060019092019150610d589050565b50610dfa81836123ca565b50506001600055505050565b60026000541415610e4c576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314610e9e576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f9092019092528051910120610f0381612298565b610f0c816122e8565b846001600160a01b031663095ea7b385856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050506040513d6020811015610f8d57600080fd5b50610dfa905081836123ca565b60026000541415610fe0576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611036576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6002805460010190819055604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c830152605080830185905283518084039091018152607090920190925280519101206110a1818361223f565b336000908152600860209081526040808320848452825291829020805460ff1916600117905581516001600160a01b0387811682528616918101919091528082018390526060810184905290517f4fc9433645aa0a3670e9185496bbd752209fed7a9696fb8a954a0db30ef927b09181900360800190a1505060016000555050565b60066020526000908152604090205460ff1681565b600860209081526000928352604080842090915290825290205460ff1681565b6002600054141561119e576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff166111f4576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c8301526050808301859052835180840390910181526070909201909252805191012061125381612298565b61125c816122e8565b836001600160a01b031663704b6c02846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156112ab57600080fd5b505af11580156112bf573d6000803e3d6000fd5b505050506112cd81836123ca565b505060016000555050565b6004546001600160a01b03163314611325576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60015460ff16156113675760405162461bcd60e51b81526004018080602001828103825260218152602001806125286021913960400191505060405180910390fd5b6001805460ff1916811790558051611386906005906020840190612483565b5060005b81518110156113dd5760008282815181106113a157fe5b6020908102919091018101516001600160a01b03166000908152600690915260409020805460ff1916600190811790915591909101905061138a565b5050565b60025481565b6002600054141561142d576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611483576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b166054830152606880830185905283518084039091018152608890920190925280519101206114ef81612298565b33600090815260086020908152604080832084845290915290205460ff161561155e576040805162461bcd60e51b815260206004820152601c60248201527b151bdad95b93585b9859d95c8e88185b1c9958591e481cda59db995960221b604482015290519081900360640190fd5b336000908152600860209081526040808320848452825291829020805460ff19166001179055815183815290810184905281517faae28fe5531fe5dfb8d12409392ec67b50c825dd06233312cb6aeaddd16cbd22929181900390910190a150506001600055505050565b6002600054141561160e576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611660576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60005b81518110156112cd57836001600160a01b03166323b872dd843085858151811061168957fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156116e757600080fd5b505af11580156116fb573d6000803e3d6000fd5b5050600190920191506116639050565b60026000541415611751576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b031633146117a3576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60028054600101908190556040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f9092019092528051910120611814818361223f565b604080516001600160a01b03808816825286166020820152808201859052606081018390526080810184905290517fc19251bf5f704ddc3d5babe6f4e5bde0dded20b19f7844716861821ab3163cd79181900360a00190a150506001600055505050565b600260005414156118be576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611914576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e83015260528201859052607280830185905283518084039091018152609290920190925280519101206114ef81612298565b600260005414156119c2576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611a14576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6002805460010190819055604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b16605483015260688083018590528351808403909101815260889092019092528051910120611a8c818361223f565b336000908152600860209081526040808320848452825291829020805460ff1916600117905581516001600160a01b0388811682528781169282019290925290851681830152606081018390526080810184905290517f634e13057d45400506e3b303913ac59b61e5a8137ea6fed5ed44aa0b8bc3c5689181900360a00190a150506001600055505050565b60076020526000908152604090205460ff1681565b60026000541415611b73576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611bc5576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516b39b4b3b730b629b2ba23b7bb60a11b6020808301919091526001600160601b0319606088811b8216602c85015287811b82168486015286901b16605483015260688083018590528351808403909101815260889092019092528051910120611c3181612298565b611c3a816122e8565b846001600160a01b031663996a7a1e85856040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b158015611c9a57600080fd5b505af1158015611cae573d6000803e3d6000fd5b50505050610dfa81836123ca565b60026000541415611d02576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611d58576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b60008484848460405160200180806a617070726f76654e46547360a81b815250600b01856001600160a01b031660601b8152601401846001600160a01b031660601b8152601401838051906020019060200280838360005b83811015611dc8578181015183820152602001611db0565b505050509050018281526020019450505050506040516020818303038152906040528051906020012090506114ef81612298565b60026000541415611e42576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b60026000556004546001600160a01b03163314611e94576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805169185c1c1c9bdd9953919560b21b6020808301919091526001600160601b0319606088811b8216602a85015287901b16603e8301526052820185905260728083018590528351808403909101815260929092019092528051910120611efc81612298565b611f05816122e8565b846001600160a01b031663095ea7b385856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c9a57600080fd5b60026000541415611fa2576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff16611ff8576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b604080516739b2ba20b236b4b760c11b6020808301919091526001600160601b0319606087811b8216602885015286901b16603c8301526050808301859052835180840390910181526070909201909252805191012061205781612298565b33600090815260086020908152604080832084845290915290205460ff16156120c6576040805162461bcd60e51b815260206004820152601c60248201527b151bdad95b93585b9859d95c8e88185b1c9958591e481cda59db995960221b604482015290519081900360640190fd5b336000908152600860209081526040808320848452825291829020805460ff19166001179055815183815290810184905281517faae28fe5531fe5dfb8d12409392ec67b50c825dd06233312cb6aeaddd16cbd22929181900390910190a1505060016000555050565b60026000541415612175576040805162461bcd60e51b815260206004820152601f6024820152600080516020612508833981519152604482015290519081900360640190fd5b600260009081553381526006602052604090205460ff166121cb576040805162461bcd60e51b81526020600482015260176024820152600080516020612594833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606088811b8216602785015287901b16603b830152604f8201859052606f80830185905283518084039091018152608f90920190925280519101206114ef81612298565b6004546001600160a01b031681565b600082815260076020908152604091829020805460ff19166001179055815184815290810183905281517f64df01c46eb530dc540770a0b88cc32f0b8c2b371a546ae0b13cc8ca6671fff9929181900390910190a15050565b60008181526007602052604090205460ff166122e55760405162461bcd60e51b81526004018080602001828103825260228152602001806125b46022913960400191505060405180910390fd5b50565b6000805b60055481101561234c5760006005828154811061230557fe5b60009182526020808320909101546001600160a01b031680835260088252604080842088855290925291205490915060ff1615612343576001909201915b506001016122ec565b50806123895760405162461bcd60e51b81526004018080602001828103825260238152602001806125716023913960400191505060405180910390fd5b6003548110156113dd5760405162461bcd60e51b81526004018080602001828103825260288152602001806125496028913960400191505060405180910390fd5b60008281526007602052604090205460ff1661242d576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e4d616e616765723a20696e76616c6964205f616374696f6e000000604482015290519081900360640190fd5b600082815260076020908152604091829020805460ff19169055815184815290810183905281517ff4640d39061e643d9b802cb3725953405344555ad6dbb1cbdb0495f3eccb8e68929181900390910190a15050565b8280548282559060005260206000209081019282156124d8579160200282015b828111156124d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906124a3565b506124e49291506124e8565b5090565b5b808211156124e45780546001600160a01b03191681556001016124e956fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00546f6b656e4d616e616765723a20616c726561647920696e697469616c697a6564546f6b656e4d616e616765723a20696e73756666696369656e7420617574686f72697a6174696f6e546f6b656e4d616e616765723a20616374696f6e206e6f7420617574686f72697a6564546f6b656e4d616e616765723a20666f7262696464656e000000000000000000546f6b656e4d616e616765723a20616374696f6e206e6f74207369676e616c6c6564a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23515,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 51,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "isInitialized",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 53,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "actionsNonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 55,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "minAuthorizations",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 57,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "admin",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 60,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "signers",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "isSigner",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 68,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "pendingActions",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 74,
        "contract": "contracts/access/TokenManager.sol:TokenManager",
        "label": "signedActions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}