{
  "address": "0xaBCb57b25B6aEafad5229c215b81A1263A56c8D6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "CancelDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "CancelIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        }
      ],
      "name": "CreateDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        }
      ],
      "name": "CreateIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "referralCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "DecreasePositionReferral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "ExecuteDecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockGap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeGap",
          "type": "uint256"
        }
      ],
      "name": "ExecuteIncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "referralCode",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "IncreasePositionReferral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBlockDelayKeeper",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minTimeDelayPublic",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTimeDelay",
          "type": "uint256"
        }
      ],
      "name": "SetDelayValues",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositFee",
          "type": "uint256"
        }
      ],
      "name": "SetDepositFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increasePositionBufferBps",
          "type": "uint256"
        }
      ],
      "name": "SetIncreasePositionBufferBps",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "SetIsLeverageEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "longSizes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "shortSizes",
          "type": "uint256[]"
        }
      ],
      "name": "SetMaxGlobalSizes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minExecutionFee",
          "type": "uint256"
        }
      ],
      "name": "SetMinExecutionFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "SetPositionKeeper",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "referralStorage",
          "type": "address"
        }
      ],
      "name": "SetReferralStorage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increasePositionRequestKeysStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decreasePositionRequestKeysStart",
          "type": "uint256"
        }
      ],
      "name": "SetRequestKeysStartValues",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFees",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "cancelDecreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "cancelIncreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withdrawETH",
          "type": "bool"
        }
      ],
      "name": "createDecreasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_referralCode",
          "type": "bytes32"
        }
      ],
      "name": "createIncreasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_referralCode",
          "type": "bytes32"
        }
      ],
      "name": "createIncreasePositionETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionRequestKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decreasePositionRequestKeysStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "decreasePositionRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawETH",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decreasePositionsIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeDecreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeDecreasePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeIncreasePosition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_executionFeeReceiver",
          "type": "address"
        }
      ],
      "name": "executeIncreasePositions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getDecreasePositionRequestPath",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getIncreasePositionRequestPath",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRequestQueueLengths",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increasePositionBufferBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increasePositionRequestKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increasePositionRequestKeysStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "increasePositionRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "acceptablePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasCollateralInETH",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "increasePositionsIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPositionKeeper",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalLongSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTimeDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBlockDelayKeeper",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minExecutionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTimeDelayPublic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralStorage",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBlockDelayKeeper",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minTimeDelayPublic",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTimeDelay",
          "type": "uint256"
        }
      ],
      "name": "setDelayValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositFee",
          "type": "uint256"
        }
      ],
      "name": "setDepositFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_increasePositionBufferBps",
          "type": "uint256"
        }
      ],
      "name": "setIncreasePositionBufferBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_longSizes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shortSizes",
          "type": "uint256[]"
        }
      ],
      "name": "setMaxGlobalSizes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        }
      ],
      "name": "setMinExecutionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setPositionKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referralStorage",
          "type": "address"
        }
      ],
      "name": "setReferralStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_increasePositionRequestKeysStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decreasePositionRequestKeysStart",
          "type": "uint256"
        }
      ],
      "name": "setRequestKeysStartValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbe24d898e9f0540dfdc081dc681fe09299e0c46bc424878ad1d4ded5ac0cce2b",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0xaBCb57b25B6aEafad5229c215b81A1263A56c8D6",
    "transactionIndex": 1,
    "gasUsed": "5337687",
    "logsBloom": "0x
    "blockHash": "0x997656c6428d8bbb4dbc067437b0da2a418d3284c7a509887ad9e4a61cb22702",
    "transactionHash": "0xbe24d898e9f0540dfdc081dc681fe09299e0c46bc424878ad1d4ded5ac0cce2b",
    "logs": [],
    "blockNumber": 16887962,
    "cumulativeGasUsed": "5684867",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9679810001E7e33E8A4f49370BB72059E6D960EB",
    "0xf1f3d674Fe309BEAB53a99E6ccA40712b0F8E45C",
    "0xb767287a7143759f294cfb7b1adbca1140f3de71",
    30,
    "17000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "38f125bf9344c296031e870b443ff3d2",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"CancelDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"CancelIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"CreateDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"CreateIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginFeeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"referralCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"DecreasePositionReferral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"ExecuteDecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockGap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeGap\",\"type\":\"uint256\"}],\"name\":\"ExecuteIncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginFeeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"referralCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"IncreasePositionReferral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBlockDelayKeeper\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minTimeDelayPublic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTimeDelay\",\"type\":\"uint256\"}],\"name\":\"SetDelayValues\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositFee\",\"type\":\"uint256\"}],\"name\":\"SetDepositFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increasePositionBufferBps\",\"type\":\"uint256\"}],\"name\":\"SetIncreasePositionBufferBps\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"SetIsLeverageEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"longSizes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"shortSizes\",\"type\":\"uint256[]\"}],\"name\":\"SetMaxGlobalSizes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minExecutionFee\",\"type\":\"uint256\"}],\"name\":\"SetMinExecutionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"SetPositionKeeper\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referralStorage\",\"type\":\"address\"}],\"name\":\"SetReferralStorage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increasePositionRequestKeysStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decreasePositionRequestKeysStart\",\"type\":\"uint256\"}],\"name\":\"SetRequestKeysStartValues\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"cancelDecreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"cancelIncreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withdrawETH\",\"type\":\"bool\"}],\"name\":\"createDecreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_referralCode\",\"type\":\"bytes32\"}],\"name\":\"createIncreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_referralCode\",\"type\":\"bytes32\"}],\"name\":\"createIncreasePositionETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreasePositionRequestKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreasePositionRequestKeysStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"decreasePositionRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawETH\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decreasePositionsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeDecreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeDecreasePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeIncreasePosition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_executionFeeReceiver\",\"type\":\"address\"}],\"name\":\"executeIncreasePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getDecreasePositionRequestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getIncreasePositionRequestPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestQueueLengths\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increasePositionBufferBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increasePositionRequestKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increasePositionRequestKeysStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"increasePositionRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasCollateralInETH\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"increasePositionsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPositionKeeper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalLongSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBlockDelayKeeper\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeDelayPublic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBlockDelayKeeper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTimeDelayPublic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTimeDelay\",\"type\":\"uint256\"}],\"name\":\"setDelayValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositFee\",\"type\":\"uint256\"}],\"name\":\"setDepositFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_increasePositionBufferBps\",\"type\":\"uint256\"}],\"name\":\"setIncreasePositionBufferBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_longSizes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shortSizes\",\"type\":\"uint256[]\"}],\"name\":\"setMaxGlobalSizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"}],\"name\":\"setMinExecutionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setPositionKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referralStorage\",\"type\":\"address\"}],\"name\":\"setReferralStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_increasePositionRequestKeysStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decreasePositionRequestKeysStart\",\"type\":\"uint256\"}],\"name\":\"setRequestKeysStartValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/PositionRouter.sol\":\"PositionRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/access/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ncontract Governable {\\n    address public gov;\\n\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    modifier onlyGov() {\\n        require(msg.sender == gov, \\\"Governable: forbidden\\\");\\n        _;\\n    }\\n\\n    function setGov(address _gov) external onlyGov {\\n        gov = _gov;\\n    }\\n}\\n\",\"keccak256\":\"0xe719b0de64ee00468f6a985c8ef08ebdd271d99d6616308cbba458f78ed8c532\",\"license\":\"MIT\"},\"contracts/core/BasePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/Address.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"./interfaces/IRouter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IOrderBook.sol\\\";\\nimport \\\"./interfaces/IBasePositionManager.sol\\\";\\n\\nimport \\\"../access/Governable.sol\\\";\\nimport \\\"../peripherals/interfaces/ITimelock.sol\\\";\\n\\nimport \\\"../referrals/interfaces/IReferralStorage.sol\\\";\\n\\ncontract BasePositionManager is IBasePositionManager, ReentrancyGuard, Governable {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n\\n    address public admin;\\n\\n    address public vault;\\n    address public router;\\n    address public weth;\\n\\n    // to prevent using the deposit and withdrawal of collateral as a zero fee swap,\\n    // there is a small depositFee charged if a collateral deposit results in the decrease\\n    // of leverage for an existing position\\n    // increasePositionBufferBps allows for a small amount of decrease of leverage\\n    uint256 public depositFee;\\n    uint256 public increasePositionBufferBps = 100;\\n\\n    address public referralStorage;\\n\\n    mapping (address => uint256) public feeReserves;\\n\\n    mapping (address => uint256) public override maxGlobalLongSizes;\\n    mapping (address => uint256) public override maxGlobalShortSizes;\\n\\n    event SetDepositFee(uint256 depositFee);\\n    event SetIncreasePositionBufferBps(uint256 increasePositionBufferBps);\\n    event SetReferralStorage(address referralStorage);\\n    event SetAdmin(address admin);\\n    event WithdrawFees(address token, address receiver, uint256 amount);\\n\\n    event SetMaxGlobalSizes(\\n        address[] tokens,\\n        uint256[] longSizes,\\n        uint256[] shortSizes\\n    );\\n\\n    event IncreasePositionReferral(\\n        address account,\\n        uint256 sizeDelta,\\n        uint256 marginFeeBasisPoints,\\n        bytes32 referralCode,\\n        address referrer\\n    );\\n\\n    event DecreasePositionReferral(\\n        address account,\\n        uint256 sizeDelta,\\n        uint256 marginFeeBasisPoints,\\n        bytes32 referralCode,\\n        address referrer\\n    );\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"BasePositionManager: forbidden\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _vault,\\n        address _router,\\n        address _weth,\\n        uint256 _depositFee\\n    ) public {\\n        vault = _vault;\\n        router = _router;\\n        weth = _weth;\\n        depositFee = _depositFee;\\n\\n        admin = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        require(msg.sender == weth, \\\"BasePositionManager: invalid sender\\\");\\n    }\\n\\n    function setAdmin(address _admin) external onlyGov {\\n        admin = _admin;\\n        emit SetAdmin(_admin);\\n    }\\n\\n    function setDepositFee(uint256 _depositFee) external onlyAdmin {\\n        depositFee = _depositFee;\\n        emit SetDepositFee(_depositFee);\\n    }\\n\\n    function setIncreasePositionBufferBps(uint256 _increasePositionBufferBps) external onlyAdmin {\\n        increasePositionBufferBps = _increasePositionBufferBps;\\n        emit SetIncreasePositionBufferBps(_increasePositionBufferBps);\\n    }\\n\\n    function setReferralStorage(address _referralStorage) external onlyAdmin {\\n        referralStorage = _referralStorage;\\n        emit SetReferralStorage(_referralStorage);\\n    }\\n\\n    function setMaxGlobalSizes(\\n        address[] memory _tokens,\\n        uint256[] memory _longSizes,\\n        uint256[] memory _shortSizes\\n    ) external onlyAdmin {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            address token = _tokens[i];\\n            maxGlobalLongSizes[token] = _longSizes[i];\\n            maxGlobalShortSizes[token] = _shortSizes[i];\\n        }\\n\\n        emit SetMaxGlobalSizes(_tokens, _longSizes, _shortSizes);\\n    }\\n\\n    function withdrawFees(address _token, address _receiver) external onlyAdmin {\\n        uint256 amount = feeReserves[_token];\\n        if (amount == 0) { return; }\\n\\n        feeReserves[_token] = 0;\\n        IERC20(_token).safeTransfer(_receiver, amount);\\n\\n        emit WithdrawFees(_token, _receiver, amount);\\n    }\\n\\n    function approve(address _token, address _spender, uint256 _amount) external onlyGov {\\n        IERC20(_token).approve(_spender, _amount);\\n    }\\n\\n    function sendValue(address payable _receiver, uint256 _amount) external onlyGov {\\n        _receiver.sendValue(_amount);\\n    }\\n\\n    function _increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong, uint256 _price) internal {\\n        address _vault = vault;\\n\\n        if (_isLong) {\\n            require(IVault(_vault).getMaxPrice(_indexToken) <= _price, \\\"BasePositionManager: mark price higher than limit\\\");\\n        } else {\\n            require(IVault(_vault).getMinPrice(_indexToken) >= _price, \\\"BasePositionManager: mark price lower than limit\\\");\\n        }\\n\\n        if (_isLong) {\\n            uint256 maxGlobalLongSize = maxGlobalLongSizes[_indexToken];\\n            if (maxGlobalLongSize > 0 && IVault(_vault).guaranteedUsd(_indexToken).add(_sizeDelta) > maxGlobalLongSize) {\\n                revert(\\\"BasePositionManager: max global longs exceeded\\\");\\n            }\\n        } else {\\n            uint256 maxGlobalShortSize = maxGlobalShortSizes[_indexToken];\\n            if (maxGlobalShortSize > 0 && IVault(_vault).globalShortSizes(_indexToken).add(_sizeDelta) > maxGlobalShortSize) {\\n                revert(\\\"BasePositionManager: max global shorts exceeded\\\");\\n            }\\n        }\\n\\n        address timelock = IVault(_vault).gov();\\n\\n        ITimelock(timelock).enableLeverage(_vault);\\n        IRouter(router).pluginIncreasePosition(_account, _collateralToken, _indexToken, _sizeDelta, _isLong);\\n        ITimelock(timelock).disableLeverage(_vault);\\n\\n        _emitIncreasePositionReferral(_account, _sizeDelta);\\n    }\\n\\n    function _decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _price) internal returns (uint256) {\\n        address _vault = vault;\\n\\n        if (_isLong) {\\n            require(IVault(_vault).getMinPrice(_indexToken) >= _price, \\\"BasePositionManager: mark price lower than limit\\\");\\n        } else {\\n            require(IVault(_vault).getMaxPrice(_indexToken) <= _price, \\\"BasePositionManager: mark price higher than limit\\\");\\n        }\\n\\n        address timelock = IVault(_vault).gov();\\n\\n        ITimelock(timelock).enableLeverage(_vault);\\n        uint256 amountOut = IRouter(router).pluginDecreasePosition(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n        ITimelock(timelock).disableLeverage(_vault);\\n\\n        _emitDecreasePositionReferral(_account, _sizeDelta);\\n\\n        return amountOut;\\n    }\\n\\n    function _emitIncreasePositionReferral(address _account, uint256 _sizeDelta) internal {\\n        address _referralStorage = referralStorage;\\n        if (_referralStorage == address(0)) {\\n            return;\\n        }\\n\\n        (bytes32 referralCode, address referrer) = IReferralStorage(_referralStorage).getTraderReferralInfo(_account);\\n        emit IncreasePositionReferral(\\n            _account,\\n            _sizeDelta,\\n            IVault(vault).marginFeeBasisPoints(),\\n            referralCode,\\n            referrer\\n        );\\n    }\\n\\n    function _emitDecreasePositionReferral(address _account, uint256 _sizeDelta) internal {\\n        address _referralStorage = referralStorage;\\n        if (_referralStorage == address(0)) {\\n            return;\\n        }\\n\\n        (bytes32 referralCode, address referrer) = IReferralStorage(_referralStorage).getTraderReferralInfo(_account);\\n\\n        if (referralCode == bytes32(0)) {\\n            return;\\n        }\\n\\n        emit DecreasePositionReferral(\\n            _account,\\n            _sizeDelta,\\n            IVault(vault).marginFeeBasisPoints(),\\n            referralCode,\\n            referrer\\n        );\\n    }\\n\\n    function _swap(address[] memory _path, uint256 _minOut, address _receiver) internal returns (uint256) {\\n        if (_path.length == 2) {\\n            return _vaultSwap(_path[0], _path[1], _minOut, _receiver);\\n        }\\n        revert(\\\"BasePositionManager: invalid _path.length\\\");\\n    }\\n\\n    function _vaultSwap(address _tokenIn, address _tokenOut, uint256 _minOut, address _receiver) internal returns (uint256) {\\n        uint256 amountOut = IVault(vault).swap(_tokenIn, _tokenOut, _receiver);\\n        require(amountOut >= _minOut, \\\"BasePositionManager: insufficient amountOut\\\");\\n        return amountOut;\\n    }\\n\\n    function _transferInETH() internal {\\n        if (msg.value != 0) {\\n            IWETH(weth).deposit{value: msg.value}();\\n        }\\n    }\\n\\n    function _transferOutETH(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.sendValue(_amountOut);\\n    }\\n\\n    function _transferOutETHWithGasLimit(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.transfer(_amountOut);\\n    }\\n\\n    function _collectFees(\\n        address _account,\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) internal returns (uint256) {\\n        bool shouldDeductFee = _shouldDeductFee(\\n            _account,\\n            _path,\\n            _amountIn,\\n            _indexToken,\\n            _isLong,\\n            _sizeDelta\\n        );\\n\\n        if (shouldDeductFee) {\\n            uint256 afterFeeAmount = _amountIn.mul(BASIS_POINTS_DIVISOR.sub(depositFee)).div(BASIS_POINTS_DIVISOR);\\n            uint256 feeAmount = _amountIn.sub(afterFeeAmount);\\n            address feeToken = _path[_path.length - 1];\\n            feeReserves[feeToken] = feeReserves[feeToken].add(feeAmount);\\n            return afterFeeAmount;\\n        }\\n\\n        return _amountIn;\\n    }\\n\\n    function _shouldDeductFee(\\n        address _account,\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) internal view returns (bool) {\\n        // if the position is a short, do not charge a fee\\n        if (!_isLong) { return false; }\\n\\n        // if the position size is not increasing, this is a collateral deposit\\n        if (_sizeDelta == 0) { return true; }\\n\\n        address collateralToken = _path[_path.length - 1];\\n\\n        IVault _vault = IVault(vault);\\n        (uint256 size, uint256 collateral, , , , , , ) = _vault.getPosition(_account, collateralToken, _indexToken, _isLong);\\n\\n        // if there is no existing position, do not charge a fee\\n        if (size == 0) { return false; }\\n\\n        uint256 nextSize = size.add(_sizeDelta);\\n        uint256 collateralDelta = _vault.tokenToUsdMin(collateralToken, _amountIn);\\n        uint256 nextCollateral = collateral.add(collateralDelta);\\n\\n        uint256 prevLeverage = size.mul(BASIS_POINTS_DIVISOR).div(collateral);\\n        // allow for a maximum of a increasePositionBufferBps decrease since there might be some swap fees taken from the collateral\\n        uint256 nextLeverage = nextSize.mul(BASIS_POINTS_DIVISOR + increasePositionBufferBps).div(nextCollateral);\\n\\n        // deduct a fee if the leverage is decreased\\n        return nextLeverage < prevLeverage;\\n    }\\n}\\n\",\"keccak256\":\"0x9cff8bacf033c1e613c646598c1314074218dd8a761efaa8def703735e18cb15\",\"license\":\"MIT\"},\"contracts/core/PositionRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.0;\\n\\nimport \\\"./interfaces/IRouter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IPositionRouter.sol\\\";\\n\\nimport \\\"../peripherals/interfaces/ITimelock.sol\\\";\\nimport \\\"./BasePositionManager.sol\\\";\\n\\ncontract PositionRouter is BasePositionManager, IPositionRouter {\\n\\n    struct IncreasePositionRequest {\\n        address account;\\n        address[] path;\\n        address indexToken;\\n        uint256 amountIn;\\n        uint256 minOut;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        uint256 acceptablePrice;\\n        uint256 executionFee;\\n        uint256 blockNumber;\\n        uint256 blockTime;\\n        bool hasCollateralInETH;\\n    }\\n\\n    struct DecreasePositionRequest {\\n        address account;\\n        address[] path;\\n        address indexToken;\\n        uint256 collateralDelta;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        address receiver;\\n        uint256 acceptablePrice;\\n        uint256 minOut;\\n        uint256 executionFee;\\n        uint256 blockNumber;\\n        uint256 blockTime;\\n        bool withdrawETH;\\n    }\\n\\n    uint256 public minExecutionFee;\\n\\n    uint256 public minBlockDelayKeeper;\\n    uint256 public minTimeDelayPublic;\\n    uint256 public maxTimeDelay;\\n\\n    bool public isLeverageEnabled = true;\\n\\n    bytes32[] public increasePositionRequestKeys;\\n    bytes32[] public decreasePositionRequestKeys;\\n\\n    uint256 public override increasePositionRequestKeysStart;\\n    uint256 public override decreasePositionRequestKeysStart;\\n\\n    mapping (address => bool) public isPositionKeeper;\\n\\n    mapping (address => uint256) public increasePositionsIndex;\\n    mapping (bytes32 => IncreasePositionRequest) public increasePositionRequests;\\n\\n    mapping (address => uint256) public decreasePositionsIndex;\\n    mapping (bytes32 => DecreasePositionRequest) public decreasePositionRequests;\\n\\n    event CreateIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 index,\\n        uint256 blockNumber,\\n        uint256 blockTime,\\n        uint256 gasPrice\\n    );\\n\\n    event ExecuteIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event CancelIncreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 acceptablePrice,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event CreateDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 index,\\n        uint256 blockNumber,\\n        uint256 blockTime\\n    );\\n\\n    event ExecuteDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event CancelDecreasePosition(\\n        address indexed account,\\n        address[] path,\\n        address indexToken,\\n        uint256 collateralDelta,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        address receiver,\\n        uint256 acceptablePrice,\\n        uint256 minOut,\\n        uint256 executionFee,\\n        uint256 blockGap,\\n        uint256 timeGap\\n    );\\n\\n    event SetPositionKeeper(address indexed account, bool isActive);\\n    event SetMinExecutionFee(uint256 minExecutionFee);\\n    event SetIsLeverageEnabled(bool isLeverageEnabled);\\n    event SetDelayValues(uint256 minBlockDelayKeeper, uint256 minTimeDelayPublic, uint256 maxTimeDelay);\\n    event SetRequestKeysStartValues(uint256 increasePositionRequestKeysStart, uint256 decreasePositionRequestKeysStart);\\n\\n    modifier onlyPositionKeeper() {\\n        require(isPositionKeeper[msg.sender], \\\"PositionRouter: forbidden\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _vault,\\n        address _router,\\n        address _weth,\\n        uint256 _depositFee,\\n        uint256 _minExecutionFee\\n    ) public BasePositionManager(_vault, _router, _weth, _depositFee) {\\n        minExecutionFee = _minExecutionFee;\\n    }\\n\\n    function setPositionKeeper(address _account, bool _isActive) external onlyAdmin {\\n        isPositionKeeper[_account] = _isActive;\\n        emit SetPositionKeeper(_account, _isActive);\\n    }\\n\\n    function setMinExecutionFee(uint256 _minExecutionFee) external onlyAdmin {\\n        minExecutionFee = _minExecutionFee;\\n        emit SetMinExecutionFee(_minExecutionFee);\\n    }\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external onlyAdmin {\\n        isLeverageEnabled = _isLeverageEnabled;\\n        emit SetIsLeverageEnabled(_isLeverageEnabled);\\n    }\\n\\n    function setDelayValues(uint256 _minBlockDelayKeeper, uint256 _minTimeDelayPublic, uint256 _maxTimeDelay) external onlyAdmin {\\n        minBlockDelayKeeper = _minBlockDelayKeeper;\\n        minTimeDelayPublic = _minTimeDelayPublic;\\n        maxTimeDelay = _maxTimeDelay;\\n        emit SetDelayValues(_minBlockDelayKeeper, _minTimeDelayPublic, _maxTimeDelay);\\n    }\\n\\n    function setRequestKeysStartValues(uint256 _increasePositionRequestKeysStart, uint256 _decreasePositionRequestKeysStart) external onlyAdmin {\\n        increasePositionRequestKeysStart = _increasePositionRequestKeysStart;\\n        decreasePositionRequestKeysStart = _decreasePositionRequestKeysStart;\\n\\n        emit SetRequestKeysStartValues(_increasePositionRequestKeysStart, _decreasePositionRequestKeysStart);\\n    }\\n\\n    function executeIncreasePositions(uint256 _endIndex, address payable _executionFeeReceiver) external override onlyPositionKeeper {\\n        uint256 index = increasePositionRequestKeysStart;\\n        uint256 length = increasePositionRequestKeys.length;\\n\\n        if (index >= length) { return; }\\n\\n        if (_endIndex > length) {\\n            _endIndex = length;\\n        }\\n\\n        while (index < _endIndex) {\\n            bytes32 key = increasePositionRequestKeys[index];\\n\\n            // if the request was executed then delete the key from the array\\n            // if the request was not executed then break from the loop, this can happen if the\\n            // minimum number of blocks has not yet passed\\n            // an error could be thrown if the request is too old or if the slippage is\\n            // higher than what the user specified, or if there is insufficient liquidity for the position\\n            // in case an error was thrown, cancel the request\\n            try this.executeIncreasePosition(key, _executionFeeReceiver) returns (bool _wasExecuted) {\\n                if (!_wasExecuted) { break; }\\n            } catch {\\n                // wrap this call in a try catch to prevent invalid cancels from blocking the loop\\n                try this.cancelIncreasePosition(key, _executionFeeReceiver) returns (bool _wasCancelled) {\\n                    if (!_wasCancelled) { break; }\\n                } catch {}\\n            }\\n\\n            delete increasePositionRequestKeys[index];\\n            index++;\\n        }\\n\\n        increasePositionRequestKeysStart = index;\\n    }\\n\\n    function executeDecreasePositions(uint256 _endIndex, address payable _executionFeeReceiver) external override onlyPositionKeeper {\\n        uint256 index = decreasePositionRequestKeysStart;\\n        uint256 length = decreasePositionRequestKeys.length;\\n\\n        if (index >= length) { return; }\\n\\n        if (_endIndex > length) {\\n            _endIndex = length;\\n        }\\n\\n        while (index < _endIndex) {\\n            bytes32 key = decreasePositionRequestKeys[index];\\n\\n            // if the request was executed then delete the key from the array\\n            // if the request was not executed then break from the loop, this can happen if the\\n            // minimum number of blocks has not yet passed\\n            // an error could be thrown if the request is too old\\n            // in case an error was thrown, cancel the request\\n            try this.executeDecreasePosition(key, _executionFeeReceiver) returns (bool _wasExecuted) {\\n                if (!_wasExecuted) { break; }\\n            } catch {\\n                // wrap this call in a try catch to prevent invalid cancels from blocking the loop\\n                try this.cancelDecreasePosition(key, _executionFeeReceiver) returns (bool _wasCancelled) {\\n                    if (!_wasCancelled) { break; }\\n                } catch {}\\n            }\\n\\n            delete decreasePositionRequestKeys[index];\\n            index++;\\n        }\\n\\n        decreasePositionRequestKeysStart = index;\\n    }\\n\\n    function createIncreasePosition(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bytes32 _referralCode\\n    ) external payable nonReentrant {\\n        require(_executionFee >= minExecutionFee, \\\"PositionRouter: invalid executionFee\\\");\\n        require(msg.value == _executionFee, \\\"PositionRouter: invalid msg.value\\\");\\n        require(_path.length == 1 || _path.length == 2, \\\"PositionRouter: invalid _path length\\\");\\n\\n        _transferInETH();\\n        _setTraderReferralCode(_referralCode);\\n\\n        if (_amountIn > 0) {\\n            IRouter(router).pluginTransfer(_path[0], msg.sender, address(this), _amountIn);\\n        }\\n\\n        _createIncreasePosition(\\n            msg.sender,\\n            _path,\\n            _indexToken,\\n            _amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            false\\n        );\\n    }\\n\\n    function createIncreasePositionETH(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bytes32 _referralCode\\n    ) external payable nonReentrant {\\n        require(_executionFee >= minExecutionFee, \\\"PositionRouter: invalid executionFee\\\");\\n        require(msg.value >= _executionFee, \\\"PositionRouter: invalid msg.value\\\");\\n        require(_path.length == 1 || _path.length == 2, \\\"PositionRouter: invalid _path length\\\");\\n        require(_path[0] == weth, \\\"PositionRouter: invalid _path\\\");\\n\\n        _transferInETH();\\n        _setTraderReferralCode(_referralCode);\\n\\n        uint256 amountIn = msg.value.sub(_executionFee);\\n\\n        _createIncreasePosition(\\n            msg.sender,\\n            _path,\\n            _indexToken,\\n            amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            true\\n        );\\n    }\\n\\n    function createDecreasePosition(\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver,\\n        uint256 _acceptablePrice,\\n        uint256 _minOut,\\n        uint256 _executionFee,\\n        bool _withdrawETH\\n    ) external payable nonReentrant {\\n        require(_executionFee >= minExecutionFee, \\\"PositionRouter: invalid executionFee\\\");\\n        require(msg.value == _executionFee, \\\"PositionRouter: invalid msg.value\\\");\\n        require(_path.length == 1 || _path.length == 2, \\\"PositionRouter: invalid _path length\\\");\\n\\n        if (_withdrawETH) {\\n            require(_path[_path.length - 1] == weth, \\\"PositionRouter: invalid _path\\\");\\n        }\\n\\n        _transferInETH();\\n\\n        _createDecreasePosition(\\n            msg.sender,\\n            _path,\\n            _indexToken,\\n            _collateralDelta,\\n            _sizeDelta,\\n            _isLong,\\n            _receiver,\\n            _acceptablePrice,\\n            _minOut,\\n            _executionFee,\\n            _withdrawETH\\n        );\\n    }\\n\\n    function getRequestQueueLengths() external view returns (uint256, uint256, uint256, uint256) {\\n        return (\\n            increasePositionRequestKeysStart,\\n            increasePositionRequestKeys.length,\\n            decreasePositionRequestKeysStart,\\n            decreasePositionRequestKeys.length\\n        );\\n    }\\n\\n    function executeIncreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeIncreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) { return true; }\\n\\n        bool shouldExecute = _validateExecution(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldExecute) { return false; }\\n\\n        delete increasePositionRequests[_key];\\n\\n       if (request.amountIn > 0) {\\n           uint256 amountIn = request.amountIn;\\n\\n           if (request.path.length > 1) {\\n               IERC20(request.path[0]).safeTransfer(vault, request.amountIn);\\n               amountIn = _swap(request.path, request.minOut, address(this));\\n           }\\n\\n           uint256 afterFeeAmount = _collectFees(msg.sender, request.path, amountIn, request.indexToken, request.isLong, request.sizeDelta);\\n           IERC20(request.path[request.path.length - 1]).safeTransfer(vault, afterFeeAmount);\\n       }\\n\\n       _increasePosition(request.account, request.path[request.path.length - 1], request.indexToken, request.sizeDelta, request.isLong, request.acceptablePrice);\\n\\n       _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit ExecuteIncreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.amountIn,\\n            request.minOut,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.acceptablePrice,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function cancelIncreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeIncreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) { return true; }\\n\\n        bool shouldCancel = _validateCancellation(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldCancel) { return false; }\\n\\n        delete increasePositionRequests[_key];\\n\\n        if (request.hasCollateralInETH) {\\n            _transferOutETHWithGasLimit(request.amountIn, payable(request.account));\\n        } else {\\n            IERC20(request.path[0]).safeTransfer(request.account, request.amountIn);\\n        }\\n\\n       _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit CancelIncreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.amountIn,\\n            request.minOut,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.acceptablePrice,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function executeDecreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeDecreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) { return true; }\\n\\n        bool shouldExecute = _validateExecution(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldExecute) { return false; }\\n\\n        delete decreasePositionRequests[_key];\\n\\n        uint256 amountOut = _decreasePosition(request.account, request.path[0], request.indexToken, request.collateralDelta, request.sizeDelta, request.isLong, address(this), request.acceptablePrice);\\n\\n        if (request.path.length > 1) {\\n            IERC20(request.path[0]).safeTransfer(vault, amountOut);\\n            amountOut = _swap(request.path, request.minOut, address(this));\\n        }\\n\\n        if (request.withdrawETH) {\\n           _transferOutETHWithGasLimit(amountOut, payable(request.receiver));\\n        } else {\\n           IERC20(request.path[request.path.length - 1]).safeTransfer(request.receiver, amountOut);\\n        }\\n\\n       _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit ExecuteDecreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.collateralDelta,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.receiver,\\n            request.acceptablePrice,\\n            request.minOut,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function cancelDecreasePosition(bytes32 _key, address payable _executionFeeReceiver) public nonReentrant returns (bool) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        // if the request was already executed or cancelled, return true so that the executeDecreasePositions loop will continue executing the next request\\n        if (request.account == address(0)) { return true; }\\n\\n        bool shouldCancel = _validateCancellation(request.blockNumber, request.blockTime, request.account);\\n        if (!shouldCancel) { return false; }\\n\\n        delete decreasePositionRequests[_key];\\n\\n       _transferOutETH(request.executionFee, _executionFeeReceiver);\\n\\n        emit CancelDecreasePosition(\\n            request.account,\\n            request.path,\\n            request.indexToken,\\n            request.collateralDelta,\\n            request.sizeDelta,\\n            request.isLong,\\n            request.receiver,\\n            request.acceptablePrice,\\n            request.minOut,\\n            request.executionFee,\\n            block.number.sub(request.blockNumber),\\n            block.timestamp.sub(request.blockTime)\\n        );\\n\\n        return true;\\n    }\\n\\n    function getRequestKey(address _account, uint256 _index) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_account, _index));\\n    }\\n\\n    function getIncreasePositionRequestPath(bytes32 _key) public view returns (address[] memory) {\\n        IncreasePositionRequest memory request = increasePositionRequests[_key];\\n        return request.path;\\n    }\\n\\n    function getDecreasePositionRequestPath(bytes32 _key) public view returns (address[] memory) {\\n        DecreasePositionRequest memory request = decreasePositionRequests[_key];\\n        return request.path;\\n    }\\n\\n    function _setTraderReferralCode(bytes32 _referralCode) internal {\\n        if (_referralCode != bytes32(0) && referralStorage != address(0)) {\\n            IReferralStorage(referralStorage).setTraderReferralCode(msg.sender, _referralCode);\\n        }\\n    }\\n\\n    function _validateExecution(uint256 _positionBlockNumber, uint256 _positionBlockTime, address _account) internal view returns (bool) {\\n        if (_positionBlockTime.add(maxTimeDelay) <= block.timestamp) {\\n            revert(\\\"PositionRouter: request has expired\\\");\\n        }\\n\\n        bool isKeeperCall = msg.sender == address(this) || isPositionKeeper[msg.sender];\\n\\n        if (!isLeverageEnabled && !isKeeperCall) {\\n            revert(\\\"PositionRouter: forbidden\\\");\\n        }\\n\\n        if (isKeeperCall) {\\n            return _positionBlockNumber.add(minBlockDelayKeeper) <= block.number;\\n        }\\n\\n        require(msg.sender == _account, \\\"PositionRouter: forbidden\\\");\\n\\n        require(_positionBlockTime.add(minTimeDelayPublic) <= block.timestamp, \\\"PositionRouter: min delay not yet passed\\\");\\n\\n        return true;\\n    }\\n\\n    function _validateCancellation(uint256 _positionBlockNumber, uint256 _positionBlockTime, address _account) internal view returns (bool) {\\n        bool isKeeperCall = msg.sender == address(this) || isPositionKeeper[msg.sender];\\n\\n        if (!isLeverageEnabled && !isKeeperCall) {\\n            revert(\\\"PositionRouter: forbidden\\\");\\n        }\\n\\n        if (isKeeperCall) {\\n            return _positionBlockNumber.add(minBlockDelayKeeper) <= block.number;\\n        }\\n\\n        require(msg.sender == _account, \\\"PositionRouter: forbidden\\\");\\n\\n        require(_positionBlockTime.add(minTimeDelayPublic) <= block.timestamp, \\\"PositionRouter: min delay not yet passed\\\");\\n\\n        return true;\\n    }\\n\\n    function _createIncreasePosition(\\n        address _account,\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _acceptablePrice,\\n        uint256 _executionFee,\\n        bool _hasCollateralInETH\\n    ) internal {\\n        uint256 index = increasePositionsIndex[_account].add(1);\\n        increasePositionsIndex[_account] = index;\\n\\n        IncreasePositionRequest memory request = IncreasePositionRequest(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            block.number,\\n            block.timestamp,\\n            _hasCollateralInETH\\n        );\\n\\n        bytes32 key = getRequestKey(_account, index);\\n        increasePositionRequests[key] = request;\\n\\n        increasePositionRequestKeys.push(key);\\n\\n        emit CreateIncreasePosition(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _amountIn,\\n            _minOut,\\n            _sizeDelta,\\n            _isLong,\\n            _acceptablePrice,\\n            _executionFee,\\n            index,\\n            block.number,\\n            block.timestamp,\\n            tx.gasprice\\n        );\\n    }\\n\\n    function _createDecreasePosition(\\n        address _account,\\n        address[] memory _path,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver,\\n        uint256 _acceptablePrice,\\n        uint256 _minOut,\\n        uint256 _executionFee,\\n        bool _withdrawETH\\n    ) internal {\\n        uint256 index = decreasePositionsIndex[_account].add(1);\\n        decreasePositionsIndex[_account] = index;\\n\\n        DecreasePositionRequest memory request = DecreasePositionRequest(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _collateralDelta,\\n            _sizeDelta,\\n            _isLong,\\n            _receiver,\\n            _acceptablePrice,\\n            _minOut,\\n            _executionFee,\\n            block.number,\\n            block.timestamp,\\n            _withdrawETH\\n        );\\n\\n        bytes32 key = getRequestKey(_account, index);\\n        decreasePositionRequests[key] = request;\\n\\n        decreasePositionRequestKeys.push(key);\\n\\n        emit CreateDecreasePosition(\\n            _account,\\n            _path,\\n            _indexToken,\\n            _collateralDelta,\\n            _sizeDelta,\\n            _isLong,\\n            _receiver,\\n            _acceptablePrice,\\n            _minOut,\\n            _executionFee,\\n            index,\\n            block.number,\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc44dcce33ed4b8dcdfbc92c6660492b77acbc18f8571741eae0aa2375e81c36b\",\"license\":\"MIT\"},\"contracts/core/interfaces/IBasePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IBasePositionManager {\\n    function maxGlobalLongSizes(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd3ec7cb225a19de7945d66c697546c875fc496395716cd394f91cdc61b1c54f7\",\"license\":\"MIT\"},\"contracts/core/interfaces/IOrderBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IOrderBook {\\n\\tfunction getSwapOrder(address _account, uint256 _orderIndex) external view returns (\\n        address path0, \\n        address path1,\\n        address path2,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    );\\n\\n    function getIncreaseOrder(address _account, uint256 _orderIndex) external view returns (\\n        address purchaseToken, \\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    function getDecreaseOrder(address _account, uint256 _orderIndex) external view returns (\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    function executeSwapOrder(address, uint256, address payable) external;\\n    function executeDecreaseOrder(address, uint256, address payable) external;\\n    function executeIncreaseOrder(address, uint256, address payable) external;\\n}\\n\",\"keccak256\":\"0xbb5aed341b0274d09569bc4ede3b5e868cc68d93ea667a2b11d53afd677a7c5d\",\"license\":\"MIT\"},\"contracts/core/interfaces/IPositionRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPositionRouter {\\n    function increasePositionRequestKeysStart() external returns (uint256);\\n    function decreasePositionRequestKeysStart() external returns (uint256);\\n    function executeIncreasePositions(uint256 _count, address payable _executionFeeReceiver) external;\\n    function executeDecreasePositions(uint256 _count, address payable _executionFeeReceiver) external;\\n}\\n\",\"keccak256\":\"0x6e961b41bd643e45b93d04b074267212a7cc7025f6ea1b13ce9413f9a7437a82\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IRouter {\\n    function addPlugin(address _plugin) external;\\n    function pluginTransfer(address _token, address _account, address _receiver, uint256 _amount) external;\\n    function pluginIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function pluginDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function swap(address[] memory _path, uint256 _amountIn, uint256 _minOut, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x944216f79857ed00b57025d6343648c5b75c2f60de431961f8801cf05319cad9\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n    function usdg() external view returns (address);\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetUsdgAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setUsdgAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdgAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n    function buyUSDG(address _token, address _receiver) external returns (uint256);\\n    function sellUSDG(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function usdgAmounts(address _token) external view returns (uint256);\\n    function maxUsdgAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n}\\n\",\"keccak256\":\"0x906f87c2b5a0351b07836fbc0f19755302ba8ddf1aa5fcef0827fd743ee723b9\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSellUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(address _tokenIn, address _tokenOut, uint256 _usdgAmount) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc8cad694c33f968559eb3feac2226fe26d81d457529b87ae8852390e1474d7be\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf80766b21ea67a73c81e0dea4543375243938c8b223e29c5d783be61ab3f424c\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1845481964ebacf35afe1a006fa574793b52e698eba0a8db6e3d30202bc45429\",\"license\":\"MIT\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xae7a1e407ed171ecd3a0d3976875d6c58eefdccf831ebce6314ec94892dffc03\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface ITimelock {\\n    function setAdmin(address _admin) external;\\n    function enableLeverage(address _vault) external;\\n    function disableLeverage(address _vault) external;\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external;\\n    function signalSetGov(address _target, address _gov) external;\\n}\\n\",\"keccak256\":\"0x5a7543c7b61c11b94a4d04137839a8ab392e2d1dd1ab717755a349366c2eaddd\",\"license\":\"MIT\"},\"contracts/referrals/interfaces/IReferralStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IReferralStorage {\\n    function codeOwners(bytes32 _code) external view returns (address);\\n    function getTraderReferralInfo(address _account) external view returns (bytes32, address);\\n    function setTraderReferralCode(address _account, bytes32 _code) external;\\n    function setTier(uint256 _tierId, uint256 _totalRebate, uint256 _discountShare) external;\\n    function setReferrerTier(address _referrer, uint256 _tierId) external;\\n    function govSetCodeOwner(bytes32 _code, address _newAccount) external;\\n}\\n\",\"keccak256\":\"0x78b6037e4acba69d457288250b6ea49969fc4ede8de33f546091649e3aa0a183\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0x29613132c0162f9cdc8336e895d1da9aaf3660909adcf1a0134d714e53524ca4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260646007556010805460ff191660011790553480156200002357600080fd5b5060405162005c5938038062005c59833981810160405260a08110156200004957600080fd5b508051602082015160408301516060840151608090940151600160008181558154336001600160a01b031991821681179093556003805482166001600160a01b0398891617905560048054821696881696909617909555600580548616969094169590951790925560069490945560028054909216179055600c91909155615b81908190620000d890396000f3fe60806040526004361061026d5760003560e01c806362f8a3fe1161014b57806362f8a3fe146108a1578063633451de146108da57806363ae21031461090d57806367a5279314610922578063704b6c02146109375780637c2eb9f71461096a57806395e9bbd7146109965780639698d25a146109c057806398d1e03a146109f35780639a20810014610a085780639b57862014610a41578063ae4d7f9a14610a56578063c987417014610a89578063cb0269c914610b5f578063cfad57a214610b74578063e1f21c6714610ba7578063e70dd2fc14610bea578063ef12c67e14610ccc578063f255527814610e7e578063f2cea6a514610eb9578063f3883d8b14610ef4578063f851a44014610f2d578063f887ea4014610f42578063fa44457714610f57578063faf990f314610f8a578063fbfa77cf14611018578063fc2cee621461102d576102bd565b80626cc35e146102c257806304225954146102f35780630d4d003d1461032f5780631045c74e1461037c578063126082cf146103af57806312d43a51146103c45780631bca8cf0146103d95780631ce9cb8f146103ee5780631f28510614610421578063225fc9fd146104cd578063233bfe3b1461050657806324a084df1461053057806327b42c0f14610569578063308aa81f146105a2578063332e0382146105d25780633422ead1146106a257806336eba48a146106dd5780633a2a80c7146107105780633e72a262146107255780633fc8cef31461073a5780634067b1321461074f5780634278555f14610785578063490ae210146107af5780635841fcaa146107d95780635d5c22e8146107ee57806360a362e214610868576102bd565b366102bd576005546001600160a01b031633146102bb5760405162461bcd60e51b8152600401808060200182810382526023815260200180615b056023913960400191505060405180910390fd5b005b600080fd5b3480156102ce57600080fd5b506102d7611057565b604080516001600160a01b039092168252519081900360200190f35b3480156102ff57600080fd5b5061031d6004803603602081101561031657600080fd5b5035611066565b60408051918252519081900360200190f35b34801561033b57600080fd5b506103686004803603604081101561035257600080fd5b50803590602001356001600160a01b0316611084565b604080519115158252519081900360200190f35b34801561038857600080fd5b5061031d6004803603602081101561039f57600080fd5b50356001600160a01b03166114fe565b3480156103bb57600080fd5b5061031d611510565b3480156103d057600080fd5b506102d7611516565b3480156103e557600080fd5b5061031d611525565b3480156103fa57600080fd5b5061031d6004803603602081101561041157600080fd5b50356001600160a01b031661152b565b34801561042d57600080fd5b5061044b6004803603602081101561044457600080fd5b503561153d565b604051808d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a81526020018915158152602001886001600160a01b0316815260200187815260200186815260200185815260200184815260200183815260200182151581526020019c5050505050505050505050505060405180910390f35b3480156104d957600080fd5b50610368600480360360408110156104f057600080fd5b50803590602001356001600160a01b03166115a9565b34801561051257600080fd5b506102bb6004803603602081101561052957600080fd5b5035611951565b34801561053c57600080fd5b506102bb6004803603604081101561055357600080fd5b506001600160a01b0381351690602001356119d9565b34801561057557600080fd5b506103686004803603604081101561058c57600080fd5b50803590602001356001600160a01b0316611a3d565b3480156105ae57600080fd5b506102bb600480360360408110156105c557600080fd5b5080359060200135611dd0565b6102bb60048036036101008110156105e957600080fd5b810190602081018135600160201b81111561060357600080fd5b82018360208201111561061557600080fd5b803590602001918460208302840111600160201b8311171561063657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013515159060808101359060a08101359060c00135611e66565b3480156106ae57600080fd5b506102bb600480360360408110156106c557600080fd5b506001600160a01b038135169060200135151561203e565b3480156106e957600080fd5b506103686004803603602081101561070057600080fd5b50356001600160a01b03166120eb565b34801561071c57600080fd5b5061031d612100565b34801561073157600080fd5b50610368612106565b34801561074657600080fd5b506102d761210f565b34801561075b57600080fd5b506102bb6004803603606081101561077257600080fd5b508035906020810135906040013561211e565b34801561079157600080fd5b5061031d600480360360208110156107a857600080fd5b50356121bf565b3480156107bb57600080fd5b506102bb600480360360208110156107d257600080fd5b50356121cc565b3480156107e557600080fd5b5061031d612254565b3480156107fa57600080fd5b506108186004803603602081101561081157600080fd5b503561225a565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561085457818101518382015260200161083c565b505050509050019250505060405180910390f35b34801561087457600080fd5b506103686004803603604081101561088b57600080fd5b50803590602001356001600160a01b0316612385565b3480156108ad57600080fd5b5061031d600480360360408110156108c457600080fd5b506001600160a01b038135169060200135612713565b3480156108e657600080fd5b5061031d600480360360208110156108fd57600080fd5b50356001600160a01b0316612759565b34801561091957600080fd5b5061031d61276b565b34801561092e57600080fd5b5061031d612771565b34801561094357600080fd5b506102bb6004803603602081101561095a57600080fd5b50356001600160a01b0316612777565b34801561097657600080fd5b506102bb6004803603602081101561098d57600080fd5b50351515612818565b3480156109a257600080fd5b50610818600480360360208110156109b957600080fd5b50356128ac565b3480156109cc57600080fd5b5061031d600480360360208110156109e357600080fd5b50356001600160a01b03166129c9565b3480156109ff57600080fd5b5061031d6129db565b348015610a1457600080fd5b506102bb60048036036040811015610a2b57600080fd5b50803590602001356001600160a01b03166129e1565b348015610a4d57600080fd5b5061031d612bc1565b348015610a6257600080fd5b506102bb60048036036020811015610a7957600080fd5b50356001600160a01b0316612bc7565b6102bb6004803603610120811015610aa057600080fd5b810190602081018135600160201b811115610aba57600080fd5b820183602082011115610acc57600080fd5b803590602001918460208302840111600160201b83111715610aed57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013590608081013515159060a08101359060c08101359060e00135612c68565b348015610b6b57600080fd5b5061031d612e54565b348015610b8057600080fd5b506102bb60048036036020811015610b9757600080fd5b50356001600160a01b0316612e5a565b348015610bb357600080fd5b506102bb60048036036060811015610bca57600080fd5b506001600160a01b03813581169160208101359091169060400135612ec9565b6102bb6004803603610140811015610c0157600080fd5b810190602081018135600160201b811115610c1b57600080fd5b820183602082011115610c2d57600080fd5b803590602001918460208302840111600160201b83111715610c4e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c08101359060e08101359061010001351515612f9e565b348015610cd857600080fd5b506102bb60048036036060811015610cef57600080fd5b810190602081018135600160201b811115610d0957600080fd5b820183602082011115610d1b57600080fd5b803590602001918460208302840111600160201b83111715610d3c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610d8b57600080fd5b820183602082011115610d9d57600080fd5b803590602001918460208302840111600160201b83111715610dbe57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610e0d57600080fd5b820183602082011115610e1f57600080fd5b803590602001918460208302840111600160201b83111715610e4057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061316a945050505050565b348015610e8a57600080fd5b506102bb60048036036040811015610ea157600080fd5b506001600160a01b0381358116916020013516613359565b348015610ec557600080fd5b50610ece61343d565b604080519485526020850193909352838301919091526060830152519081900360800190f35b348015610f0057600080fd5b506102bb60048036036040811015610f1757600080fd5b50803590602001356001600160a01b031661344f565b348015610f3957600080fd5b506102d761362f565b348015610f4e57600080fd5b506102d761363e565b348015610f6357600080fd5b5061031d60048036036020811015610f7a57600080fd5b50356001600160a01b031661364d565b348015610f9657600080fd5b50610fb460048036036020811015610fad57600080fd5b503561365f565b604080516001600160a01b039c8d1681529a909b1660208b0152898b01989098526060890196909652608088019490945291151560a087015260c086015260e085015261010084015261012083015215156101408201529051908190036101600190f35b34801561102457600080fd5b506102d76136c9565b34801561103957600080fd5b506102bb6004803603602081101561105057600080fd5b50356136d8565b6008546001600160a01b031681565b6011818154811061107357fe5b600091825260209091200154905081565b6000600260005414156110cc576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b60026000556110d96156ab565b60008481526019602090815260409182902082516101a08101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561115957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161113b575b505050918352505060028201546001600160a01b0390811660208301526003830154604083015260048301546060830152600583015460ff8082161515608085015261010091829004831660a0850152600685015460c0850152600785015460e08501526008850154918401919091526009840154610120840152600a840154610140840152600b909301549092161515610160909101528151919250166112055760019150506114f3565b60006112208261014001518361016001518460000151613760565b905080611232576000925050506114f3565b600085815260196020526040812080546001600160a01b03191681559061125c6001830182615732565b506002810180546001600160a01b0319169055600060038201819055600482018190556005820180546001600160a81b031916905560068201819055600782018190556008820181905560098201819055600a8201819055600b909101805460ff191690558251602084015180516112ff92919084906112d857fe5b60200260200101518560400151866060015187608001518860a00151308a60e001516138f8565b9050600183602001515111156113695760035460208401518051611352926001600160a01b031691849160009061133257fe5b60200260200101516001600160a01b0316613cab9092919063ffffffff16565b611366836020015184610100015130613d02565b90505b8261018001511561138757611382818460c00151613d80565b6113a8565b6113a88360c001518285602001516001876020015151038151811061133257fe5b6113b783610120015186613e1b565b82600001516001600160a01b03167f21435c5b618d77ff3657140cd3318e2cffaebc5e0e1b7318f56a9ba4044c3ed284602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c610120015161142d8e610140015143613e9490919063ffffffff16565b6101608f015161143e904290613e94565b60405180806020018c6001600160a01b031681526020018b81526020018a81526020018915158152602001886001600160a01b0316815260200187815260200186815260200185815260200184815260200183815260200182810382528d818151815260200191508051906020019060200280838360005b838110156114ce5781810151838201526020016114b6565b505050509050019c5050505050505050505050505060405180910390a2600193505050505b600160005592915050565b600a6020526000908152604090205481565b61271081565b6001546001600160a01b031681565b60145481565b60096020526000908152604090205481565b6019602052600090815260409020805460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0154600b909a01546001600160a01b03998a169a988a16999798969760ff808816986101009098049091169691168c565b6000600260005414156115f1576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b60026000556115fe615750565b60008481526017602090815260409182902082516101808101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561167e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611660575b505050918352505060028201546001600160a01b039081166020830152600383015460408301526004830154606083015260058301546080830152600683015460ff908116151560a0840152600784015460c0840152600884015460e08401526009840154610100840152600a840154610120840152600b9093015490921615156101409091015281519192501661171a5760019150506114f3565b60006117358261012001518361014001518460000151613ed6565b905080611747576000925050506114f3565b600085815260176020526040812080546001600160a01b0319168155906117716001830182615732565b506002810180546001600160a01b0319169055600060038201819055600482018190556005820181905560068201805460ff19908116909155600783018290556008830182905560098301829055600a830191909155600b90910180549091169055610160820151156117f5576117f082606001518360000151613d80565b611813565b61181382600001518360600151846020015160008151811061133257fe5b61182282610100015185613e1b565b81600001516001600160a01b03167f35b638e650e2328786fb405bd69d2083dbedc018d086662e74b775b4f1dae4bf83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516118928c610120015143613e9490919063ffffffff16565b6101408d01516118a3904290613e94565b60405180806020018b6001600160a01b031681526020018a8152602001898152602001888152602001871515815260200186815260200185815260200184815260200183815260200182810382528c818151815260200191508051906020019060200280838360005b8381101561192457818101518382015260200161190c565b505050509050019b50505050505050505050505060405180910390a2600192505050600160005592915050565b6002546001600160a01b0316331461199e576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b60078190556040805182815290517f21167d0d4661af93817ebce920f18986eed3d75d5e1c03f2aed05efcbafbc4529181900360200190a150565b6001546001600160a01b03163314611a26576040805162461bcd60e51b815260206004820152601560248201526000805160206158f4833981519152604482015290519081900360640190fd5b611a396001600160a01b03831682613f46565b5050565b600060026000541415611a85576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b6002600055611a92615750565b60008481526017602090815260409182902082516101808101845281546001600160a01b0316815260018201805485518186028101860190965280865291949293858101939290830182828015611b1257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611af4575b505050918352505060028201546001600160a01b039081166020830152600383015460408301526004830154606083015260058301546080830152600683015460ff908116151560a0840152600784015460c0840152600884015460e08401526009840154610100840152600a840154610120840152600b90930154909216151561014090910152815191925016611bae5760019150506114f3565b6000611bc98261012001518361014001518460000151613760565b905080611bdb576000925050506114f3565b600085815260176020526040812080546001600160a01b031916815590611c056001830182615732565b506002810180546001600160a01b0319169055600060038201819055600482018190556005820181905560068201805460ff19908116909155600783018290556008830182905560098301829055600a830191909155600b90910180549091169055606082015115611d1357606082015160208301515160011015611cc257600354606084015160208501518051611cac936001600160a01b031692919060009061133257fe5b611cbf8360200151846080015130613d02565b90505b6000611ce23385602001518487604001518860c001518960a0015161402b565b60035460208601518051929350611d10926001600160a01b0390921691849190600019810190811061133257fe5b50505b815160208301518051611d519291906000198101908110611d3057fe5b602002602001015184604001518560a001518660c001518760e0015161410a565b611d6082610100015185613e1b565b81600001516001600160a01b03167f1be316b94d38c07bd41cdb4913772d0a0a82802786a2f8b657b6e85dbcdfc64183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516118928c610120015143613e9490919063ffffffff16565b6002546001600160a01b03163314611e1d576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b60138290556014819055604080518381526020810183905281517febb0f666150f4be5b60c45df8f3e49992510b0128027fe58eea6110f296493bc929181900390910190a15050565b60026000541415611eac576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b6002600055600c54821015611ef25760405162461bcd60e51b815260040180806020018281038252602481526020018061588f6024913960400191505060405180910390fd5b81341015611f315760405162461bcd60e51b81526004018080602001828103825260218152602001806158d36021913960400191505060405180910390fd5b875160011480611f42575087516002145b611f7d5760405162461bcd60e51b815260040180806020018281038252602481526020018061593f6024913960400191505060405180910390fd5b60055488516001600160a01b03909116908990600090611f9957fe5b60200260200101516001600160a01b031614611ffc576040805162461bcd60e51b815260206004820152601d60248201527f506f736974696f6e526f757465723a20696e76616c6964205f70617468000000604482015290519081900360640190fd5b612004614606565b61200d81614672565b60006120193484613e94565b905061202e338a8a848b8b8b8b8b60016146e6565b5050600160005550505050505050565b6002546001600160a01b0316331461208b576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b6001600160a01b038216600081815260156020908152604091829020805460ff1916851515908117909155825190815291517ffbabc02389290a451c6e600d05bf9887b99bfad39d8e1237e4e3df042e4941fe9281900390910190a25050565b60156020526000908152604090205460ff1681565b600e5481565b60105460ff1681565b6005546001600160a01b031681565b6002546001600160a01b0316331461216b576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b600d839055600e829055600f819055604080518481526020810184905280820183905290517fb98e759701eaca2e60c25e91109003c1c7442ef731b5d569037063005da8254d9181900360600190a1505050565b6012818154811061107357fe5b6002546001600160a01b03163314612219576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b60068190556040805182815290517f974fd3c1fcb4653dfc4fb740c4c692cd212d55c28f163f310128cb64d83006759181900360200190a150565b600d5481565b60606122646156ab565b60008381526019602090815260409182902082516101a08101845281546001600160a01b03168152600182018054855181860281018601909652808652919492938581019392908301828280156122e457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116122c6575b505050918352505060028201546001600160a01b039081166020808401919091526003840154604084015260048401546060840152600584015460ff808216151560808601526101009182900490931660a0850152600685015460c0850152600785015460e08501526008850154908401526009840154610120840152600a840154610140840152600b909301541615156101609091015201519392505050565b6000600260005414156123cd576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b60026000556123da6156ab565b60008481526019602090815260409182902082516101a08101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561245a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161243c575b505050918352505060028201546001600160a01b0390811660208301526003830154604083015260048301546060830152600583015460ff8082161515608085015261010091829004831660a0850152600685015460c0850152600785015460e08501526008850154918401919091526009840154610120840152600a840154610140840152600b909301549092161515610160909101528151919250166125065760019150506114f3565b60006125218261014001518361016001518460000151613ed6565b905080612533576000925050506114f3565b600085815260196020526040812080546001600160a01b03191681559061255d6001830182615732565b506002810180546001600160a01b0319169055600060038201819055600482018190556005820180546001600160a81b031916905560068201819055600782018190556008820181905560098201819055600a820155600b01805460ff191690556101208201516125ce9085613e1b565b81600001516001600160a01b03167f87abfd78e844f28318363bdf3da99eab2f4a2da9ff7ae365484507f7b6c3f80583602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001516126448d610140015143613e9490919063ffffffff16565b6101608e0151612655904290613e94565b60405180806020018c6001600160a01b031681526020018b81526020018a81526020018915158152602001886001600160a01b0316815260200187815260200186815260200185815260200184815260200183815260200182810382528d818151815260200191508051906020019060200280838360005b838110156126e55781810151838201526020016126cd565b505050509050019c5050505050505050505050505060405180910390a2600192505050600160005592915050565b6000828260405160200180836001600160a01b031660601b8152601401828152602001925050506040516020818303038152906040528051906020012090505b92915050565b60166020526000908152604090205481565b600c5481565b60065481565b6001546001600160a01b031633146127c4576040805162461bcd60e51b815260206004820152601560248201526000805160206158f4833981519152604482015290519081900360640190fd5b600280546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a19181900360200190a150565b6002546001600160a01b03163314612865576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b6010805482151560ff19909116811790915560408051918252517f4eb87a5935d402aa24c01b45bfb30adefcd2328b480f2d967864de4b64ea929f9181900360200190a150565b60606128b6615750565b60008381526017602090815260409182902082516101808101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561293657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612918575b505050918352505060028201546001600160a01b0316602080830191909152600383015460408301526004830154606083015260058301546080830152600683015460ff908116151560a0840152600784015460c0840152600884015460e08401526009840154610100840152600a840154610120840152600b9093015490921615156101409091015201519392505050565b600b6020526000908152604090205481565b60075481565b3360009081526015602052604090205460ff16612a33576040805162461bcd60e51b81526020600482015260196024820152600080516020615ae5833981519152604482015290519081900360640190fd5b601354601154808210612a47575050611a39565b80841115612a53578093505b83821015612bb957600060118381548110612a6a57fe5b90600052602060002001549050306001600160a01b03166327b42c0f82866040518363ffffffff1660e01b815260040180838152602001826001600160a01b0316815260200192505050602060405180830381600087803b158015612ace57600080fd5b505af1925050508015612af357506040513d6020811015612aee57600080fd5b505160015b612b87576040805163225fc9fd60e01b8152600481018390526001600160a01b03861660248201529051309163225fc9fd9160448083019260209291908290030181600087803b158015612b4657600080fd5b505af1925050508015612b6b57506040513d6020811015612b6657600080fd5b505160015b612b7457612b82565b80612b80575050612bb9565b505b612b95565b80612b93575050612bb9565b505b60118381548110612ba257fe5b600091825260208220015550600190910190612a53565b506013555050565b60135481565b6002546001600160a01b03163314612c14576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b600880546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f828abcccea18192c21d645e575652c49e20b986dab777906fc473d056b01b6a89181900360200190a150565b60026000541415612cae576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b6002600055600c54821015612cf45760405162461bcd60e51b815260040180806020018281038252602481526020018061588f6024913960400191505060405180910390fd5b813414612d325760405162461bcd60e51b81526004018080602001828103825260218152602001806158d36021913960400191505060405180910390fd5b885160011480612d43575088516002145b612d7e5760405162461bcd60e51b815260040180806020018281038252602481526020018061593f6024913960400191505060405180910390fd5b612d86614606565b612d8f81614672565b8615612e415760045489516001600160a01b0390911690631b827878908b90600090612db757fe5b602002602001015133308b6040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001828152602001945050505050600060405180830381600087803b158015612e2857600080fd5b505af1158015612e3c573d6000803e3d6000fd5b505050505b61202e338a8a8a8a8a8a8a8a60006146e6565b600f5481565b6001546001600160a01b03163314612ea7576040805162461bcd60e51b815260206004820152601560248201526000805160206158f4833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314612f16576040805162461bcd60e51b815260206004820152601560248201526000805160206158f4833981519152604482015290519081900360640190fd5b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015612f6d57600080fd5b505af1158015612f81573d6000803e3d6000fd5b505050506040513d6020811015612f9757600080fd5b5050505050565b60026000541415612fe4576040805162461bcd60e51b815260206004820152601f60248201526000805160206158b3833981519152604482015290519081900360640190fd5b6002600055600c5482101561302a5760405162461bcd60e51b815260040180806020018281038252602481526020018061588f6024913960400191505060405180910390fd5b8134146130685760405162461bcd60e51b81526004018080602001828103825260218152602001806158d36021913960400191505060405180910390fd5b895160011480613079575089516002145b6130b45760405162461bcd60e51b815260040180806020018281038252602481526020018061593f6024913960400191505060405180910390fd5b801561313e576005548a516001600160a01b03909116908b9060001981019081106130db57fe5b60200260200101516001600160a01b03161461313e576040805162461bcd60e51b815260206004820152601d60248201527f506f736974696f6e526f757465723a20696e76616c6964205f70617468000000604482015290519081900360640190fd5b613146614606565b613159338b8b8b8b8b8b8b8b8b8b6149c6565b505060016000555050505050505050565b6002546001600160a01b031633146131b7576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b60005b83518110156132525760008482815181106131d157fe5b602002602001015190508382815181106131e757fe5b6020026020010151600a6000836001600160a01b03166001600160a01b031681526020019081526020016000208190555082828151811061322457fe5b6020908102919091018101516001600160a01b039092166000908152600b90915260409020556001016131ba565b507fae32d569b058895b9620d6552b09aaffedc9a6f396be4d595a224ad09f8b213983838360405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156132bf5781810151838201526020016132a7565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156132fe5781810151838201526020016132e6565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561333d578181015183820152602001613325565b50505050905001965050505050505060405180910390a1505050565b6002546001600160a01b031633146133a6576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b6001600160a01b038216600090815260096020526040902054806133ca5750611a39565b6001600160a01b0383166000818152600960205260408120556133ee908383613cab565b604080516001600160a01b0380861682528416602082015280820183905290517f4f1b51dd7a2fcb861aa2670f668be66835c4ee12b4bbbf037e4d0018f39819e49181900360600190a1505050565b60135460115460145460125490919293565b3360009081526015602052604090205460ff166134a1576040805162461bcd60e51b81526020600482015260196024820152600080516020615ae5833981519152604482015290519081900360640190fd5b6014546012548082106134b5575050611a39565b808411156134c1578093505b83821015613627576000601283815481106134d857fe5b90600052602060002001549050306001600160a01b0316630d4d003d82866040518363ffffffff1660e01b815260040180838152602001826001600160a01b0316815260200192505050602060405180830381600087803b15801561353c57600080fd5b505af192505050801561356157506040513d602081101561355c57600080fd5b505160015b6135f55760408051633051b17160e11b8152600481018390526001600160a01b0386166024820152905130916360a362e29160448083019260209291908290030181600087803b1580156135b457600080fd5b505af19250505080156135d957506040513d60208110156135d457600080fd5b505160015b6135e2576135f0565b806135ee575050613627565b505b613603565b80613601575050613627565b505b6012838154811061361057fe5b6000918252602082200155506001909101906134c1565b506014555050565b6002546001600160a01b031681565b6004546001600160a01b031681565b60186020526000908152604090205481565b6017602052600090815260409020805460028201546003830154600484015460058501546006860154600787015460088801546009890154600a8a0154600b909a01546001600160a01b03998a169a999098169896979596949560ff94851695939492939192168b565b6003546001600160a01b031681565b6002546001600160a01b03163314613725576040805162461bcd60e51b815260206004820152601e60248201526000805160206159f3833981519152604482015290519081900360640190fd5b600c8190556040805182815290517f52a8358457e20bbb36e4086b83fb0749599f1893fe4c35a876c46dc4886d12db9181900360200190a150565b600042613778600f5485614ced90919063ffffffff16565b116137b45760405162461bcd60e51b8152600401808060200182810382526023815260200180615b526023913960400191505060405180910390fd5b6000333014806137d357503360009081526015602052604090205460ff165b60105490915060ff161580156137e7575080155b15613827576040805162461bcd60e51b81526020600482015260196024820152600080516020615ae5833981519152604482015290519081900360640190fd5b801561384d5743613843600d5487614ced90919063ffffffff16565b11159150506138f1565b336001600160a01b03841614613898576040805162461bcd60e51b81526020600482015260196024820152600080516020615ae5833981519152604482015290519081900360640190fd5b426138ae600e5486614ced90919063ffffffff16565b11156138eb5760405162461bcd60e51b8152600401808060200182810382526028815260200180615a946028913960400191505060405180910390fd5b60019150505b9392505050565b6003546000906001600160a01b031684156139c95782816001600160a01b03166381a612d68a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561395b57600080fd5b505afa15801561396f573d6000803e3d6000fd5b505050506040513d602081101561398557600080fd5b505110156139c45760405162461bcd60e51b81526004018080602001828103825260308152602001806159c36030913960400191505060405180910390fd5b613a80565b82816001600160a01b031663e124e6d28a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015613a1757600080fd5b505afa158015613a2b573d6000803e3d6000fd5b505050506040513d6020811015613a4157600080fd5b50511115613a805760405162461bcd60e51b8152600401808060200182810382526031815260200180615a636031913960400191505060405180910390fd5b6000816001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015613abb57600080fd5b505afa158015613acf573d6000803e3d6000fd5b505050506040513d6020811015613ae557600080fd5b5051604080516306d63c1d60e41b81526001600160a01b038581166004830152915192935090831691636d63c1d09160248082019260009290919082900301818387803b158015613b3557600080fd5b505af1158015613b49573d6000803e3d6000fd5b505050506000600460009054906101000a90046001600160a01b03166001600160a01b0316632662166b8d8d8d8d8d8d8d6040518863ffffffff1660e01b815260040180886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b031681526020018581526020018481526020018315158152602001826001600160a01b03168152602001975050505050505050602060405180830381600087803b158015613c0057600080fd5b505af1158015613c14573d6000803e3d6000fd5b505050506040513d6020811015613c2a57600080fd5b50516040805163d3c87bbb60e01b81526001600160a01b03868116600483015291519293509084169163d3c87bbb9160248082019260009290919082900301818387803b158015613c7a57600080fd5b505af1158015613c8e573d6000803e3d6000fd5b50505050613c9c8c89614d45565b9b9a5050505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613cfd908490614ece565b505050565b6000835160021415613d4957613d4284600081518110613d1e57fe5b602002602001015185600181518110613d3357fe5b60200260200101518585614f7f565b90506138f1565b60405162461bcd60e51b8152600401808060200182810382526029815260200180615abc6029913960400191505060405180910390fd5b60055460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015613dcd57600080fd5b505af1158015613de1573d6000803e3d6000fd5b50506040516001600160a01b038416925084156108fc02915084906000818181858888f19350505050158015613cfd573d6000803e3d6000fd5b60055460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015613e6857600080fd5b505af1158015613e7c573d6000803e3d6000fd5b50611a39925050506001600160a01b03821683613f46565b60006138f183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250615055565b600080333014806137d357503360009081526015602052604090205460ff1660105490915060ff161580156137e7575080613827576040805162461bcd60e51b81526020600482015260196024820152600080516020615ae5833981519152604482015290519081900360640190fd5b80471015613f9b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114613fe6576040519150601f19603f3d011682016040523d82523d6000602084013e613feb565b606091505b5050905080613cfd5760405162461bcd60e51b815260040180806020018281038252603a815260200180615963603a913960400191505060405180910390fd5b60008061403c8888888888886150ec565b905080156140fb57600061407361271061406d614066600654612710613e9490919063ffffffff16565b8a906152c9565b90615322565b905060006140818883613e94565b905060008960018b51038151811061409557fe5b602002602001015190506140d78260096000846001600160a01b03166001600160a01b0316815260200190815260200160002054614ced90919063ffffffff16565b6001600160a01b039091166000908152600960205260409020555091506141009050565b859150505b9695505050505050565b6003546001600160a01b031682156141d85781816001600160a01b031663e124e6d2876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561416a57600080fd5b505afa15801561417e573d6000803e3d6000fd5b505050506040513d602081101561419457600080fd5b505111156141d35760405162461bcd60e51b8152600401808060200182810382526031815260200180615a636031913960400191505060405180910390fd5b61428f565b81816001600160a01b03166381a612d6876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561422657600080fd5b505afa15801561423a573d6000803e3d6000fd5b505050506040513d602081101561425057600080fd5b5051101561428f5760405162461bcd60e51b81526004018080602001828103825260308152602001806159c36030913960400191505060405180910390fd5b8215614380576001600160a01b0385166000908152600a6020526040902054801580159061433e57508061433c86846001600160a01b031663f07456ce8a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561430a57600080fd5b505afa15801561431e573d6000803e3d6000fd5b505050506040513d602081101561433457600080fd5b505190614ced565b115b1561437a5760405162461bcd60e51b815260040180806020018281038252602e815260200180615861602e913960400191505060405180910390fd5b50614435565b6001600160a01b0385166000908152600b602052604090205480158015906143f75750806143f586846001600160a01b0316638a78daa88a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561430a57600080fd5b115b156144335760405162461bcd60e51b815260040180806020018281038252602f815260200180615a13602f913960400191505060405180910390fd5b505b6000816001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561447057600080fd5b505afa158015614484573d6000803e3d6000fd5b505050506040513d602081101561449a57600080fd5b5051604080516306d63c1d60e41b81526001600160a01b038581166004830152915192935090831691636d63c1d09160248082019260009290919082900301818387803b1580156144ea57600080fd5b505af11580156144fe573d6000803e3d6000fd5b50506004805460408051630f8ee8bb60e11b81526001600160a01b038e8116948201949094528c841660248201528b84166044820152606481018b905289151560848201529051929091169350631f1dd176925060a48082019260009290919082900301818387803b15801561457357600080fd5b505af1158015614587573d6000803e3d6000fd5b50505050806001600160a01b031663d3c87bbb836040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156145da57600080fd5b505af11580156145ee573d6000803e3d6000fd5b505050506145fc8886615361565b5050505050505050565b341561467057600560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561465c57600080fd5b505af1158015612f97573d6000803e3d6000fd5b565b801580159061468b57506008546001600160a01b031615155b156146e357600854604080516356b4b2ad60e01b81523360048201526024810184905290516001600160a01b03909216916356b4b2ad9160448082019260009290919082900301818387803b15801561465c57600080fd5b50565b6001600160a01b038a1660009081526016602052604081205461470a906001614ced565b6001600160a01b038c166000908152601660205260409020819055905061472f615750565b6040518061018001604052808d6001600160a01b031681526020018c81526020018b6001600160a01b031681526020018a81526020018981526020018881526020018715158152602001868152602001858152602001438152602001428152602001841515815250905060006147a58d84612713565b6000818152601760209081526040909120845181546001600160a01b0319166001600160a01b03909116178155848201518051939450859391926147f1926001850192909101906157c7565b5060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555090505060118190806001815401808255809150506001900390600052602060002001600090919091909150558c6001600160a01b03167fa89f00a1c1cd0de066abac1a05f9314520fef2a9b98f6a99ff4548ed1161c03c8d8d8d8d8d8d8d8d8c43423a60405180806020018d6001600160a01b031681526020018c81526020018b81526020018a8152602001891515815260200188815260200187815260200186815260200185815260200184815260200183815260200182810382528e818151815260200191508051906020019060200280838360005b83811015614999578181015183820152602001614981565b505050509050019d505050505050505050505050505060405180910390a250505050505050505050505050565b6001600160a01b038b166000908152601860205260408120546149ea906001614ced565b6001600160a01b038d1660009081526018602052604090208190559050614a0f6156ab565b604051806101a001604052808e6001600160a01b031681526020018d81526020018c6001600160a01b031681526020018b81526020018a81526020018915158152602001886001600160a01b0316815260200187815260200186815260200185815260200143815260200142815260200184151581525090506000614a948e84612713565b6000818152601960209081526040909120845181546001600160a01b0319166001600160a01b0390911617815584820151805193945085939192614ae0926001850192909101906157c7565b5060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a015561018082015181600b0160006101000a81548160ff02191690831515021790555090505060128190806001815401808255809150506001900390600052602060002001600090919091909150558d6001600160a01b03167f506f2634e4508d88b04b7511af75c6d4c29b2b6f4f5067676b9400b28f3761d28e8e8e8e8e8e8e8e8e8d434260405180806020018d6001600160a01b031681526020018c81526020018b81526020018a15158152602001896001600160a01b0316815260200188815260200187815260200186815260200185815260200184815260200183815260200182810382528e818151815260200191508051906020019060200280838360005b83811015614cbf578181015183820152602001614ca7565b505050509050019d505050505050505050505050505060405180910390a25050505050505050505050505050565b6000828201838110156138f1576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b6008546001600160a01b031680614d5c5750611a39565b600080826001600160a01b031663534ef883866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b158015614dab57600080fd5b505afa158015614dbf573d6000803e3d6000fd5b505050506040513d6040811015614dd557600080fd5b508051602090910151909250905081614df057505050611a39565b7f474c763ff84bf2c2039a6d9fea955ecd0f724030e3c365b91169c6a16fe751b78585600360009054906101000a90046001600160a01b03166001600160a01b031663318bc6896040518163ffffffff1660e01b815260040160206040518083038186803b158015614e6157600080fd5b505afa158015614e75573d6000803e3d6000fd5b505050506040513d6020811015614e8b57600080fd5b5051604080516001600160a01b03948516815260208101939093528281019190915260608201869052918416608082015290519081900360a00190a15050505050565b6060614f23826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166154679092919063ffffffff16565b805190915015613cfd57808060200190516020811015614f4257600080fd5b5051613cfd5760405162461bcd60e51b815260040180806020018281038252602a815260200180615b28602a913960400191505060405180910390fd5b60035460408051634998b10960e11b81526001600160a01b03878116600483015286811660248301528481166044830152915160009384931691639331621291606480830192602092919082900301818787803b158015614fdf57600080fd5b505af1158015614ff3573d6000803e3d6000fd5b505050506040513d602081101561500957600080fd5b505190508381101561504c5760405162461bcd60e51b815260040180806020018281038252602b815260200180615914602b913960400191505060405180910390fd5b95945050505050565b600081848411156150e45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156150a9578181015183820152602001615091565b50505050905090810190601f1680156150d65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000826150fb57506000614100565b8161510857506001614100565b60008660018851038151811061511a57fe5b602090810291909101015160035460408051634a3f088d60e01b81526001600160a01b038c81166004830152808516602483015289811660448301528815156064830152915193945091169160009182918491634a3f088d91608480830192610100929190829003018186803b15801561519357600080fd5b505afa1580156151a7573d6000803e3d6000fd5b505050506040513d6101008110156151be57600080fd5b5080516020909101519092509050816151de576000945050505050614100565b60006151ea8388614ced565b90506000846001600160a01b0316630a48d5a9878d6040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b15801561524357600080fd5b505afa158015615257573d6000803e3d6000fd5b505050506040513d602081101561526d57600080fd5b50519050600061527d8483614ced565b905060006152918561406d886127106152c9565b905060006152b28361406d60075461271001886152c990919063ffffffff16565b919091109f9e505050505050505050505050505050565b6000826152d857506000612753565b828202828482816152e557fe5b04146138f15760405162461bcd60e51b8152600401808060200182810382526021815260200180615a426021913960400191505060405180910390fd5b60006138f183836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b81525061547e565b6008546001600160a01b0316806153785750611a39565b600080826001600160a01b031663534ef883866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b1580156153c757600080fd5b505afa1580156153db573d6000803e3d6000fd5b505050506040513d60408110156153f157600080fd5b5080516020918201516003546040805163318bc68960e01b815290519396509194507fc2414023ce7002ee98557d1e7be21e5559073336f2217ee5f9b2e50fd85f71ee93899389936001600160a01b039093169263318bc689926004808301939192829003018186803b158015614e6157600080fd5b606061547684846000856154e3565b949350505050565b600081836154cd5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156150a9578181015183820152602001615091565b5060008385816154d957fe5b0495945050505050565b6060824710156155245760405162461bcd60e51b815260040180806020018281038252602681526020018061599d6026913960400191505060405180910390fd5b61552d8561563f565b61557e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106155bd5780518252601f19909201916020918201910161559e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461561f576040519150601f19603f3d011682016040523d82523d6000602084013e615624565b606091505b5091509150615634828286615645565b979650505050505050565b3b151590565b606083156156545750816138f1565b8251156156645782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156150a9578181015183820152602001615091565b604051806101a0016040528060006001600160a01b031681526020016060815260200160006001600160a01b03168152602001600081526020016000815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b50805460008255906000526020600020908101906146e3919061582c565b60405180610180016040528060006001600160a01b031681526020016060815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090810192821561581c579160200282015b8281111561581c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906157e7565b50615828929150615841565b5090565b5b80821115615828576000815560010161582d565b5b808211156158285780546001600160a01b031916815560010161584256fe42617365506f736974696f6e4d616e616765723a206d617820676c6f62616c206c6f6e6773206578636565646564506f736974696f6e526f757465723a20696e76616c696420657865637574696f6e4665655265656e7472616e637947756172643a207265656e7472616e742063616c6c00506f736974696f6e526f757465723a20696e76616c6964206d73672e76616c7565476f7665726e61626c653a20666f7262696464656e000000000000000000000042617365506f736974696f6e4d616e616765723a20696e73756666696369656e7420616d6f756e744f7574506f736974696f6e526f757465723a20696e76616c6964205f70617468206c656e677468416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c42617365506f736974696f6e4d616e616765723a206d61726b207072696365206c6f776572207468616e206c696d697442617365506f736974696f6e4d616e616765723a20666f7262696464656e000042617365506f736974696f6e4d616e616765723a206d617820676c6f62616c2073686f727473206578636565646564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7742617365506f736974696f6e4d616e616765723a206d61726b20707269636520686967686572207468616e206c696d6974506f736974696f6e526f757465723a206d696e2064656c6179206e6f74207965742070617373656442617365506f736974696f6e4d616e616765723a20696e76616c6964205f706174682e6c656e677468506f736974696f6e526f757465723a20666f7262696464656e0000000000000042617365506f736974696f6e4d616e616765723a20696e76616c69642073656e6465725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564506f736974696f6e526f757465723a2072657175657374206861732065787069726564a164736f6c634300060c000a",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23313,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 3,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "gov",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1547,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1549,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "vault",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1551,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "router",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1553,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "weth",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1555,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "depositFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1558,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionBufferBps",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1560,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "referralStorage",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 1564,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "feeReserves",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1569,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxGlobalLongSizes",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1574,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxGlobalShortSizes",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6594,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minExecutionFee",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 6596,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minBlockDelayKeeper",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 6598,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "minTimeDelayPublic",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 6600,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "maxTimeDelay",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 6603,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "isLeverageEnabled",
        "offset": 0,
        "slot": "16",
        "type": "t_bool"
      },
      {
        "astId": 6606,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequestKeys",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 6609,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequestKeys",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 6612,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequestKeysStart",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 6615,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequestKeysStart",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 6619,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "isPositionKeeper",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6623,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionsIndex",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6627,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "increasePositionRequests",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_bytes32,t_struct(IncreasePositionRequest)6564_storage)"
      },
      {
        "astId": 6631,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionsIndex",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6635,
        "contract": "contracts/core/PositionRouter.sol:PositionRouter",
        "label": "decreasePositionRequests",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_bytes32,t_struct(DecreasePositionRequest)6592_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(DecreasePositionRequest)6592_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PositionRouter.DecreasePositionRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(DecreasePositionRequest)6592_storage"
      },
      "t_mapping(t_bytes32,t_struct(IncreasePositionRequest)6564_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PositionRouter.IncreasePositionRequest)",
        "numberOfBytes": "32",
        "value": "t_struct(IncreasePositionRequest)6564_storage"
      },
      "t_struct(DecreasePositionRequest)6592_storage": {
        "encoding": "inplace",
        "label": "struct PositionRouter.DecreasePositionRequest",
        "members": [
          {
            "astId": 6566,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6569,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "path",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 6571,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "indexToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6573,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "collateralDelta",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6575,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6577,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "isLong",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 6579,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "receiver",
            "offset": 1,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 6581,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "acceptablePrice",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 6583,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "minOut",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 6585,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "executionFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 6587,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 6589,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 6591,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "withdrawETH",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(IncreasePositionRequest)6564_storage": {
        "encoding": "inplace",
        "label": "struct PositionRouter.IncreasePositionRequest",
        "members": [
          {
            "astId": 6540,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6543,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "path",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 6545,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "indexToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6547,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "amountIn",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6549,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "minOut",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6551,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 6553,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "isLong",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 6555,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "acceptablePrice",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 6557,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "executionFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 6559,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 6561,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "blockTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 6563,
            "contract": "contracts/core/PositionRouter.sol:PositionRouter",
            "label": "hasCollateralInETH",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}